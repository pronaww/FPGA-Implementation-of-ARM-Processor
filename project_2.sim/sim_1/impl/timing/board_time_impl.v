// Copyright 1986-2016 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2016.4 (lin64) Build 1756540 Mon Jan 23 19:11:19 MST 2017
// Date        : Sat Apr 28 10:16:33 2018
// Host        : pranav-HP-Pavilion-Notebook running 64-bit Ubuntu 17.10
// Command     : write_verilog -mode timesim -nolib -sdf_anno true -force -file
//               /home/pranav/Downloads/project_2_LAB5new/project_2_LAB5/project_2.sim/sim_1/impl/timing/board_time_impl.v
// Design      : board
// Purpose     : This verilog netlist is a timing simulation representation of the design and should not be modified or
//               synthesized. Please ensure that this netlist is used with the corresponding SDF file.
// Device      : xc7a35tcpg236-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps
`define XIL_TIMING

module RAM128X1D_UNIQ_BASE_
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000041),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000041),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3795
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000001),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000001),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3796
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000001),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000001),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3797
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000A0),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000A0),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3798
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000C0),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000C0),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3799
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000C8),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000C8),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3800
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000080),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000080),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3801
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000020),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000020),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3802
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3803
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3804
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3805
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000A0),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000A0),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3806
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000026),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000026),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3807
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000C9),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000C9),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3808
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000004),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000004),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3809
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000CB),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000CB),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3810
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000DF),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000DF),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3811
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000055),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000055),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3812
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000002),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000002),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3813
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000010),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000010),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3814
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000020),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000020),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3815
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000DF),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000DF),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3816
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000C0),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000C0),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3817
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000D7),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000D7),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3818
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000FF),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h00000000000000FF),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3819
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000081),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000081),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3820
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000001),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000001),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3821
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3822
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3823
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3824
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3825
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000001),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000001000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000001),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3857
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3858
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3859
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3860
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3861
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3862
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3863
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3864
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3865
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3866
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3867
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3868
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3869
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3870
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3871
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3872
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3873
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3874
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3875
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3876
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3877
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3878
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3879
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3880
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3881
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3882
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3883
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3884
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3885
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3886
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3887
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3888
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3889
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3890
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3891
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3892
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3893
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3894
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3895
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3896
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3897
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3898
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3899
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3900
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3901
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3902
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3903
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3904
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3905
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3906
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3907
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3908
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3909
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3910
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3911
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3912
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3913
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3914
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3915
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3916
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3917
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3918
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3919
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3920
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3921
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3922
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3923
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3924
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3925
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3926
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3927
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3928
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3929
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3930
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3931
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3932
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3933
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3934
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3935
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3936
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3937
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3938
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3939
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3940
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3941
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3942
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3943
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3944
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3945
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3946
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3947
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3948
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3949
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3950
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3951
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3952
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3953
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3954
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3955
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3956
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3957
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3958
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3959
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3960
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3961
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3962
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3963
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3964
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3965
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3966
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3967
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3968
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3969
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3970
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3971
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3972
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3973
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3974
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3975
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3976
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3977
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3978
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3979
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3980
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3981
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3982
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3983
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3984
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3985
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3986
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3987
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3988
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3989
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3990
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3991
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3992
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3993
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3994
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3995
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3996
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3997
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3998
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD3999
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4000
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4001
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4002
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4003
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4004
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4005
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4006
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4007
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4008
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4009
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4010
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4011
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4012
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4013
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4014
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4015
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4016
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4017
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4018
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4019
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4020
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4021
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4022
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4023
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4024
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4025
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4026
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4027
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4028
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4029
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4030
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4031
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4032
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4033
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4034
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4035
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4036
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4037
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4038
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4039
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4040
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4041
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4042
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4043
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4044
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4045
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4046
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4047
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4048
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4049
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4050
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4051
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4052
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4053
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4054
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4055
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4056
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4057
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4058
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4059
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4060
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4061
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4062
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4063
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4064
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4065
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4066
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4067
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4068
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4069
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4070
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4071
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4072
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4073
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4074
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4075
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4076
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4077
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4078
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4079
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4080
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4081
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4082
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4083
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4084
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4085
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4086
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4087
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4088
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4089
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4090
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4091
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4092
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4093
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4094
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4095
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4096
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4097
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4098
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4099
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4100
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4101
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4102
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4103
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4104
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4105
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4106
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4107
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4108
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4109
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4110
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4111
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4112
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4113
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4114
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4115
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4116
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4117
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4118
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4119
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4120
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4121
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4122
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4123
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4124
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4125
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4126
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4127
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4128
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4129
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4130
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4131
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4132
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4133
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4134
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4135
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4136
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4137
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4138
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4139
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4140
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4141
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4142
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4143
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4144
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4145
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4146
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4147
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4148
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4149
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4150
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4151
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4152
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4153
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4154
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4155
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4156
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4157
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4158
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4159
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4160
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4161
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4162
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4163
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4164
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4165
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4166
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4167
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4168
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4169
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4170
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4171
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4172
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4173
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4174
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4175
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4176
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4177
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4178
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4179
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4180
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4181
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4182
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4183
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4184
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4185
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4186
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4187
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4188
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4189
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4190
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4191
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4192
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4193
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4194
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4195
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4196
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4197
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4198
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4199
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4200
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4201
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4202
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4203
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4204
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4205
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4206
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4207
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4208
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4209
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4210
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4211
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4212
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4213
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4214
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4215
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4216
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4217
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4218
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4219
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4220
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4221
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4222
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4223
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4224
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4225
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4226
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4227
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4228
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4229
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4230
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4231
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4232
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4233
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4234
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4235
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4236
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4237
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4238
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4239
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4240
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4241
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4242
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4243
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4244
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4245
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4246
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4247
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4248
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4249
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4250
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4251
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4252
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4253
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4254
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4255
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4256
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4257
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4258
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4259
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4260
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4261
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4262
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4263
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4264
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4265
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4266
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4267
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4268
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4269
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4270
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4271
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4272
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4273
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4274
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4275
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4276
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4277
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4278
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4279
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4280
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4281
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4282
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4283
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4284
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4285
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4286
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4287
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4288
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4289
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4290
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4291
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4292
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4293
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4294
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4295
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4296
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4297
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4298
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4299
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4300
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4301
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4302
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4303
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4304
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4305
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4306
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4307
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4308
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4309
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4310
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4311
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4312
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4313
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4314
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4315
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4316
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4317
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4318
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4319
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4320
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4321
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4322
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4323
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4324
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4325
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4326
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4327
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4328
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4329
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4330
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4331
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4332
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4333
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4334
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4335
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM128X1D_HD4336
   (DPO,
    SPO,
    A,
    D,
    DPRA,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input [6:0]A;
  input D;
  input [6:0]DPRA;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire A5;
  wire A6;
  wire D;
  wire DPO;
  wire DPO0;
  wire DPO1;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire DPRA5;
  wire DPRA6;
  wire SPO;
  wire SPO0;
  wire SPO1;
  wire WCLK;
  wire WE;
  wire \NLW_DP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_DP.LOW_WADR7_UNCONNECTED ;
  wire \NLW_SP.HIGH_WADR7_UNCONNECTED ;
  wire \NLW_SP.LOW_WADR7_UNCONNECTED ;

  assign A0 = A[0];
  assign A1 = A[1];
  assign A2 = A[2];
  assign A3 = A[3];
  assign A4 = A[4];
  assign A5 = A[5];
  assign A6 = A[6];
  assign DPRA0 = DPRA[0];
  assign DPRA1 = DPRA[1];
  assign DPRA2 = DPRA[2];
  assign DPRA3 = DPRA[3];
  assign DPRA4 = DPRA[4];
  assign DPRA5 = DPRA[5];
  assign DPRA6 = DPRA[6];
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \DP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(DPO1),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \DP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(DPO0),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .RADR5(DPRA5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_DP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
  MUXF7 \F7.DP 
       (.I0(DPO0),
        .I1(DPO1),
        .O(DPO),
        .S(DPRA6));
  MUXF7 \F7.SP 
       (.I0(SPO0),
        .I1(SPO1),
        .O(SPO),
        .S(A6));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b11)) 
    \SP.HIGH 
       (.CLK(WCLK),
        .I(D),
        .O(SPO1),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.HIGH_WADR7_UNCONNECTED ),
        .WE(WE));
  RAMD64E #(
    .INIT(64'h0000000000000000),
    .IS_CLK_INVERTED(1'b0),
    .RAM_ADDRESS_MASK(2'b10),
    .RAM_ADDRESS_SPACE(2'b10)) 
    \SP.LOW 
       (.CLK(WCLK),
        .I(D),
        .O(SPO0),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .RADR5(A5),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WADR5(A5),
        .WADR6(A6),
        .WADR7(\NLW_SP.LOW_WADR7_UNCONNECTED ),
        .WE(WE));
endmodule

module RAM32X1S_UNIQ_BASE_
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3826
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3827
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3828
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3829
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3830
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3831
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3832
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3833
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3834
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3835
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3836
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3837
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3838
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3839
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3840
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3841
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3842
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3843
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3844
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3845
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3846
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3847
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3848
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3849
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3850
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3851
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3852
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3853
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3854
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3855
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module RAM32X1S_HD3856
   (O,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    WCLK,
    WE);
  output O;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire O;
  wire WCLK;
  wire WE;

  RAMS32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.ADR0(A0),
        .ADR1(A1),
        .ADR2(A2),
        .ADR3(A3),
        .ADR4(A4),
        .CLK(WCLK),
        .I(D),
        .O(O),
        .WE(WE));
endmodule

module Actrl
   (D,
    \pc_reg[31] ,
    \pc_reg[9] ,
    \pc_reg[9]_0 ,
    Q,
    DI,
    \pc_reg[31]_0 ,
    flags_sig,
    S,
    \pc_reg[0] ,
    out,
    data2,
    O,
    \FSM_sequential_state_reg[0] ,
    \FSM_sequential_state_reg[0]_0 ,
    op1,
    op2,
    \FSM_sequential_state_reg[0]_1 ,
    \FSM_sequential_state_reg[0]_2 ,
    \FSM_sequential_state_reg[0]_3 ,
    \FSM_sequential_state_reg[0]_4 ,
    \FSM_sequential_state_reg[0]_5 ,
    \FSM_sequential_state_reg[0]_6 ,
    \FSM_sequential_state_reg[0]_7 ,
    \FSM_sequential_state_reg[0]_8 ,
    \FSM_sequential_state_reg[0]_9 ,
    \FSM_sequential_state_reg[0]_10 ,
    \FSM_sequential_state_reg[0]_11 ,
    \FSM_sequential_state_reg[0]_12 ,
    \FSM_sequential_state_reg[0]_13 ,
    \FSM_sequential_state_reg[0]_14 ,
    \FSM_sequential_state_reg[0]_15 ,
    \FSM_sequential_state_reg[0]_16 ,
    \FSM_sequential_state_reg[0]_17 ,
    \FSM_sequential_state_reg[0]_18 ,
    \FSM_sequential_state_reg[0]_19 ,
    \FSM_sequential_state_reg[0]_20 ,
    \FSM_sequential_state_reg[0]_21 ,
    \FSM_sequential_state_reg[0]_22 ,
    \FSM_sequential_state_reg[0]_23 ,
    \FSM_sequential_state_reg[0]_24 ,
    \FSM_sequential_state_reg[0]_25 ,
    \FSM_sequential_state_reg[0]_26 ,
    \FSM_sequential_state_reg[0]_27 ,
    \FSM_sequential_state_reg[0]_28 ,
    \FSM_sequential_state_reg[0]_29 ,
    \FSM_sequential_state_reg[0]_30 ,
    \FSM_sequential_state_reg[0]_31 ,
    \FSM_sequential_state_reg[0]_32 ,
    \FSM_sequential_state_reg[0]_33 ,
    \FSM_sequential_state_reg[0]_34 ,
    \FSM_sequential_state_reg[0]_35 ,
    \FSM_sequential_state_reg[0]_36 ,
    \FSM_sequential_state_reg[0]_37 ,
    \FSM_sequential_state_reg[0]_38 ,
    \FSM_sequential_state_reg[0]_39 ,
    \FSM_sequential_state_reg[0]_40 ,
    \FSM_sequential_state_reg[0]_41 ,
    \FSM_sequential_state_reg[0]_42 ,
    \FSM_sequential_state_reg[0]_43 ,
    \FSM_sequential_state_reg[0]_44 ,
    \FSM_sequential_state_reg[0]_45 ,
    \FSM_sequential_state_reg[0]_46 ,
    \FSM_sequential_state_reg[0]_47 ,
    \pc_reg[27] ,
    \FSM_sequential_state_reg[0]_48 ,
    data5,
    \FSM_sequential_state_reg[0]_49 ,
    \pc_reg[27]_0 ,
    \FSM_sequential_state_reg[0]_50 ,
    \FSM_sequential_state_reg[0]_51 ,
    \FSM_sequential_state_reg[0]_52 ,
    \FSM_sequential_state_reg[0]_53 ,
    \FSM_sequential_state_reg[0]_54 ,
    \FSM_sequential_state_reg[0]_55 ,
    \FSM_sequential_state_reg[0]_56 ,
    \FSM_sequential_state_reg[0]_57 ,
    c_31,
    \FSM_sequential_state_reg[0]_58 ,
    data4,
    flags_master,
    Fset,
    flags_mult,
    \FSM_sequential_state_reg[0]_59 );
  output [0:0]D;
  output \pc_reg[31] ;
  output \pc_reg[9] ;
  output \pc_reg[9]_0 ;
  output [2:0]Q;
  output [0:0]DI;
  output [31:0]\pc_reg[31]_0 ;
  output [0:0]flags_sig;
  output [0:0]S;
  output \pc_reg[0] ;
  input [3:0]out;
  input [4:0]data2;
  input [0:0]O;
  input \FSM_sequential_state_reg[0] ;
  input \FSM_sequential_state_reg[0]_0 ;
  input [31:0]op1;
  input [31:0]op2;
  input \FSM_sequential_state_reg[0]_1 ;
  input \FSM_sequential_state_reg[0]_2 ;
  input \FSM_sequential_state_reg[0]_3 ;
  input \FSM_sequential_state_reg[0]_4 ;
  input \FSM_sequential_state_reg[0]_5 ;
  input \FSM_sequential_state_reg[0]_6 ;
  input \FSM_sequential_state_reg[0]_7 ;
  input \FSM_sequential_state_reg[0]_8 ;
  input \FSM_sequential_state_reg[0]_9 ;
  input \FSM_sequential_state_reg[0]_10 ;
  input \FSM_sequential_state_reg[0]_11 ;
  input \FSM_sequential_state_reg[0]_12 ;
  input \FSM_sequential_state_reg[0]_13 ;
  input \FSM_sequential_state_reg[0]_14 ;
  input \FSM_sequential_state_reg[0]_15 ;
  input \FSM_sequential_state_reg[0]_16 ;
  input \FSM_sequential_state_reg[0]_17 ;
  input \FSM_sequential_state_reg[0]_18 ;
  input \FSM_sequential_state_reg[0]_19 ;
  input \FSM_sequential_state_reg[0]_20 ;
  input \FSM_sequential_state_reg[0]_21 ;
  input \FSM_sequential_state_reg[0]_22 ;
  input \FSM_sequential_state_reg[0]_23 ;
  input \FSM_sequential_state_reg[0]_24 ;
  input \FSM_sequential_state_reg[0]_25 ;
  input \FSM_sequential_state_reg[0]_26 ;
  input \FSM_sequential_state_reg[0]_27 ;
  input \FSM_sequential_state_reg[0]_28 ;
  input \FSM_sequential_state_reg[0]_29 ;
  input \FSM_sequential_state_reg[0]_30 ;
  input \FSM_sequential_state_reg[0]_31 ;
  input \FSM_sequential_state_reg[0]_32 ;
  input \FSM_sequential_state_reg[0]_33 ;
  input \FSM_sequential_state_reg[0]_34 ;
  input \FSM_sequential_state_reg[0]_35 ;
  input \FSM_sequential_state_reg[0]_36 ;
  input \FSM_sequential_state_reg[0]_37 ;
  input \FSM_sequential_state_reg[0]_38 ;
  input \FSM_sequential_state_reg[0]_39 ;
  input \FSM_sequential_state_reg[0]_40 ;
  input \FSM_sequential_state_reg[0]_41 ;
  input \FSM_sequential_state_reg[0]_42 ;
  input \FSM_sequential_state_reg[0]_43 ;
  input \FSM_sequential_state_reg[0]_44 ;
  input \FSM_sequential_state_reg[0]_45 ;
  input \FSM_sequential_state_reg[0]_46 ;
  input \FSM_sequential_state_reg[0]_47 ;
  input \pc_reg[27] ;
  input \FSM_sequential_state_reg[0]_48 ;
  input [14:0]data5;
  input \FSM_sequential_state_reg[0]_49 ;
  input \pc_reg[27]_0 ;
  input \FSM_sequential_state_reg[0]_50 ;
  input \FSM_sequential_state_reg[0]_51 ;
  input \FSM_sequential_state_reg[0]_52 ;
  input \FSM_sequential_state_reg[0]_53 ;
  input \FSM_sequential_state_reg[0]_54 ;
  input \FSM_sequential_state_reg[0]_55 ;
  input \FSM_sequential_state_reg[0]_56 ;
  input \FSM_sequential_state_reg[0]_57 ;
  input c_31;
  input \FSM_sequential_state_reg[0]_58 ;
  input [18:0]data4;
  input [0:0]flags_master;
  input Fset;
  input [0:0]flags_mult;
  input [3:0]\FSM_sequential_state_reg[0]_59 ;

  wire [0:0]D;
  wire [0:0]DI;
  wire \DataPathInstantiate/ALU_Instantiate/c_321 ;
  wire \DataPathInstantiate/ALU_Instantiate/c_3215_out ;
  wire \DataPathInstantiate/ALU_Instantiate/c_3219_out ;
  wire \FSM_sequential_state_reg[0] ;
  wire \FSM_sequential_state_reg[0]_0 ;
  wire \FSM_sequential_state_reg[0]_1 ;
  wire \FSM_sequential_state_reg[0]_10 ;
  wire \FSM_sequential_state_reg[0]_11 ;
  wire \FSM_sequential_state_reg[0]_12 ;
  wire \FSM_sequential_state_reg[0]_13 ;
  wire \FSM_sequential_state_reg[0]_14 ;
  wire \FSM_sequential_state_reg[0]_15 ;
  wire \FSM_sequential_state_reg[0]_16 ;
  wire \FSM_sequential_state_reg[0]_17 ;
  wire \FSM_sequential_state_reg[0]_18 ;
  wire \FSM_sequential_state_reg[0]_19 ;
  wire \FSM_sequential_state_reg[0]_2 ;
  wire \FSM_sequential_state_reg[0]_20 ;
  wire \FSM_sequential_state_reg[0]_21 ;
  wire \FSM_sequential_state_reg[0]_22 ;
  wire \FSM_sequential_state_reg[0]_23 ;
  wire \FSM_sequential_state_reg[0]_24 ;
  wire \FSM_sequential_state_reg[0]_25 ;
  wire \FSM_sequential_state_reg[0]_26 ;
  wire \FSM_sequential_state_reg[0]_27 ;
  wire \FSM_sequential_state_reg[0]_28 ;
  wire \FSM_sequential_state_reg[0]_29 ;
  wire \FSM_sequential_state_reg[0]_3 ;
  wire \FSM_sequential_state_reg[0]_30 ;
  wire \FSM_sequential_state_reg[0]_31 ;
  wire \FSM_sequential_state_reg[0]_32 ;
  wire \FSM_sequential_state_reg[0]_33 ;
  wire \FSM_sequential_state_reg[0]_34 ;
  wire \FSM_sequential_state_reg[0]_35 ;
  wire \FSM_sequential_state_reg[0]_36 ;
  wire \FSM_sequential_state_reg[0]_37 ;
  wire \FSM_sequential_state_reg[0]_38 ;
  wire \FSM_sequential_state_reg[0]_39 ;
  wire \FSM_sequential_state_reg[0]_4 ;
  wire \FSM_sequential_state_reg[0]_40 ;
  wire \FSM_sequential_state_reg[0]_41 ;
  wire \FSM_sequential_state_reg[0]_42 ;
  wire \FSM_sequential_state_reg[0]_43 ;
  wire \FSM_sequential_state_reg[0]_44 ;
  wire \FSM_sequential_state_reg[0]_45 ;
  wire \FSM_sequential_state_reg[0]_46 ;
  wire \FSM_sequential_state_reg[0]_47 ;
  wire \FSM_sequential_state_reg[0]_48 ;
  wire \FSM_sequential_state_reg[0]_49 ;
  wire \FSM_sequential_state_reg[0]_5 ;
  wire \FSM_sequential_state_reg[0]_50 ;
  wire \FSM_sequential_state_reg[0]_51 ;
  wire \FSM_sequential_state_reg[0]_52 ;
  wire \FSM_sequential_state_reg[0]_53 ;
  wire \FSM_sequential_state_reg[0]_54 ;
  wire \FSM_sequential_state_reg[0]_55 ;
  wire \FSM_sequential_state_reg[0]_56 ;
  wire \FSM_sequential_state_reg[0]_57 ;
  wire \FSM_sequential_state_reg[0]_58 ;
  wire [3:0]\FSM_sequential_state_reg[0]_59 ;
  wire \FSM_sequential_state_reg[0]_6 ;
  wire \FSM_sequential_state_reg[0]_7 ;
  wire \FSM_sequential_state_reg[0]_8 ;
  wire \FSM_sequential_state_reg[0]_9 ;
  wire Fset;
  wire [0:0]O;
  wire [2:0]Q;
  wire [0:0]S;
  wire Z_reg_i_10_n_0;
  wire Z_reg_i_11_n_0;
  wire Z_reg_i_12_n_0;
  wire Z_reg_i_13_n_0;
  wire Z_reg_i_14_n_0;
  wire Z_reg_i_15_n_0;
  wire Z_reg_i_16_n_0;
  wire Z_reg_i_21_n_0;
  wire Z_reg_i_22_n_0;
  wire Z_reg_i_23_n_0;
  wire Z_reg_i_24_n_0;
  wire Z_reg_i_25_n_0;
  wire Z_reg_i_26_n_0;
  wire Z_reg_i_27_n_0;
  wire Z_reg_i_28_n_0;
  wire Z_reg_i_29_n_0;
  wire Z_reg_i_30_n_0;
  wire Z_reg_i_31_n_0;
  wire Z_reg_i_32_n_0;
  wire Z_reg_i_33_n_0;
  wire Z_reg_i_34_n_0;
  wire Z_reg_i_3_n_0;
  wire Z_reg_i_46_n_0;
  wire Z_reg_i_4_n_0;
  wire Z_reg_i_5_n_0;
  wire Z_reg_i_6_n_0;
  wire Z_reg_i_9_n_0;
  wire c_31;
  wire [4:0]data2;
  wire [18:0]data4;
  wire [14:0]data5;
  wire [0:0]flags_master;
  wire [0:0]flags_mult;
  wire [0:0]flags_sig;
  wire [31:0]op1;
  wire [31:0]op2;
  wire \op_code_reg[3]_i_2_n_0 ;
  wire [3:3]optype;
  wire [3:0]out;
  wire \pc_reg[0] ;
  wire \pc_reg[27] ;
  wire \pc_reg[27]_0 ;
  wire \pc_reg[31] ;
  wire [31:0]\pc_reg[31]_0 ;
  wire \pc_reg[9] ;
  wire \pc_reg[9]_0 ;
  wire \res_reg[0]_i_3_n_0 ;
  wire \res_reg[10]_i_2_n_0 ;
  wire \res_reg[10]_i_4_n_0 ;
  wire \res_reg[11]_i_2_n_0 ;
  wire \res_reg[11]_i_4_n_0 ;
  wire \res_reg[12]_i_3_n_0 ;
  wire \res_reg[13]_i_3_n_0 ;
  wire \res_reg[14]_i_3_n_0 ;
  wire \res_reg[15]_i_3_n_0 ;
  wire \res_reg[16]_i_3_n_0 ;
  wire \res_reg[17]_i_3_n_0 ;
  wire \res_reg[18]_i_3_n_0 ;
  wire \res_reg[19]_i_3_n_0 ;
  wire \res_reg[1]_i_3_n_0 ;
  wire \res_reg[20]_i_2_n_0 ;
  wire \res_reg[20]_i_4_n_0 ;
  wire \res_reg[21]_i_2_n_0 ;
  wire \res_reg[21]_i_4_n_0 ;
  wire \res_reg[22]_i_2_n_0 ;
  wire \res_reg[22]_i_4_n_0 ;
  wire \res_reg[23]_i_2_n_0 ;
  wire \res_reg[23]_i_4_n_0 ;
  wire \res_reg[24]_i_2_n_0 ;
  wire \res_reg[24]_i_4_n_0 ;
  wire \res_reg[25]_i_2_n_0 ;
  wire \res_reg[25]_i_4_n_0 ;
  wire \res_reg[26]_i_2_n_0 ;
  wire \res_reg[26]_i_3_n_0 ;
  wire \res_reg[26]_i_4_n_0 ;
  wire \res_reg[27]_i_2_n_0 ;
  wire \res_reg[27]_i_3_n_0 ;
  wire \res_reg[27]_i_4_n_0 ;
  wire \res_reg[28]_i_3_n_0 ;
  wire \res_reg[28]_i_5_n_0 ;
  wire \res_reg[29]_i_3_n_0 ;
  wire \res_reg[29]_i_5_n_0 ;
  wire \res_reg[2]_i_3_n_0 ;
  wire \res_reg[30]_i_3_n_0 ;
  wire \res_reg[30]_i_5_n_0 ;
  wire \res_reg[31]_i_3_n_0 ;
  wire \res_reg[31]_i_4_n_0 ;
  wire \res_reg[31]_i_9_n_0 ;
  wire \res_reg[3]_i_3_n_0 ;
  wire \res_reg[4]_i_2_n_0 ;
  wire \res_reg[4]_i_4_n_0 ;
  wire \res_reg[5]_i_2_n_0 ;
  wire \res_reg[5]_i_4_n_0 ;
  wire \res_reg[6]_i_3_n_0 ;
  wire \res_reg[7]_i_3_n_0 ;
  wire \res_reg[8]_i_2_n_0 ;
  wire \res_reg[8]_i_4_n_0 ;
  wire \res_reg[9]_i_2_n_0 ;
  wire \res_reg[9]_i_4_n_0 ;

  LUT6 #(
    .INIT(64'hAAFEBA10EE440054)) 
    C_reg_i_1
       (.I0(\DataPathInstantiate/ALU_Instantiate/c_321 ),
        .I1(\DataPathInstantiate/ALU_Instantiate/c_3219_out ),
        .I2(\DataPathInstantiate/ALU_Instantiate/c_3215_out ),
        .I3(c_31),
        .I4(op1[31]),
        .I5(op2[31]),
        .O(flags_sig));
  LUT4 #(
    .INIT(16'h0580)) 
    C_reg_i_3
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(optype),
        .I3(Q[2]),
        .O(\DataPathInstantiate/ALU_Instantiate/c_321 ));
  LUT4 #(
    .INIT(16'h0070)) 
    C_reg_i_4
       (.I0(Q[2]),
        .I1(optype),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(\DataPathInstantiate/ALU_Instantiate/c_3219_out ));
  LUT3 #(
    .INIT(8'h08)) 
    C_reg_i_5
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(optype),
        .O(\DataPathInstantiate/ALU_Instantiate/c_3215_out ));
  LUT6 #(
    .INIT(64'h4000FFFF40000000)) 
    Z_reg_i_1
       (.I0(Z_reg_i_3_n_0),
        .I1(Z_reg_i_4_n_0),
        .I2(Z_reg_i_5_n_0),
        .I3(Z_reg_i_6_n_0),
        .I4(Fset),
        .I5(flags_mult),
        .O(\pc_reg[0] ));
  LUT5 #(
    .INIT(32'h00053305)) 
    Z_reg_i_10
       (.I0(Z_reg_i_23_n_0),
        .I1(\res_reg[22]_i_2_n_0 ),
        .I2(Z_reg_i_24_n_0),
        .I3(optype),
        .I4(\res_reg[23]_i_2_n_0 ),
        .O(Z_reg_i_10_n_0));
  LUT5 #(
    .INIT(32'h00053305)) 
    Z_reg_i_11
       (.I0(Z_reg_i_25_n_0),
        .I1(\res_reg[26]_i_2_n_0 ),
        .I2(Z_reg_i_26_n_0),
        .I3(optype),
        .I4(\res_reg[27]_i_2_n_0 ),
        .O(Z_reg_i_11_n_0));
  LUT5 #(
    .INIT(32'h00053305)) 
    Z_reg_i_12
       (.I0(Z_reg_i_27_n_0),
        .I1(\res_reg[24]_i_2_n_0 ),
        .I2(Z_reg_i_28_n_0),
        .I3(optype),
        .I4(\res_reg[25]_i_2_n_0 ),
        .O(Z_reg_i_12_n_0));
  LUT5 #(
    .INIT(32'h00053305)) 
    Z_reg_i_13
       (.I0(Z_reg_i_29_n_0),
        .I1(\res_reg[10]_i_2_n_0 ),
        .I2(Z_reg_i_30_n_0),
        .I3(optype),
        .I4(\res_reg[11]_i_2_n_0 ),
        .O(Z_reg_i_13_n_0));
  LUT5 #(
    .INIT(32'h00053305)) 
    Z_reg_i_14
       (.I0(Z_reg_i_31_n_0),
        .I1(\res_reg[8]_i_2_n_0 ),
        .I2(Z_reg_i_32_n_0),
        .I3(optype),
        .I4(\res_reg[9]_i_2_n_0 ),
        .O(Z_reg_i_14_n_0));
  LUT5 #(
    .INIT(32'hFFFACCFA)) 
    Z_reg_i_15
       (.I0(Z_reg_i_33_n_0),
        .I1(\res_reg[4]_i_2_n_0 ),
        .I2(Z_reg_i_34_n_0),
        .I3(optype),
        .I4(\res_reg[5]_i_2_n_0 ),
        .O(Z_reg_i_15_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    Z_reg_i_16
       (.I0(\pc_reg[31]_0 [0]),
        .I1(\pc_reg[31]_0 [1]),
        .O(Z_reg_i_16_n_0));
  MUXF7 Z_reg_i_21
       (.I0(\res_reg[20]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[0]_33 ),
        .O(Z_reg_i_21_n_0),
        .S(Z_reg_i_46_n_0));
  MUXF7 Z_reg_i_22
       (.I0(\res_reg[21]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[0]_31 ),
        .O(Z_reg_i_22_n_0),
        .S(Z_reg_i_46_n_0));
  MUXF7 Z_reg_i_23
       (.I0(\res_reg[22]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[0]_45 ),
        .O(Z_reg_i_23_n_0),
        .S(Z_reg_i_46_n_0));
  MUXF7 Z_reg_i_24
       (.I0(\res_reg[23]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[0]_43 ),
        .O(Z_reg_i_24_n_0),
        .S(Z_reg_i_46_n_0));
  MUXF7 Z_reg_i_25
       (.I0(\res_reg[26]_i_4_n_0 ),
        .I1(\res_reg[26]_i_3_n_0 ),
        .O(Z_reg_i_25_n_0),
        .S(Z_reg_i_46_n_0));
  MUXF7 Z_reg_i_26
       (.I0(\res_reg[27]_i_4_n_0 ),
        .I1(\res_reg[27]_i_3_n_0 ),
        .O(Z_reg_i_26_n_0),
        .S(Z_reg_i_46_n_0));
  MUXF7 Z_reg_i_27
       (.I0(\res_reg[24]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[0]_53 ),
        .O(Z_reg_i_27_n_0),
        .S(Z_reg_i_46_n_0));
  MUXF7 Z_reg_i_28
       (.I0(\res_reg[25]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[0]_51 ),
        .O(Z_reg_i_28_n_0),
        .S(Z_reg_i_46_n_0));
  MUXF7 Z_reg_i_29
       (.I0(\res_reg[10]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[0]_19 ),
        .O(Z_reg_i_29_n_0),
        .S(Z_reg_i_46_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    Z_reg_i_3
       (.I0(\pc_reg[31]_0 [16]),
        .I1(\pc_reg[31]_0 [17]),
        .I2(\pc_reg[31]_0 [18]),
        .I3(\pc_reg[31]_0 [19]),
        .I4(Z_reg_i_9_n_0),
        .I5(Z_reg_i_10_n_0),
        .O(Z_reg_i_3_n_0));
  MUXF7 Z_reg_i_30
       (.I0(\res_reg[11]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[0]_21 ),
        .O(Z_reg_i_30_n_0),
        .S(Z_reg_i_46_n_0));
  MUXF7 Z_reg_i_31
       (.I0(\res_reg[8]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[0]_1 ),
        .O(Z_reg_i_31_n_0),
        .S(Z_reg_i_46_n_0));
  MUXF7 Z_reg_i_32
       (.I0(\res_reg[9]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[0] ),
        .O(Z_reg_i_32_n_0),
        .S(Z_reg_i_46_n_0));
  MUXF7 Z_reg_i_33
       (.I0(\res_reg[4]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[0]_9 ),
        .O(Z_reg_i_33_n_0),
        .S(Z_reg_i_46_n_0));
  MUXF7 Z_reg_i_34
       (.I0(\res_reg[5]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[0]_7 ),
        .O(Z_reg_i_34_n_0),
        .S(Z_reg_i_46_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    Z_reg_i_4
       (.I0(\pc_reg[31]_0 [28]),
        .I1(\pc_reg[31]_0 [29]),
        .I2(\pc_reg[31]_0 [31]),
        .I3(\pc_reg[31]_0 [30]),
        .I4(Z_reg_i_11_n_0),
        .I5(Z_reg_i_12_n_0),
        .O(Z_reg_i_4_n_0));
  LUT2 #(
    .INIT(4'hB)) 
    Z_reg_i_46
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(Z_reg_i_46_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    Z_reg_i_5
       (.I0(\pc_reg[31]_0 [12]),
        .I1(\pc_reg[31]_0 [13]),
        .I2(\pc_reg[31]_0 [14]),
        .I3(\pc_reg[31]_0 [15]),
        .I4(Z_reg_i_13_n_0),
        .I5(Z_reg_i_14_n_0),
        .O(Z_reg_i_5_n_0));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    Z_reg_i_6
       (.I0(Z_reg_i_15_n_0),
        .I1(\pc_reg[31]_0 [6]),
        .I2(\pc_reg[31]_0 [7]),
        .I3(\pc_reg[31]_0 [2]),
        .I4(\pc_reg[31]_0 [3]),
        .I5(Z_reg_i_16_n_0),
        .O(Z_reg_i_6_n_0));
  LUT5 #(
    .INIT(32'hFFFACCFA)) 
    Z_reg_i_9
       (.I0(Z_reg_i_21_n_0),
        .I1(\res_reg[20]_i_2_n_0 ),
        .I2(Z_reg_i_22_n_0),
        .I3(optype),
        .I4(\res_reg[21]_i_2_n_0 ),
        .O(Z_reg_i_9_n_0));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \op_code_reg[0] 
       (.CLR(1'b0),
        .D(\FSM_sequential_state_reg[0]_59 [0]),
        .G(\op_code_reg[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(Q[0]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \op_code_reg[1] 
       (.CLR(1'b0),
        .D(\FSM_sequential_state_reg[0]_59 [1]),
        .G(\op_code_reg[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(Q[1]));
  LUT3 #(
    .INIT(8'hF7)) 
    \op_code_reg[1]_i_2 
       (.I0(out[0]),
        .I1(out[2]),
        .I2(out[1]),
        .O(\pc_reg[9] ));
  LUT4 #(
    .INIT(16'h3FFA)) 
    \op_code_reg[1]_i_3 
       (.I0(out[0]),
        .I1(out[3]),
        .I2(out[1]),
        .I3(out[2]),
        .O(\pc_reg[9]_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \op_code_reg[2] 
       (.CLR(1'b0),
        .D(\FSM_sequential_state_reg[0]_59 [2]),
        .G(\op_code_reg[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(Q[2]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \op_code_reg[3] 
       (.CLR(1'b0),
        .D(\FSM_sequential_state_reg[0]_59 [3]),
        .G(\op_code_reg[3]_i_2_n_0 ),
        .GE(1'b1),
        .Q(optype));
  LUT4 #(
    .INIT(16'hA291)) 
    \op_code_reg[3]_i_2 
       (.I0(out[2]),
        .I1(out[1]),
        .I2(out[3]),
        .I3(out[0]),
        .O(\op_code_reg[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFDFF)) 
    \op_code_reg[3]_i_3 
       (.I0(out[0]),
        .I1(out[3]),
        .I2(out[1]),
        .I3(out[2]),
        .O(\pc_reg[31] ));
  LUT3 #(
    .INIT(8'h70)) 
    \prev_state[3]_i_1 
       (.I0(out[2]),
        .I1(out[1]),
        .I2(out[3]),
        .O(D));
  MUXF7 \res_reg[0]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_17 ),
        .I1(\res_reg[0]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [0]),
        .S(optype));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[0]_i_3 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_18 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[0]),
        .I5(op2[0]),
        .O(\res_reg[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB8B8B888B8B8)) 
    \res_reg[10]_i_1 
       (.I0(\res_reg[10]_i_2_n_0 ),
        .I1(optype),
        .I2(\FSM_sequential_state_reg[0]_19 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\res_reg[10]_i_4_n_0 ),
        .O(\pc_reg[31]_0 [10]));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[10]_i_2 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_20 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[10]),
        .I5(op2[10]),
        .O(\res_reg[10]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEAE22A2)) 
    \res_reg[10]_i_4 
       (.I0(data5[4]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(data4[5]),
        .O(\res_reg[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB8B8B888B8B8)) 
    \res_reg[11]_i_1 
       (.I0(\res_reg[11]_i_2_n_0 ),
        .I1(optype),
        .I2(\FSM_sequential_state_reg[0]_21 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\res_reg[11]_i_4_n_0 ),
        .O(\pc_reg[31]_0 [11]));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[11]_i_2 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_22 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[11]),
        .I5(op2[11]),
        .O(\res_reg[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEAE22A2)) 
    \res_reg[11]_i_4 
       (.I0(data5[5]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(data4[6]),
        .O(\res_reg[11]_i_4_n_0 ));
  MUXF7 \res_reg[12]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_23 ),
        .I1(\res_reg[12]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [12]),
        .S(optype));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[12]_i_3 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_24 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[12]),
        .I5(op2[12]),
        .O(\res_reg[12]_i_3_n_0 ));
  MUXF7 \res_reg[13]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_25 ),
        .I1(\res_reg[13]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [13]),
        .S(optype));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[13]_i_3 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_26 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[13]),
        .I5(op2[13]),
        .O(\res_reg[13]_i_3_n_0 ));
  MUXF7 \res_reg[14]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_29 ),
        .I1(\res_reg[14]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [14]),
        .S(optype));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[14]_i_3 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_30 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[14]),
        .I5(op2[14]),
        .O(\res_reg[14]_i_3_n_0 ));
  MUXF7 \res_reg[15]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_27 ),
        .I1(\res_reg[15]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [15]),
        .S(optype));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[15]_i_3 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_28 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[15]),
        .I5(op2[15]),
        .O(\res_reg[15]_i_3_n_0 ));
  MUXF7 \res_reg[16]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_41 ),
        .I1(\res_reg[16]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [16]),
        .S(optype));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[16]_i_3 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_42 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[16]),
        .I5(op2[16]),
        .O(\res_reg[16]_i_3_n_0 ));
  MUXF7 \res_reg[17]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_39 ),
        .I1(\res_reg[17]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [17]),
        .S(optype));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[17]_i_3 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_40 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[17]),
        .I5(op2[17]),
        .O(\res_reg[17]_i_3_n_0 ));
  MUXF7 \res_reg[18]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_37 ),
        .I1(\res_reg[18]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [18]),
        .S(optype));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[18]_i_3 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_38 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[18]),
        .I5(op2[18]),
        .O(\res_reg[18]_i_3_n_0 ));
  MUXF7 \res_reg[19]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_35 ),
        .I1(\res_reg[19]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [19]),
        .S(optype));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[19]_i_3 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_36 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[19]),
        .I5(op2[19]),
        .O(\res_reg[19]_i_3_n_0 ));
  MUXF7 \res_reg[1]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_15 ),
        .I1(\res_reg[1]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [1]),
        .S(optype));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[1]_i_3 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_16 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[1]),
        .I5(op2[1]),
        .O(\res_reg[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB8B8B888B8B8)) 
    \res_reg[20]_i_1 
       (.I0(\res_reg[20]_i_2_n_0 ),
        .I1(optype),
        .I2(\FSM_sequential_state_reg[0]_33 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\res_reg[20]_i_4_n_0 ),
        .O(\pc_reg[31]_0 [20]));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[20]_i_2 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_34 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[20]),
        .I5(op2[20]),
        .O(\res_reg[20]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEAE22A2)) 
    \res_reg[20]_i_4 
       (.I0(data5[6]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(data4[7]),
        .O(\res_reg[20]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB8B8B888B8B8)) 
    \res_reg[21]_i_1 
       (.I0(\res_reg[21]_i_2_n_0 ),
        .I1(optype),
        .I2(\FSM_sequential_state_reg[0]_31 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\res_reg[21]_i_4_n_0 ),
        .O(\pc_reg[31]_0 [21]));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[21]_i_2 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_32 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[21]),
        .I5(op2[21]),
        .O(\res_reg[21]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEAE22A2)) 
    \res_reg[21]_i_4 
       (.I0(data5[7]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(data4[8]),
        .O(\res_reg[21]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB8B8B888B8B8)) 
    \res_reg[22]_i_1 
       (.I0(\res_reg[22]_i_2_n_0 ),
        .I1(optype),
        .I2(\FSM_sequential_state_reg[0]_45 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\res_reg[22]_i_4_n_0 ),
        .O(\pc_reg[31]_0 [22]));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[22]_i_2 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_46 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[22]),
        .I5(op2[22]),
        .O(\res_reg[22]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEAE22A2)) 
    \res_reg[22]_i_4 
       (.I0(data5[8]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(data4[9]),
        .O(\res_reg[22]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB8B8B888B8B8)) 
    \res_reg[23]_i_1 
       (.I0(\res_reg[23]_i_2_n_0 ),
        .I1(optype),
        .I2(\FSM_sequential_state_reg[0]_43 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\res_reg[23]_i_4_n_0 ),
        .O(\pc_reg[31]_0 [23]));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[23]_i_2 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_44 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[23]),
        .I5(op2[23]),
        .O(\res_reg[23]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEAE22A2)) 
    \res_reg[23]_i_4 
       (.I0(data5[9]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(data4[10]),
        .O(\res_reg[23]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB8B8B888B8B8)) 
    \res_reg[24]_i_1 
       (.I0(\res_reg[24]_i_2_n_0 ),
        .I1(optype),
        .I2(\FSM_sequential_state_reg[0]_53 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\res_reg[24]_i_4_n_0 ),
        .O(\pc_reg[31]_0 [24]));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[24]_i_2 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_54 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[24]),
        .I5(op2[24]),
        .O(\res_reg[24]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEAE22A2)) 
    \res_reg[24]_i_4 
       (.I0(data5[10]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(data4[11]),
        .O(\res_reg[24]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB8B8B888B8B8)) 
    \res_reg[25]_i_1 
       (.I0(\res_reg[25]_i_2_n_0 ),
        .I1(optype),
        .I2(\FSM_sequential_state_reg[0]_51 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\res_reg[25]_i_4_n_0 ),
        .O(\pc_reg[31]_0 [25]));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[25]_i_2 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_52 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[25]),
        .I5(op2[25]),
        .O(\res_reg[25]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEAE22A2)) 
    \res_reg[25]_i_4 
       (.I0(data5[11]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(data4[12]),
        .O(\res_reg[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB8B8B888B8B8)) 
    \res_reg[26]_i_1 
       (.I0(\res_reg[26]_i_2_n_0 ),
        .I1(optype),
        .I2(\res_reg[26]_i_3_n_0 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\res_reg[26]_i_4_n_0 ),
        .O(\pc_reg[31]_0 [26]));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[26]_i_2 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_49 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[26]),
        .I5(op2[26]),
        .O(\res_reg[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFAFACCFC0A0ACC0C)) 
    \res_reg[26]_i_3 
       (.I0(\pc_reg[27]_0 ),
        .I1(\FSM_sequential_state_reg[0]_50 ),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(data5[12]),
        .O(\res_reg[26]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hEEAE22A2)) 
    \res_reg[26]_i_4 
       (.I0(data5[12]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(data4[13]),
        .O(\res_reg[26]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB8B8B888B8B8)) 
    \res_reg[27]_i_1 
       (.I0(\res_reg[27]_i_2_n_0 ),
        .I1(optype),
        .I2(\res_reg[27]_i_3_n_0 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\res_reg[27]_i_4_n_0 ),
        .O(\pc_reg[31]_0 [27]));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[27]_i_2 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_47 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[27]),
        .I5(op2[27]),
        .O(\res_reg[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFAFACCFC0A0ACC0C)) 
    \res_reg[27]_i_3 
       (.I0(\pc_reg[27] ),
        .I1(\FSM_sequential_state_reg[0]_48 ),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(data5[13]),
        .O(\res_reg[27]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hEEAE22A2)) 
    \res_reg[27]_i_4 
       (.I0(data5[13]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(data4[14]),
        .O(\res_reg[27]_i_4_n_0 ));
  MUXF7 \res_reg[28]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_56 ),
        .I1(\res_reg[28]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [28]),
        .S(optype));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[28]_i_3 
       (.I0(Q[2]),
        .I1(\res_reg[28]_i_5_n_0 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[28]),
        .I5(op2[28]),
        .O(\res_reg[28]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[28]_i_5 
       (.I0(data4[15]),
        .I1(Q[0]),
        .I2(data2[1]),
        .O(\res_reg[28]_i_5_n_0 ));
  MUXF7 \res_reg[29]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_55 ),
        .I1(\res_reg[29]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [29]),
        .S(optype));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[29]_i_3 
       (.I0(Q[2]),
        .I1(\res_reg[29]_i_5_n_0 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[29]),
        .I5(op2[29]),
        .O(\res_reg[29]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[29]_i_5 
       (.I0(data4[16]),
        .I1(Q[0]),
        .I2(data2[2]),
        .O(\res_reg[29]_i_5_n_0 ));
  MUXF7 \res_reg[2]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_13 ),
        .I1(\res_reg[2]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [2]),
        .S(optype));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[2]_i_3 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_14 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[2]),
        .I5(op2[2]),
        .O(\res_reg[2]_i_3_n_0 ));
  MUXF7 \res_reg[30]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_57 ),
        .I1(\res_reg[30]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [30]),
        .S(optype));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[30]_i_3 
       (.I0(Q[2]),
        .I1(\res_reg[30]_i_5_n_0 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[30]),
        .I5(op2[30]),
        .O(\res_reg[30]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[30]_i_5 
       (.I0(data4[17]),
        .I1(Q[0]),
        .I2(data2[3]),
        .O(\res_reg[30]_i_5_n_0 ));
  MUXF7 \res_reg[31]_i_1 
       (.I0(\res_reg[31]_i_3_n_0 ),
        .I1(\res_reg[31]_i_4_n_0 ),
        .O(\pc_reg[31]_0 [31]),
        .S(optype));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[31]_i_3 
       (.I0(\FSM_sequential_state_reg[0]_58 ),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(data5[14]),
        .I4(Q[0]),
        .I5(data4[18]),
        .O(\res_reg[31]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[31]_i_4 
       (.I0(Q[2]),
        .I1(\res_reg[31]_i_9_n_0 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[31]),
        .I5(op2[31]),
        .O(\res_reg[31]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[31]_i_9 
       (.I0(data4[18]),
        .I1(Q[0]),
        .I2(data2[4]),
        .O(\res_reg[31]_i_9_n_0 ));
  MUXF7 \res_reg[3]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_11 ),
        .I1(\res_reg[3]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [3]),
        .S(optype));
  LUT4 #(
    .INIT(16'hE2FF)) 
    \res_reg[3]_i_14 
       (.I0(data2[0]),
        .I1(Q[0]),
        .I2(O),
        .I3(Q[1]),
        .O(DI));
  LUT6 #(
    .INIT(64'hB800B8FF47FF4700)) 
    \res_reg[3]_i_18 
       (.I0(O),
        .I1(Q[0]),
        .I2(data2[0]),
        .I3(Q[1]),
        .I4(data4[0]),
        .I5(flags_master),
        .O(S));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[3]_i_3 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_12 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[3]),
        .I5(op2[3]),
        .O(\res_reg[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB8B8B888B8B8)) 
    \res_reg[4]_i_1 
       (.I0(\res_reg[4]_i_2_n_0 ),
        .I1(optype),
        .I2(\FSM_sequential_state_reg[0]_9 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\res_reg[4]_i_4_n_0 ),
        .O(\pc_reg[31]_0 [4]));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[4]_i_2 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_10 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[4]),
        .I5(op2[4]),
        .O(\res_reg[4]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEAE22A2)) 
    \res_reg[4]_i_4 
       (.I0(data5[0]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(data4[1]),
        .O(\res_reg[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB8B8B888B8B8)) 
    \res_reg[5]_i_1 
       (.I0(\res_reg[5]_i_2_n_0 ),
        .I1(optype),
        .I2(\FSM_sequential_state_reg[0]_7 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\res_reg[5]_i_4_n_0 ),
        .O(\pc_reg[31]_0 [5]));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[5]_i_2 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_8 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[5]),
        .I5(op2[5]),
        .O(\res_reg[5]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEAE22A2)) 
    \res_reg[5]_i_4 
       (.I0(data5[1]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(data4[2]),
        .O(\res_reg[5]_i_4_n_0 ));
  MUXF7 \res_reg[6]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_5 ),
        .I1(\res_reg[6]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [6]),
        .S(optype));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[6]_i_3 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_6 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[6]),
        .I5(op2[6]),
        .O(\res_reg[6]_i_3_n_0 ));
  MUXF7 \res_reg[7]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_3 ),
        .I1(\res_reg[7]_i_3_n_0 ),
        .O(\pc_reg[31]_0 [7]),
        .S(optype));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[7]_i_3 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_4 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[7]),
        .I5(op2[7]),
        .O(\res_reg[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB8B8B888B8B8)) 
    \res_reg[8]_i_1 
       (.I0(\res_reg[8]_i_2_n_0 ),
        .I1(optype),
        .I2(\FSM_sequential_state_reg[0]_1 ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\res_reg[8]_i_4_n_0 ),
        .O(\pc_reg[31]_0 [8]));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[8]_i_2 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_2 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[8]),
        .I5(op2[8]),
        .O(\res_reg[8]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEAE22A2)) 
    \res_reg[8]_i_4 
       (.I0(data5[2]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(data4[3]),
        .O(\res_reg[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB8B8B888B8B8)) 
    \res_reg[9]_i_1 
       (.I0(\res_reg[9]_i_2_n_0 ),
        .I1(optype),
        .I2(\FSM_sequential_state_reg[0] ),
        .I3(Q[1]),
        .I4(Q[2]),
        .I5(\res_reg[9]_i_4_n_0 ),
        .O(\pc_reg[31]_0 [9]));
  LUT6 #(
    .INIT(64'h4A4F4F4AE5EAE040)) 
    \res_reg[9]_i_2 
       (.I0(Q[2]),
        .I1(\FSM_sequential_state_reg[0]_0 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(op1[9]),
        .I5(op2[9]),
        .O(\res_reg[9]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hEEAE22A2)) 
    \res_reg[9]_i_4 
       (.I0(data5[3]),
        .I1(Q[2]),
        .I2(Q[0]),
        .I3(Q[1]),
        .I4(data4[4]),
        .O(\res_reg[9]_i_4_n_0 ));
endmodule

module DataPath
   (Q,
    \pc_reg[0]_0 ,
    Fset,
    D,
    output_big,
    \register_array_reg[15][0] ,
    \pc_reg[0]_1 ,
    Rsrc,
    output_big__0,
    \pc_reg[31]_0 ,
    \register_array_reg[0][31] ,
    \register_array_reg[0][15] ,
    byte_offset,
    MW,
    \register_array_reg[0][30] ,
    E,
    \pc_reg[2]_0 ,
    \pc_reg[31]_1 ,
    \pc_reg[31]_2 ,
    op1,
    \pc_reg[31]_3 ,
    \pc_reg[31]_4 ,
    O,
    \register_array_reg[0][23] ,
    \register_array_reg[15][0]_0 ,
    \pc_reg[9]_0 ,
    \pc_reg[31]_5 ,
    \pc_reg[25]_0 ,
    \pc_reg[8]_0 ,
    \pc_reg[7]_0 ,
    \pc_reg[6]_0 ,
    \pc_reg[5]_0 ,
    \pc_reg[4]_0 ,
    \pc_reg[3]_0 ,
    \pc_reg[2]_1 ,
    \pc_reg[1]_0 ,
    \pc_reg[0]_2 ,
    \pc_reg[10]_0 ,
    \pc_reg[11]_0 ,
    \pc_reg[12]_0 ,
    \pc_reg[13]_0 ,
    \pc_reg[15]_0 ,
    \pc_reg[14]_0 ,
    \pc_reg[21]_0 ,
    \pc_reg[20]_0 ,
    \pc_reg[19]_0 ,
    \pc_reg[18]_0 ,
    \pc_reg[17]_0 ,
    \pc_reg[16]_0 ,
    \pc_reg[23]_0 ,
    \pc_reg[22]_0 ,
    \pc_reg[25]_1 ,
    \pc_reg[24]_0 ,
    \pc_reg[29]_0 ,
    \pc_reg[28]_0 ,
    \pc_reg[30]_0 ,
    \pc_reg[27]_0 ,
    \pc_reg[26]_0 ,
    c_31,
    \pc_reg[31]_6 ,
    CO,
    \pc_reg[0]_3 ,
    \pc_reg[1]_1 ,
    \pc_reg[2]_2 ,
    \pc_reg[3]_1 ,
    \pc_reg[4]_1 ,
    \pc_reg[5]_1 ,
    \pc_reg[6]_1 ,
    \pc_reg[7]_1 ,
    \pc_reg[8]_1 ,
    \pc_reg[9]_1 ,
    \pc_reg[10]_1 ,
    \pc_reg[11]_1 ,
    \pc_reg[12]_1 ,
    \pc_reg[13]_1 ,
    \pc_reg[14]_1 ,
    \pc_reg[15]_1 ,
    \pc_reg[16]_1 ,
    \pc_reg[17]_1 ,
    \pc_reg[18]_1 ,
    \pc_reg[19]_1 ,
    \pc_reg[20]_1 ,
    \pc_reg[21]_1 ,
    \pc_reg[22]_1 ,
    \pc_reg[23]_1 ,
    \pc_reg[24]_1 ,
    \pc_reg[25]_2 ,
    \pc_reg[26]_1 ,
    \pc_reg[27]_1 ,
    \register_array_reg[0][14] ,
    \register_array_reg[0][15]_0 ,
    \register_array_reg[0][15]_1 ,
    \pc_reg[0]_4 ,
    \pc_reg[31]_7 ,
    leds_OBUF,
    CLK,
    read_switches_IBUF,
    \FSM_sequential_state_reg[1] ,
    \FSM_sequential_state_reg[0] ,
    \FSM_sequential_state_reg[0]_0 ,
    flags_sig,
    AR,
    \FSM_sequential_state_reg[1]_0 ,
    out,
    \FSM_sequential_state_reg[0]_1 ,
    \FSM_sequential_state_reg[0]_2 ,
    \FSM_sequential_state_reg[2] ,
    \FSM_sequential_state_reg[0]_3 ,
    op2,
    \prev_state_reg[0] ,
    \prev_state_reg[2] ,
    \FSM_sequential_state_reg[2]_0 ,
    \FSM_sequential_state_reg[1]_1 ,
    \c_reg[0] ,
    \prev_state_reg[2]_0 ,
    Asrc2,
    DI,
    S,
    \FSM_sequential_state_reg[1]_2 ,
    \FSM_sequential_state_reg[0]_4 ,
    \FSM_sequential_state_reg[0]_5 ,
    \FSM_sequential_state_reg[1]_3 ,
    \FSM_sequential_state_reg[1]_4 ,
    \FSM_sequential_state_reg[1]_5 ,
    \FSM_sequential_state_reg[0]_6 ,
    \FSM_sequential_state_reg[0]_7 ,
    \FSM_sequential_state_reg[0]_8 ,
    \FSM_sequential_state_reg[0]_9 ,
    \FSM_sequential_state_reg[2]_1 ,
    RW,
    \prev_state_reg[3] ,
    \prev_state_reg[3]_0 ,
    \FSM_sequential_state_reg[1]_6 ,
    \FSM_sequential_state_reg[1]_7 ,
    \FSM_sequential_state_reg[0]_10 ,
    \FSM_sequential_state_reg[1]_8 ,
    \FSM_sequential_state_reg[1]_9 ,
    \FSM_sequential_state_reg[1]_10 ,
    \FSM_sequential_state_reg[0]_11 ,
    \FSM_sequential_state_reg[0]_12 ,
    \FSM_sequential_state_reg[1]_11 ,
    memOrReg_IBUF,
    firstOrLast_IBUF);
  output [15:0]Q;
  output [0:0]\pc_reg[0]_0 ;
  output Fset;
  output [3:0]D;
  output output_big;
  output \register_array_reg[15][0] ;
  output \pc_reg[0]_1 ;
  output Rsrc;
  output output_big__0;
  output [3:0]\pc_reg[31]_0 ;
  output \register_array_reg[0][31] ;
  output \register_array_reg[0][15] ;
  output [1:0]byte_offset;
  output MW;
  output [2:0]\register_array_reg[0][30] ;
  output [0:0]E;
  output [2:0]\pc_reg[2]_0 ;
  output [28:0]\pc_reg[31]_1 ;
  output [28:0]\pc_reg[31]_2 ;
  output [31:0]op1;
  output [18:0]\pc_reg[31]_3 ;
  output [4:0]\pc_reg[31]_4 ;
  output [0:0]O;
  output \register_array_reg[0][23] ;
  output \register_array_reg[15][0]_0 ;
  output \pc_reg[9]_0 ;
  output [14:0]\pc_reg[31]_5 ;
  output [22:0]\pc_reg[25]_0 ;
  output \pc_reg[8]_0 ;
  output \pc_reg[7]_0 ;
  output \pc_reg[6]_0 ;
  output \pc_reg[5]_0 ;
  output \pc_reg[4]_0 ;
  output \pc_reg[3]_0 ;
  output \pc_reg[2]_1 ;
  output \pc_reg[1]_0 ;
  output \pc_reg[0]_2 ;
  output \pc_reg[10]_0 ;
  output \pc_reg[11]_0 ;
  output \pc_reg[12]_0 ;
  output \pc_reg[13]_0 ;
  output \pc_reg[15]_0 ;
  output \pc_reg[14]_0 ;
  output \pc_reg[21]_0 ;
  output \pc_reg[20]_0 ;
  output \pc_reg[19]_0 ;
  output \pc_reg[18]_0 ;
  output \pc_reg[17]_0 ;
  output \pc_reg[16]_0 ;
  output \pc_reg[23]_0 ;
  output \pc_reg[22]_0 ;
  output \pc_reg[25]_1 ;
  output \pc_reg[24]_0 ;
  output \pc_reg[29]_0 ;
  output \pc_reg[28]_0 ;
  output \pc_reg[30]_0 ;
  output \pc_reg[27]_0 ;
  output \pc_reg[26]_0 ;
  output c_31;
  output \pc_reg[31]_6 ;
  output [0:0]CO;
  output \pc_reg[0]_3 ;
  output \pc_reg[1]_1 ;
  output \pc_reg[2]_2 ;
  output \pc_reg[3]_1 ;
  output \pc_reg[4]_1 ;
  output \pc_reg[5]_1 ;
  output \pc_reg[6]_1 ;
  output \pc_reg[7]_1 ;
  output \pc_reg[8]_1 ;
  output \pc_reg[9]_1 ;
  output \pc_reg[10]_1 ;
  output \pc_reg[11]_1 ;
  output \pc_reg[12]_1 ;
  output \pc_reg[13]_1 ;
  output \pc_reg[14]_1 ;
  output \pc_reg[15]_1 ;
  output \pc_reg[16]_1 ;
  output \pc_reg[17]_1 ;
  output \pc_reg[18]_1 ;
  output \pc_reg[19]_1 ;
  output \pc_reg[20]_1 ;
  output \pc_reg[21]_1 ;
  output \pc_reg[22]_1 ;
  output \pc_reg[23]_1 ;
  output \pc_reg[24]_1 ;
  output \pc_reg[25]_2 ;
  output \pc_reg[26]_1 ;
  output \pc_reg[27]_1 ;
  output \register_array_reg[0][14] ;
  output [31:0]\register_array_reg[0][15]_0 ;
  output \register_array_reg[0][15]_1 ;
  output [0:0]\pc_reg[0]_4 ;
  output \pc_reg[31]_7 ;
  output [15:0]leds_OBUF;
  input CLK;
  input [9:0]read_switches_IBUF;
  input [7:0]\FSM_sequential_state_reg[1] ;
  input \FSM_sequential_state_reg[0] ;
  input \FSM_sequential_state_reg[0]_0 ;
  input [1:0]flags_sig;
  input [0:0]AR;
  input \FSM_sequential_state_reg[1]_0 ;
  input [3:0]out;
  input \FSM_sequential_state_reg[0]_1 ;
  input \FSM_sequential_state_reg[0]_2 ;
  input [0:0]\FSM_sequential_state_reg[2] ;
  input \FSM_sequential_state_reg[0]_3 ;
  input [28:0]op2;
  input \prev_state_reg[0] ;
  input \prev_state_reg[2] ;
  input [2:0]\FSM_sequential_state_reg[2]_0 ;
  input [2:0]\FSM_sequential_state_reg[1]_1 ;
  input [0:0]\c_reg[0] ;
  input \prev_state_reg[2]_0 ;
  input [1:0]Asrc2;
  input [0:0]DI;
  input [0:0]S;
  input [21:0]\FSM_sequential_state_reg[1]_2 ;
  input \FSM_sequential_state_reg[0]_4 ;
  input \FSM_sequential_state_reg[0]_5 ;
  input \FSM_sequential_state_reg[1]_3 ;
  input \FSM_sequential_state_reg[1]_4 ;
  input \FSM_sequential_state_reg[1]_5 ;
  input \FSM_sequential_state_reg[0]_6 ;
  input \FSM_sequential_state_reg[0]_7 ;
  input \FSM_sequential_state_reg[0]_8 ;
  input \FSM_sequential_state_reg[0]_9 ;
  input [30:0]\FSM_sequential_state_reg[2]_1 ;
  input RW;
  input \prev_state_reg[3] ;
  input \prev_state_reg[3]_0 ;
  input [0:0]\FSM_sequential_state_reg[1]_6 ;
  input [0:0]\FSM_sequential_state_reg[1]_7 ;
  input [0:0]\FSM_sequential_state_reg[0]_10 ;
  input [0:0]\FSM_sequential_state_reg[1]_8 ;
  input [0:0]\FSM_sequential_state_reg[1]_9 ;
  input [0:0]\FSM_sequential_state_reg[1]_10 ;
  input [0:0]\FSM_sequential_state_reg[0]_11 ;
  input [0:0]\FSM_sequential_state_reg[0]_12 ;
  input [0:0]\FSM_sequential_state_reg[1]_11 ;
  input memOrReg_IBUF;
  input firstOrLast_IBUF;

  wire [27:1]\ALU_Instantiate/data2 ;
  wire [31:1]\ALU_Instantiate/data3 ;
  wire [19:1]\ALU_Instantiate/data4 ;
  wire [30:0]\ALU_Instantiate/data5 ;
  wire [29:1]\ALU_Instantiate/p_0_out ;
  wire [30:30]\ALU_Instantiate/p_0_out__0 ;
  wire [0:0]AR;
  wire [1:0]Asrc2;
  wire CLK;
  wire [0:0]CO;
  wire C_reg_i_18_n_0;
  wire C_reg_i_9_n_0;
  wire [3:0]D;
  wire [0:0]DI;
  wire [0:0]E;
  wire \FSM_sequential_state[0]_i_2_n_0 ;
  wire \FSM_sequential_state[0]_i_3_n_0 ;
  wire \FSM_sequential_state[1]_i_2_n_0 ;
  wire \FSM_sequential_state[1]_i_3_n_0 ;
  wire \FSM_sequential_state[2]_i_2_n_0 ;
  wire \FSM_sequential_state_reg[0] ;
  wire \FSM_sequential_state_reg[0]_0 ;
  wire \FSM_sequential_state_reg[0]_1 ;
  wire [0:0]\FSM_sequential_state_reg[0]_10 ;
  wire [0:0]\FSM_sequential_state_reg[0]_11 ;
  wire [0:0]\FSM_sequential_state_reg[0]_12 ;
  wire \FSM_sequential_state_reg[0]_2 ;
  wire \FSM_sequential_state_reg[0]_3 ;
  wire \FSM_sequential_state_reg[0]_4 ;
  wire \FSM_sequential_state_reg[0]_5 ;
  wire \FSM_sequential_state_reg[0]_6 ;
  wire \FSM_sequential_state_reg[0]_7 ;
  wire \FSM_sequential_state_reg[0]_8 ;
  wire \FSM_sequential_state_reg[0]_9 ;
  wire [7:0]\FSM_sequential_state_reg[1] ;
  wire \FSM_sequential_state_reg[1]_0 ;
  wire [2:0]\FSM_sequential_state_reg[1]_1 ;
  wire [0:0]\FSM_sequential_state_reg[1]_10 ;
  wire [0:0]\FSM_sequential_state_reg[1]_11 ;
  wire [21:0]\FSM_sequential_state_reg[1]_2 ;
  wire \FSM_sequential_state_reg[1]_3 ;
  wire \FSM_sequential_state_reg[1]_4 ;
  wire \FSM_sequential_state_reg[1]_5 ;
  wire [0:0]\FSM_sequential_state_reg[1]_6 ;
  wire [0:0]\FSM_sequential_state_reg[1]_7 ;
  wire [0:0]\FSM_sequential_state_reg[1]_8 ;
  wire [0:0]\FSM_sequential_state_reg[1]_9 ;
  wire [0:0]\FSM_sequential_state_reg[2] ;
  wire [2:0]\FSM_sequential_state_reg[2]_0 ;
  wire [30:0]\FSM_sequential_state_reg[2]_1 ;
  wire Fset;
  wire MW;
  wire \MainCtrlIns/check_9 ;
  wire \MainCtrlIns/state1 ;
  wire \MainCtrlIns/state111_out ;
  wire Memory_n_2;
  wire Memory_n_3;
  wire Memory_n_4;
  wire Mult_wad;
  wire Multiplier_Inst_n_0;
  wire [0:0]O;
  wire PW;
  wire [15:0]Q;
  wire RW;
  wire Register_File_Instantiate_n_1;
  wire Rsrc;
  wire [0:0]S;
  wire Z;
  wire Z_reg_i_8_n_0;
  wire [31:0]a_reg;
  wire \a_reg_reg[31]_i_3_n_0 ;
  wire \a_reg_reg[31]_i_8_n_0 ;
  wire [31:16]b_reg;
  wire [1:0]byte_offset;
  wire c_31;
  wire [0:0]\c_reg[0] ;
  wire [31:0]d_reg;
  wire [31:8]d_reg_temp;
  wire firstOrLast_IBUF;
  wire [3:2]flags_master;
  wire [3:3]flags_mult;
  wire [1:0]flags_sig;
  wire [31:4]ir_out;
  wire \ir_reg_reg_n_0_[0] ;
  wire \ir_reg_reg_n_0_[10] ;
  wire \ir_reg_reg_n_0_[11] ;
  wire \ir_reg_reg_n_0_[12] ;
  wire \ir_reg_reg_n_0_[13] ;
  wire \ir_reg_reg_n_0_[14] ;
  wire \ir_reg_reg_n_0_[15] ;
  wire \ir_reg_reg_n_0_[16] ;
  wire \ir_reg_reg_n_0_[17] ;
  wire \ir_reg_reg_n_0_[18] ;
  wire \ir_reg_reg_n_0_[19] ;
  wire \ir_reg_reg_n_0_[1] ;
  wire \ir_reg_reg_n_0_[2] ;
  wire \ir_reg_reg_n_0_[3] ;
  wire \ir_reg_reg_n_0_[8] ;
  wire \ir_reg_reg_n_0_[9] ;
  wire [15:0]leds_OBUF;
  wire memOrReg_IBUF;
  wire [31:0]memout;
  wire [2:0]mult_reg;
  wire [31:0]op1;
  wire [28:0]op2;
  wire \op_code_reg[0]_i_2_n_0 ;
  wire \op_code_reg[2]_i_2_n_0 ;
  wire \op_code_reg[3]_i_4_n_0 ;
  wire [3:0]out;
  wire [30:0]output_MULT;
  wire output_big;
  wire output_big__0;
  wire [31:0]output_shift;
  wire p;
  wire [31:0]p_1_in;
  wire [31:0]pc;
  wire \pc[31]_i_1_n_0 ;
  wire \pc[31]_i_4_n_0 ;
  wire \pc[31]_i_6_n_0 ;
  wire [0:0]\pc_reg[0]_0 ;
  wire \pc_reg[0]_1 ;
  wire \pc_reg[0]_2 ;
  wire \pc_reg[0]_3 ;
  wire [0:0]\pc_reg[0]_4 ;
  wire \pc_reg[10]_0 ;
  wire \pc_reg[10]_1 ;
  wire \pc_reg[11]_0 ;
  wire \pc_reg[11]_1 ;
  wire \pc_reg[12]_0 ;
  wire \pc_reg[12]_1 ;
  wire \pc_reg[13]_0 ;
  wire \pc_reg[13]_1 ;
  wire \pc_reg[14]_0 ;
  wire \pc_reg[14]_1 ;
  wire \pc_reg[15]_0 ;
  wire \pc_reg[15]_1 ;
  wire \pc_reg[16]_0 ;
  wire \pc_reg[16]_1 ;
  wire \pc_reg[17]_0 ;
  wire \pc_reg[17]_1 ;
  wire \pc_reg[18]_0 ;
  wire \pc_reg[18]_1 ;
  wire \pc_reg[19]_0 ;
  wire \pc_reg[19]_1 ;
  wire \pc_reg[1]_0 ;
  wire \pc_reg[1]_1 ;
  wire \pc_reg[20]_0 ;
  wire \pc_reg[20]_1 ;
  wire \pc_reg[21]_0 ;
  wire \pc_reg[21]_1 ;
  wire \pc_reg[22]_0 ;
  wire \pc_reg[22]_1 ;
  wire \pc_reg[23]_0 ;
  wire \pc_reg[23]_1 ;
  wire \pc_reg[24]_0 ;
  wire \pc_reg[24]_1 ;
  wire [22:0]\pc_reg[25]_0 ;
  wire \pc_reg[25]_1 ;
  wire \pc_reg[25]_2 ;
  wire \pc_reg[26]_0 ;
  wire \pc_reg[26]_1 ;
  wire \pc_reg[27]_0 ;
  wire \pc_reg[27]_1 ;
  wire \pc_reg[28]_0 ;
  wire \pc_reg[29]_0 ;
  wire [2:0]\pc_reg[2]_0 ;
  wire \pc_reg[2]_1 ;
  wire \pc_reg[2]_2 ;
  wire \pc_reg[30]_0 ;
  wire [3:0]\pc_reg[31]_0 ;
  wire [28:0]\pc_reg[31]_1 ;
  wire [28:0]\pc_reg[31]_2 ;
  wire [18:0]\pc_reg[31]_3 ;
  wire [4:0]\pc_reg[31]_4 ;
  wire [14:0]\pc_reg[31]_5 ;
  wire \pc_reg[31]_6 ;
  wire \pc_reg[31]_7 ;
  wire \pc_reg[3]_0 ;
  wire \pc_reg[3]_1 ;
  wire \pc_reg[4]_0 ;
  wire \pc_reg[4]_1 ;
  wire \pc_reg[5]_0 ;
  wire \pc_reg[5]_1 ;
  wire \pc_reg[6]_0 ;
  wire \pc_reg[6]_1 ;
  wire \pc_reg[7]_0 ;
  wire \pc_reg[7]_1 ;
  wire \pc_reg[8]_0 ;
  wire \pc_reg[8]_1 ;
  wire \pc_reg[9]_0 ;
  wire \pc_reg[9]_1 ;
  wire [2:2]plusOp;
  wire \prev_state_reg[0] ;
  wire \prev_state_reg[2] ;
  wire \prev_state_reg[2]_0 ;
  wire \prev_state_reg[3] ;
  wire \prev_state_reg[3]_0 ;
  wire [3:0]rad1;
  wire [3:0]rad2;
  wire [31:0]rd1;
  wire [31:0]rd2;
  wire [9:0]read_switches_IBUF;
  wire \register_array_reg[0][14] ;
  wire \register_array_reg[0][15] ;
  wire [31:0]\register_array_reg[0][15]_0 ;
  wire \register_array_reg[0][15]_1 ;
  wire \register_array_reg[0][23] ;
  wire [2:0]\register_array_reg[0][30] ;
  wire \register_array_reg[0][31] ;
  wire \register_array_reg[15][0] ;
  wire \register_array_reg[15][0]_0 ;
  wire [31:2]res;
  wire \res_reg[0]_i_4_n_0 ;
  wire \res_reg[10]_i_10_n_0 ;
  wire \res_reg[10]_i_8_n_0 ;
  wire \res_reg[10]_i_9_n_0 ;
  wire \res_reg[11]_i_10_n_0 ;
  wire \res_reg[11]_i_11_n_0 ;
  wire \res_reg[11]_i_12_n_0 ;
  wire \res_reg[11]_i_13_n_0 ;
  wire \res_reg[11]_i_14_n_0 ;
  wire \res_reg[11]_i_19_n_0 ;
  wire \res_reg[11]_i_20_n_0 ;
  wire \res_reg[11]_i_21_n_0 ;
  wire \res_reg[11]_i_22_n_0 ;
  wire \res_reg[11]_i_23_n_0 ;
  wire \res_reg[11]_i_24_n_0 ;
  wire \res_reg[11]_i_25_n_0 ;
  wire \res_reg[11]_i_26_n_0 ;
  wire \res_reg[11]_i_27_n_0 ;
  wire \res_reg[11]_i_28_n_0 ;
  wire \res_reg[11]_i_29_n_0 ;
  wire \res_reg[11]_i_30_n_0 ;
  wire \res_reg[11]_i_31_n_0 ;
  wire \res_reg[11]_i_32_n_0 ;
  wire \res_reg[11]_i_33_n_0 ;
  wire \res_reg[11]_i_34_n_0 ;
  wire \res_reg[11]_i_8_n_0 ;
  wire \res_reg[11]_i_9_n_0 ;
  wire \res_reg[12]_i_4_n_0 ;
  wire \res_reg[12]_i_8_n_0 ;
  wire \res_reg[13]_i_4_n_0 ;
  wire \res_reg[14]_i_4_n_0 ;
  wire \res_reg[15]_i_10_n_0 ;
  wire \res_reg[15]_i_11_n_0 ;
  wire \res_reg[15]_i_16_n_0 ;
  wire \res_reg[15]_i_17_n_0 ;
  wire \res_reg[15]_i_18_n_0 ;
  wire \res_reg[15]_i_19_n_0 ;
  wire \res_reg[15]_i_20_n_0 ;
  wire \res_reg[15]_i_21_n_0 ;
  wire \res_reg[15]_i_22_n_0 ;
  wire \res_reg[15]_i_23_n_0 ;
  wire \res_reg[15]_i_24_n_0 ;
  wire \res_reg[15]_i_25_n_0 ;
  wire \res_reg[15]_i_26_n_0 ;
  wire \res_reg[15]_i_27_n_0 ;
  wire \res_reg[15]_i_28_n_0 ;
  wire \res_reg[15]_i_29_n_0 ;
  wire \res_reg[15]_i_30_n_0 ;
  wire \res_reg[15]_i_31_n_0 ;
  wire \res_reg[15]_i_4_n_0 ;
  wire \res_reg[15]_i_5_n_0 ;
  wire \res_reg[15]_i_6_n_0 ;
  wire \res_reg[16]_i_4_n_0 ;
  wire \res_reg[16]_i_8_n_0 ;
  wire \res_reg[17]_i_4_n_0 ;
  wire \res_reg[18]_i_4_n_0 ;
  wire \res_reg[19]_i_10_n_0 ;
  wire \res_reg[19]_i_11_n_0 ;
  wire \res_reg[19]_i_16_n_0 ;
  wire \res_reg[19]_i_17_n_0 ;
  wire \res_reg[19]_i_18_n_0 ;
  wire \res_reg[19]_i_19_n_0 ;
  wire \res_reg[19]_i_20_n_0 ;
  wire \res_reg[19]_i_21_n_0 ;
  wire \res_reg[19]_i_22_n_0 ;
  wire \res_reg[19]_i_23_n_0 ;
  wire \res_reg[19]_i_24_n_0 ;
  wire \res_reg[19]_i_25_n_0 ;
  wire \res_reg[19]_i_26_n_0 ;
  wire \res_reg[19]_i_27_n_0 ;
  wire \res_reg[19]_i_28_n_0 ;
  wire \res_reg[19]_i_29_n_0 ;
  wire \res_reg[19]_i_30_n_0 ;
  wire \res_reg[19]_i_31_n_0 ;
  wire \res_reg[19]_i_4_n_0 ;
  wire \res_reg[19]_i_5_n_0 ;
  wire \res_reg[19]_i_6_n_0 ;
  wire \res_reg[1]_i_4_n_0 ;
  wire \res_reg[20]_i_10_n_0 ;
  wire \res_reg[20]_i_11_n_0 ;
  wire \res_reg[20]_i_8_n_0 ;
  wire \res_reg[20]_i_9_n_0 ;
  wire \res_reg[21]_i_10_n_0 ;
  wire \res_reg[21]_i_8_n_0 ;
  wire \res_reg[21]_i_9_n_0 ;
  wire \res_reg[22]_i_10_n_0 ;
  wire \res_reg[22]_i_8_n_0 ;
  wire \res_reg[22]_i_9_n_0 ;
  wire \res_reg[23]_i_10_n_0 ;
  wire \res_reg[23]_i_11_n_0 ;
  wire \res_reg[23]_i_12_n_0 ;
  wire \res_reg[23]_i_13_n_0 ;
  wire \res_reg[23]_i_14_n_0 ;
  wire \res_reg[23]_i_19_n_0 ;
  wire \res_reg[23]_i_20_n_0 ;
  wire \res_reg[23]_i_21_n_0 ;
  wire \res_reg[23]_i_22_n_0 ;
  wire \res_reg[23]_i_23_n_0 ;
  wire \res_reg[23]_i_24_n_0 ;
  wire \res_reg[23]_i_25_n_0 ;
  wire \res_reg[23]_i_26_n_0 ;
  wire \res_reg[23]_i_27_n_0 ;
  wire \res_reg[23]_i_28_n_0 ;
  wire \res_reg[23]_i_29_n_0 ;
  wire \res_reg[23]_i_30_n_0 ;
  wire \res_reg[23]_i_31_n_0 ;
  wire \res_reg[23]_i_32_n_0 ;
  wire \res_reg[23]_i_33_n_0 ;
  wire \res_reg[23]_i_34_n_0 ;
  wire \res_reg[23]_i_8_n_0 ;
  wire \res_reg[23]_i_9_n_0 ;
  wire \res_reg[24]_i_10_n_0 ;
  wire \res_reg[24]_i_8_n_0 ;
  wire \res_reg[24]_i_9_n_0 ;
  wire \res_reg[25]_i_10_n_0 ;
  wire \res_reg[25]_i_8_n_0 ;
  wire \res_reg[25]_i_9_n_0 ;
  wire \res_reg[27]_i_10_n_0 ;
  wire \res_reg[27]_i_11_n_0 ;
  wire \res_reg[27]_i_12_n_0 ;
  wire \res_reg[27]_i_13_n_0 ;
  wire \res_reg[27]_i_20_n_0 ;
  wire \res_reg[27]_i_21_n_0 ;
  wire \res_reg[27]_i_22_n_0 ;
  wire \res_reg[27]_i_23_n_0 ;
  wire \res_reg[27]_i_24_n_0 ;
  wire \res_reg[27]_i_25_n_0 ;
  wire \res_reg[27]_i_26_n_0 ;
  wire \res_reg[27]_i_27_n_0 ;
  wire \res_reg[27]_i_28_n_0 ;
  wire \res_reg[27]_i_29_n_0 ;
  wire \res_reg[27]_i_30_n_0 ;
  wire \res_reg[27]_i_31_n_0 ;
  wire \res_reg[27]_i_32_n_0 ;
  wire \res_reg[27]_i_33_n_0 ;
  wire \res_reg[27]_i_34_n_0 ;
  wire \res_reg[27]_i_35_n_0 ;
  wire \res_reg[28]_i_4_n_0 ;
  wire \res_reg[29]_i_4_n_0 ;
  wire \res_reg[2]_i_4_n_0 ;
  wire \res_reg[30]_i_4_n_0 ;
  wire \res_reg[31]_i_15_n_0 ;
  wire \res_reg[31]_i_16_n_0 ;
  wire \res_reg[31]_i_17_n_0 ;
  wire \res_reg[31]_i_18_n_0 ;
  wire \res_reg[31]_i_19_n_0 ;
  wire \res_reg[31]_i_20_n_0 ;
  wire \res_reg[31]_i_21_n_0 ;
  wire \res_reg[31]_i_22_n_0 ;
  wire \res_reg[31]_i_23_n_0 ;
  wire \res_reg[31]_i_24_n_0 ;
  wire \res_reg[31]_i_25_n_0 ;
  wire \res_reg[31]_i_26_n_0 ;
  wire \res_reg[31]_i_27_n_0 ;
  wire \res_reg[31]_i_28_n_0 ;
  wire \res_reg[31]_i_29_n_0 ;
  wire \res_reg[31]_i_30_n_0 ;
  wire \res_reg[3]_i_10_n_0 ;
  wire \res_reg[3]_i_11_n_0 ;
  wire \res_reg[3]_i_15_n_0 ;
  wire \res_reg[3]_i_16_n_0 ;
  wire \res_reg[3]_i_17_n_0 ;
  wire \res_reg[3]_i_19_n_0 ;
  wire \res_reg[3]_i_20_n_0 ;
  wire \res_reg[3]_i_21_n_0 ;
  wire \res_reg[3]_i_22_n_0 ;
  wire \res_reg[3]_i_23_n_0 ;
  wire \res_reg[3]_i_24_n_0 ;
  wire \res_reg[3]_i_25_n_0 ;
  wire \res_reg[3]_i_26_n_0 ;
  wire \res_reg[3]_i_27_n_0 ;
  wire \res_reg[3]_i_28_n_0 ;
  wire \res_reg[3]_i_29_n_0 ;
  wire \res_reg[3]_i_30_n_0 ;
  wire \res_reg[3]_i_4_n_0 ;
  wire \res_reg[3]_i_5_n_0 ;
  wire \res_reg[3]_i_6_n_0 ;
  wire \res_reg[4]_i_10_n_0 ;
  wire \res_reg[4]_i_11_n_0 ;
  wire \res_reg[4]_i_14_n_0 ;
  wire \res_reg[4]_i_8_n_0 ;
  wire \res_reg[4]_i_9_n_0 ;
  wire \res_reg[5]_i_10_n_0 ;
  wire \res_reg[5]_i_8_n_0 ;
  wire \res_reg[5]_i_9_n_0 ;
  wire \res_reg[6]_i_4_n_0 ;
  wire \res_reg[7]_i_10_n_0 ;
  wire \res_reg[7]_i_11_n_0 ;
  wire \res_reg[7]_i_16_n_0 ;
  wire \res_reg[7]_i_17_n_0 ;
  wire \res_reg[7]_i_18_n_0 ;
  wire \res_reg[7]_i_19_n_0 ;
  wire \res_reg[7]_i_20_n_0 ;
  wire \res_reg[7]_i_21_n_0 ;
  wire \res_reg[7]_i_22_n_0 ;
  wire \res_reg[7]_i_23_n_0 ;
  wire \res_reg[7]_i_24_n_0 ;
  wire \res_reg[7]_i_25_n_0 ;
  wire \res_reg[7]_i_26_n_0 ;
  wire \res_reg[7]_i_27_n_0 ;
  wire \res_reg[7]_i_28_n_0 ;
  wire \res_reg[7]_i_29_n_0 ;
  wire \res_reg[7]_i_30_n_0 ;
  wire \res_reg[7]_i_31_n_0 ;
  wire \res_reg[7]_i_4_n_0 ;
  wire \res_reg[7]_i_5_n_0 ;
  wire \res_reg[7]_i_6_n_0 ;
  wire \res_reg[8]_i_10_n_0 ;
  wire \res_reg[8]_i_11_n_0 ;
  wire \res_reg[8]_i_8_n_0 ;
  wire \res_reg[8]_i_9_n_0 ;
  wire \res_reg[9]_i_10_n_0 ;
  wire \res_reg[9]_i_8_n_0 ;
  wire \res_reg[9]_i_9_n_0 ;
  wire [1:0]res_reg_LAST_TWO;
  wire [4:0]shift_amount;
  wire \shift_amount_reg[0]_i_1_n_0 ;
  wire \shift_amount_reg[1]_i_1_n_0 ;
  wire \shift_amount_reg[2]_i_1_n_0 ;
  wire \shift_amount_reg[3]_i_1_n_0 ;
  wire \shift_amount_reg[4]_i_1_n_0 ;
  wire \shift_amount_reg[4]_i_2_n_0 ;
  wire \shift_amount_reg[4]_i_3_n_0 ;
  wire [2:0]shift_reg;
  wire \shift_reg_reg[0]_i_2_n_0 ;
  wire \shift_reg_reg[0]_i_4_n_0 ;
  wire \shift_reg_reg[0]_i_5_n_0 ;
  wire \shift_reg_reg[10]_i_10_n_0 ;
  wire \shift_reg_reg[10]_i_2_n_0 ;
  wire \shift_reg_reg[10]_i_3_n_0 ;
  wire \shift_reg_reg[10]_i_4_n_0 ;
  wire \shift_reg_reg[10]_i_5_n_0 ;
  wire \shift_reg_reg[10]_i_6_n_0 ;
  wire \shift_reg_reg[10]_i_7_n_0 ;
  wire \shift_reg_reg[10]_i_8_n_0 ;
  wire \shift_reg_reg[10]_i_9_n_0 ;
  wire \shift_reg_reg[11]_i_10_n_0 ;
  wire \shift_reg_reg[11]_i_11_n_0 ;
  wire \shift_reg_reg[11]_i_2_n_0 ;
  wire \shift_reg_reg[11]_i_3_n_0 ;
  wire \shift_reg_reg[11]_i_4_n_0 ;
  wire \shift_reg_reg[11]_i_5_n_0 ;
  wire \shift_reg_reg[11]_i_6_n_0 ;
  wire \shift_reg_reg[11]_i_7_n_0 ;
  wire \shift_reg_reg[11]_i_8_n_0 ;
  wire \shift_reg_reg[11]_i_9_n_0 ;
  wire \shift_reg_reg[12]_i_10_n_0 ;
  wire \shift_reg_reg[12]_i_2_n_0 ;
  wire \shift_reg_reg[12]_i_3_n_0 ;
  wire \shift_reg_reg[12]_i_4_n_0 ;
  wire \shift_reg_reg[12]_i_5_n_0 ;
  wire \shift_reg_reg[12]_i_6_n_0 ;
  wire \shift_reg_reg[12]_i_7_n_0 ;
  wire \shift_reg_reg[12]_i_8_n_0 ;
  wire \shift_reg_reg[12]_i_9_n_0 ;
  wire \shift_reg_reg[13]_i_10_n_0 ;
  wire \shift_reg_reg[13]_i_2_n_0 ;
  wire \shift_reg_reg[13]_i_3_n_0 ;
  wire \shift_reg_reg[13]_i_4_n_0 ;
  wire \shift_reg_reg[13]_i_5_n_0 ;
  wire \shift_reg_reg[13]_i_6_n_0 ;
  wire \shift_reg_reg[13]_i_7_n_0 ;
  wire \shift_reg_reg[13]_i_8_n_0 ;
  wire \shift_reg_reg[13]_i_9_n_0 ;
  wire \shift_reg_reg[14]_i_10_n_0 ;
  wire \shift_reg_reg[14]_i_2_n_0 ;
  wire \shift_reg_reg[14]_i_3_n_0 ;
  wire \shift_reg_reg[14]_i_4_n_0 ;
  wire \shift_reg_reg[14]_i_5_n_0 ;
  wire \shift_reg_reg[14]_i_6_n_0 ;
  wire \shift_reg_reg[14]_i_7_n_0 ;
  wire \shift_reg_reg[14]_i_8_n_0 ;
  wire \shift_reg_reg[14]_i_9_n_0 ;
  wire \shift_reg_reg[15]_i_10_n_0 ;
  wire \shift_reg_reg[15]_i_2_n_0 ;
  wire \shift_reg_reg[15]_i_3_n_0 ;
  wire \shift_reg_reg[15]_i_4_n_0 ;
  wire \shift_reg_reg[15]_i_5_n_0 ;
  wire \shift_reg_reg[15]_i_6_n_0 ;
  wire \shift_reg_reg[15]_i_7_n_0 ;
  wire \shift_reg_reg[15]_i_8_n_0 ;
  wire \shift_reg_reg[15]_i_9_n_0 ;
  wire \shift_reg_reg[16]_i_2_n_0 ;
  wire \shift_reg_reg[16]_i_3_n_0 ;
  wire \shift_reg_reg[16]_i_4_n_0 ;
  wire \shift_reg_reg[16]_i_5_n_0 ;
  wire \shift_reg_reg[16]_i_6_n_0 ;
  wire \shift_reg_reg[16]_i_7_n_0 ;
  wire \shift_reg_reg[16]_i_8_n_0 ;
  wire \shift_reg_reg[16]_i_9_n_0 ;
  wire \shift_reg_reg[17]_i_2_n_0 ;
  wire \shift_reg_reg[17]_i_3_n_0 ;
  wire \shift_reg_reg[17]_i_4_n_0 ;
  wire \shift_reg_reg[17]_i_5_n_0 ;
  wire \shift_reg_reg[17]_i_6_n_0 ;
  wire \shift_reg_reg[17]_i_7_n_0 ;
  wire \shift_reg_reg[18]_i_2_n_0 ;
  wire \shift_reg_reg[18]_i_3_n_0 ;
  wire \shift_reg_reg[18]_i_4_n_0 ;
  wire \shift_reg_reg[18]_i_5_n_0 ;
  wire \shift_reg_reg[18]_i_6_n_0 ;
  wire \shift_reg_reg[18]_i_7_n_0 ;
  wire \shift_reg_reg[19]_i_10_n_0 ;
  wire \shift_reg_reg[19]_i_11_n_0 ;
  wire \shift_reg_reg[19]_i_12_n_0 ;
  wire \shift_reg_reg[19]_i_13_n_0 ;
  wire \shift_reg_reg[19]_i_2_n_0 ;
  wire \shift_reg_reg[19]_i_3_n_0 ;
  wire \shift_reg_reg[19]_i_4_n_0 ;
  wire \shift_reg_reg[19]_i_5_n_0 ;
  wire \shift_reg_reg[19]_i_6_n_0 ;
  wire \shift_reg_reg[19]_i_7_n_0 ;
  wire \shift_reg_reg[19]_i_8_n_0 ;
  wire \shift_reg_reg[19]_i_9_n_0 ;
  wire \shift_reg_reg[1]_i_2_n_0 ;
  wire \shift_reg_reg[1]_i_3_n_0 ;
  wire \shift_reg_reg[1]_i_4_n_0 ;
  wire \shift_reg_reg[1]_i_5_n_0 ;
  wire \shift_reg_reg[20]_i_10_n_0 ;
  wire \shift_reg_reg[20]_i_11_n_0 ;
  wire \shift_reg_reg[20]_i_12_n_0 ;
  wire \shift_reg_reg[20]_i_13_n_0 ;
  wire \shift_reg_reg[20]_i_2_n_0 ;
  wire \shift_reg_reg[20]_i_3_n_0 ;
  wire \shift_reg_reg[20]_i_4_n_0 ;
  wire \shift_reg_reg[20]_i_5_n_0 ;
  wire \shift_reg_reg[20]_i_6_n_0 ;
  wire \shift_reg_reg[20]_i_7_n_0 ;
  wire \shift_reg_reg[20]_i_8_n_0 ;
  wire \shift_reg_reg[20]_i_9_n_0 ;
  wire \shift_reg_reg[21]_i_10_n_0 ;
  wire \shift_reg_reg[21]_i_11_n_0 ;
  wire \shift_reg_reg[21]_i_12_n_0 ;
  wire \shift_reg_reg[21]_i_13_n_0 ;
  wire \shift_reg_reg[21]_i_14_n_0 ;
  wire \shift_reg_reg[21]_i_15_n_0 ;
  wire \shift_reg_reg[21]_i_2_n_0 ;
  wire \shift_reg_reg[21]_i_3_n_0 ;
  wire \shift_reg_reg[21]_i_4_n_0 ;
  wire \shift_reg_reg[21]_i_5_n_0 ;
  wire \shift_reg_reg[21]_i_6_n_0 ;
  wire \shift_reg_reg[21]_i_7_n_0 ;
  wire \shift_reg_reg[21]_i_8_n_0 ;
  wire \shift_reg_reg[21]_i_9_n_0 ;
  wire \shift_reg_reg[22]_i_10_n_0 ;
  wire \shift_reg_reg[22]_i_11_n_0 ;
  wire \shift_reg_reg[22]_i_12_n_0 ;
  wire \shift_reg_reg[22]_i_13_n_0 ;
  wire \shift_reg_reg[22]_i_14_n_0 ;
  wire \shift_reg_reg[22]_i_15_n_0 ;
  wire \shift_reg_reg[22]_i_2_n_0 ;
  wire \shift_reg_reg[22]_i_3_n_0 ;
  wire \shift_reg_reg[22]_i_4_n_0 ;
  wire \shift_reg_reg[22]_i_5_n_0 ;
  wire \shift_reg_reg[22]_i_6_n_0 ;
  wire \shift_reg_reg[22]_i_7_n_0 ;
  wire \shift_reg_reg[22]_i_8_n_0 ;
  wire \shift_reg_reg[22]_i_9_n_0 ;
  wire \shift_reg_reg[23]_i_10_n_0 ;
  wire \shift_reg_reg[23]_i_11_n_0 ;
  wire \shift_reg_reg[23]_i_12_n_0 ;
  wire \shift_reg_reg[23]_i_13_n_0 ;
  wire \shift_reg_reg[23]_i_14_n_0 ;
  wire \shift_reg_reg[23]_i_15_n_0 ;
  wire \shift_reg_reg[23]_i_2_n_0 ;
  wire \shift_reg_reg[23]_i_3_n_0 ;
  wire \shift_reg_reg[23]_i_4_n_0 ;
  wire \shift_reg_reg[23]_i_5_n_0 ;
  wire \shift_reg_reg[23]_i_6_n_0 ;
  wire \shift_reg_reg[23]_i_7_n_0 ;
  wire \shift_reg_reg[23]_i_8_n_0 ;
  wire \shift_reg_reg[23]_i_9_n_0 ;
  wire \shift_reg_reg[24]_i_10_n_0 ;
  wire \shift_reg_reg[24]_i_11_n_0 ;
  wire \shift_reg_reg[24]_i_12_n_0 ;
  wire \shift_reg_reg[24]_i_13_n_0 ;
  wire \shift_reg_reg[24]_i_14_n_0 ;
  wire \shift_reg_reg[24]_i_15_n_0 ;
  wire \shift_reg_reg[24]_i_2_n_0 ;
  wire \shift_reg_reg[24]_i_3_n_0 ;
  wire \shift_reg_reg[24]_i_4_n_0 ;
  wire \shift_reg_reg[24]_i_5_n_0 ;
  wire \shift_reg_reg[24]_i_6_n_0 ;
  wire \shift_reg_reg[24]_i_7_n_0 ;
  wire \shift_reg_reg[24]_i_8_n_0 ;
  wire \shift_reg_reg[24]_i_9_n_0 ;
  wire \shift_reg_reg[25]_i_10_n_0 ;
  wire \shift_reg_reg[25]_i_11_n_0 ;
  wire \shift_reg_reg[25]_i_12_n_0 ;
  wire \shift_reg_reg[25]_i_13_n_0 ;
  wire \shift_reg_reg[25]_i_14_n_0 ;
  wire \shift_reg_reg[25]_i_15_n_0 ;
  wire \shift_reg_reg[25]_i_16_n_0 ;
  wire \shift_reg_reg[25]_i_2_n_0 ;
  wire \shift_reg_reg[25]_i_3_n_0 ;
  wire \shift_reg_reg[25]_i_4_n_0 ;
  wire \shift_reg_reg[25]_i_5_n_0 ;
  wire \shift_reg_reg[25]_i_6_n_0 ;
  wire \shift_reg_reg[25]_i_7_n_0 ;
  wire \shift_reg_reg[25]_i_8_n_0 ;
  wire \shift_reg_reg[25]_i_9_n_0 ;
  wire \shift_reg_reg[26]_i_10_n_0 ;
  wire \shift_reg_reg[26]_i_11_n_0 ;
  wire \shift_reg_reg[26]_i_12_n_0 ;
  wire \shift_reg_reg[26]_i_13_n_0 ;
  wire \shift_reg_reg[26]_i_14_n_0 ;
  wire \shift_reg_reg[26]_i_15_n_0 ;
  wire \shift_reg_reg[26]_i_16_n_0 ;
  wire \shift_reg_reg[26]_i_2_n_0 ;
  wire \shift_reg_reg[26]_i_3_n_0 ;
  wire \shift_reg_reg[26]_i_4_n_0 ;
  wire \shift_reg_reg[26]_i_5_n_0 ;
  wire \shift_reg_reg[26]_i_6_n_0 ;
  wire \shift_reg_reg[26]_i_7_n_0 ;
  wire \shift_reg_reg[26]_i_8_n_0 ;
  wire \shift_reg_reg[26]_i_9_n_0 ;
  wire \shift_reg_reg[27]_i_10_n_0 ;
  wire \shift_reg_reg[27]_i_11_n_0 ;
  wire \shift_reg_reg[27]_i_12_n_0 ;
  wire \shift_reg_reg[27]_i_13_n_0 ;
  wire \shift_reg_reg[27]_i_14_n_0 ;
  wire \shift_reg_reg[27]_i_15_n_0 ;
  wire \shift_reg_reg[27]_i_16_n_0 ;
  wire \shift_reg_reg[27]_i_17_n_0 ;
  wire \shift_reg_reg[27]_i_2_n_0 ;
  wire \shift_reg_reg[27]_i_3_n_0 ;
  wire \shift_reg_reg[27]_i_4_n_0 ;
  wire \shift_reg_reg[27]_i_5_n_0 ;
  wire \shift_reg_reg[27]_i_6_n_0 ;
  wire \shift_reg_reg[27]_i_7_n_0 ;
  wire \shift_reg_reg[27]_i_8_n_0 ;
  wire \shift_reg_reg[27]_i_9_n_0 ;
  wire \shift_reg_reg[28]_i_10_n_0 ;
  wire \shift_reg_reg[28]_i_11_n_0 ;
  wire \shift_reg_reg[28]_i_12_n_0 ;
  wire \shift_reg_reg[28]_i_13_n_0 ;
  wire \shift_reg_reg[28]_i_14_n_0 ;
  wire \shift_reg_reg[28]_i_15_n_0 ;
  wire \shift_reg_reg[28]_i_2_n_0 ;
  wire \shift_reg_reg[28]_i_3_n_0 ;
  wire \shift_reg_reg[28]_i_4_n_0 ;
  wire \shift_reg_reg[28]_i_5_n_0 ;
  wire \shift_reg_reg[28]_i_6_n_0 ;
  wire \shift_reg_reg[28]_i_7_n_0 ;
  wire \shift_reg_reg[28]_i_8_n_0 ;
  wire \shift_reg_reg[28]_i_9_n_0 ;
  wire \shift_reg_reg[29]_i_10_n_0 ;
  wire \shift_reg_reg[29]_i_11_n_0 ;
  wire \shift_reg_reg[29]_i_12_n_0 ;
  wire \shift_reg_reg[29]_i_13_n_0 ;
  wire \shift_reg_reg[29]_i_2_n_0 ;
  wire \shift_reg_reg[29]_i_3_n_0 ;
  wire \shift_reg_reg[29]_i_4_n_0 ;
  wire \shift_reg_reg[29]_i_5_n_0 ;
  wire \shift_reg_reg[29]_i_6_n_0 ;
  wire \shift_reg_reg[29]_i_7_n_0 ;
  wire \shift_reg_reg[29]_i_8_n_0 ;
  wire \shift_reg_reg[29]_i_9_n_0 ;
  wire \shift_reg_reg[2]_i_2_n_0 ;
  wire \shift_reg_reg[2]_i_3_n_0 ;
  wire \shift_reg_reg[2]_i_4_n_0 ;
  wire \shift_reg_reg[2]_i_5_n_0 ;
  wire \shift_reg_reg[2]_i_6_n_0 ;
  wire \shift_reg_reg[2]_i_7_n_0 ;
  wire \shift_reg_reg[30]_i_10_n_0 ;
  wire \shift_reg_reg[30]_i_11_n_0 ;
  wire \shift_reg_reg[30]_i_12_n_0 ;
  wire \shift_reg_reg[30]_i_13_n_0 ;
  wire \shift_reg_reg[30]_i_2_n_0 ;
  wire \shift_reg_reg[30]_i_3_n_0 ;
  wire \shift_reg_reg[30]_i_4_n_0 ;
  wire \shift_reg_reg[30]_i_5_n_0 ;
  wire \shift_reg_reg[30]_i_6_n_0 ;
  wire \shift_reg_reg[30]_i_7_n_0 ;
  wire \shift_reg_reg[30]_i_8_n_0 ;
  wire \shift_reg_reg[30]_i_9_n_0 ;
  wire \shift_reg_reg[31]_i_10_n_0 ;
  wire \shift_reg_reg[31]_i_11_n_0 ;
  wire \shift_reg_reg[31]_i_12_n_0 ;
  wire \shift_reg_reg[31]_i_13_n_0 ;
  wire \shift_reg_reg[31]_i_14_n_0 ;
  wire \shift_reg_reg[31]_i_15_n_0 ;
  wire \shift_reg_reg[31]_i_16_n_0 ;
  wire \shift_reg_reg[31]_i_17_n_0 ;
  wire \shift_reg_reg[31]_i_18_n_0 ;
  wire \shift_reg_reg[31]_i_19_n_0 ;
  wire \shift_reg_reg[31]_i_20_n_0 ;
  wire \shift_reg_reg[31]_i_21_n_0 ;
  wire \shift_reg_reg[31]_i_22_n_0 ;
  wire \shift_reg_reg[31]_i_23_n_0 ;
  wire \shift_reg_reg[31]_i_24_n_0 ;
  wire \shift_reg_reg[31]_i_25_n_0 ;
  wire \shift_reg_reg[31]_i_26_n_0 ;
  wire \shift_reg_reg[31]_i_27_n_0 ;
  wire \shift_reg_reg[31]_i_28_n_0 ;
  wire \shift_reg_reg[31]_i_29_n_0 ;
  wire \shift_reg_reg[31]_i_30_n_0 ;
  wire \shift_reg_reg[31]_i_31_n_0 ;
  wire \shift_reg_reg[31]_i_32_n_0 ;
  wire \shift_reg_reg[31]_i_33_n_0 ;
  wire \shift_reg_reg[31]_i_34_n_0 ;
  wire \shift_reg_reg[31]_i_35_n_0 ;
  wire \shift_reg_reg[31]_i_36_n_0 ;
  wire \shift_reg_reg[31]_i_37_n_0 ;
  wire \shift_reg_reg[31]_i_38_n_0 ;
  wire \shift_reg_reg[31]_i_39_n_0 ;
  wire \shift_reg_reg[31]_i_40_n_0 ;
  wire \shift_reg_reg[31]_i_41_n_0 ;
  wire \shift_reg_reg[31]_i_42_n_0 ;
  wire \shift_reg_reg[31]_i_43_n_0 ;
  wire \shift_reg_reg[31]_i_44_n_0 ;
  wire \shift_reg_reg[31]_i_45_n_0 ;
  wire \shift_reg_reg[31]_i_46_n_0 ;
  wire \shift_reg_reg[31]_i_4_n_0 ;
  wire \shift_reg_reg[31]_i_5_n_0 ;
  wire \shift_reg_reg[31]_i_7_n_0 ;
  wire \shift_reg_reg[31]_i_8_n_0 ;
  wire \shift_reg_reg[31]_i_9_n_0 ;
  wire \shift_reg_reg[3]_i_2_n_0 ;
  wire \shift_reg_reg[3]_i_3_n_0 ;
  wire \shift_reg_reg[3]_i_4_n_0 ;
  wire \shift_reg_reg[3]_i_5_n_0 ;
  wire \shift_reg_reg[3]_i_6_n_0 ;
  wire \shift_reg_reg[3]_i_7_n_0 ;
  wire \shift_reg_reg[3]_i_8_n_0 ;
  wire \shift_reg_reg[4]_i_2_n_0 ;
  wire \shift_reg_reg[4]_i_3_n_0 ;
  wire \shift_reg_reg[4]_i_4_n_0 ;
  wire \shift_reg_reg[4]_i_5_n_0 ;
  wire \shift_reg_reg[4]_i_6_n_0 ;
  wire \shift_reg_reg[4]_i_7_n_0 ;
  wire \shift_reg_reg[4]_i_8_n_0 ;
  wire \shift_reg_reg[4]_i_9_n_0 ;
  wire \shift_reg_reg[5]_i_2_n_0 ;
  wire \shift_reg_reg[5]_i_3_n_0 ;
  wire \shift_reg_reg[5]_i_4_n_0 ;
  wire \shift_reg_reg[5]_i_5_n_0 ;
  wire \shift_reg_reg[5]_i_6_n_0 ;
  wire \shift_reg_reg[5]_i_7_n_0 ;
  wire \shift_reg_reg[5]_i_8_n_0 ;
  wire \shift_reg_reg[5]_i_9_n_0 ;
  wire \shift_reg_reg[6]_i_2_n_0 ;
  wire \shift_reg_reg[6]_i_3_n_0 ;
  wire \shift_reg_reg[6]_i_4_n_0 ;
  wire \shift_reg_reg[6]_i_5_n_0 ;
  wire \shift_reg_reg[6]_i_6_n_0 ;
  wire \shift_reg_reg[6]_i_7_n_0 ;
  wire \shift_reg_reg[6]_i_8_n_0 ;
  wire \shift_reg_reg[6]_i_9_n_0 ;
  wire \shift_reg_reg[7]_i_2_n_0 ;
  wire \shift_reg_reg[7]_i_3_n_0 ;
  wire \shift_reg_reg[7]_i_4_n_0 ;
  wire \shift_reg_reg[7]_i_5_n_0 ;
  wire \shift_reg_reg[7]_i_6_n_0 ;
  wire \shift_reg_reg[7]_i_7_n_0 ;
  wire \shift_reg_reg[7]_i_8_n_0 ;
  wire \shift_reg_reg[7]_i_9_n_0 ;
  wire \shift_reg_reg[8]_i_10_n_0 ;
  wire \shift_reg_reg[8]_i_2_n_0 ;
  wire \shift_reg_reg[8]_i_3_n_0 ;
  wire \shift_reg_reg[8]_i_4_n_0 ;
  wire \shift_reg_reg[8]_i_5_n_0 ;
  wire \shift_reg_reg[8]_i_6_n_0 ;
  wire \shift_reg_reg[8]_i_7_n_0 ;
  wire \shift_reg_reg[8]_i_8_n_0 ;
  wire \shift_reg_reg[8]_i_9_n_0 ;
  wire \shift_reg_reg[9]_i_10_n_0 ;
  wire \shift_reg_reg[9]_i_2_n_0 ;
  wire \shift_reg_reg[9]_i_3_n_0 ;
  wire \shift_reg_reg[9]_i_4_n_0 ;
  wire \shift_reg_reg[9]_i_5_n_0 ;
  wire \shift_reg_reg[9]_i_6_n_0 ;
  wire \shift_reg_reg[9]_i_7_n_0 ;
  wire \shift_reg_reg[9]_i_8_n_0 ;
  wire \shift_reg_reg[9]_i_9_n_0 ;
  wire [1:0]shift_type;
  wire \type_of_dt_ins_reg[1]_i_2_n_0 ;
  wire \type_of_dt_ins_reg[2]_i_3_n_0 ;
  wire [31:0]x_reg;
  wire [3:0]NLW_C_reg_i_12_CO_UNCONNECTED;
  wire [3:1]NLW_C_reg_i_12_O_UNCONNECTED;
  wire [2:0]NLW_C_reg_i_18_CO_UNCONNECTED;
  wire [2:0]\NLW_res_reg[11]_i_10_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[11]_i_11_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[11]_i_12_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[11]_i_13_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[12]_i_8_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[15]_i_10_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[15]_i_11_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[15]_i_5_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[15]_i_6_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[16]_i_8_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[19]_i_10_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[19]_i_11_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[19]_i_5_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[19]_i_6_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[20]_i_10_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[23]_i_10_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[23]_i_11_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[23]_i_12_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[23]_i_13_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[27]_i_10_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[27]_i_11_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[27]_i_12_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[27]_i_13_CO_UNCONNECTED ;
  wire [3:0]\NLW_res_reg[31]_i_10_CO_UNCONNECTED ;
  wire [3:0]\NLW_res_reg[31]_i_11_CO_UNCONNECTED ;
  wire [3:0]\NLW_res_reg[31]_i_7_CO_UNCONNECTED ;
  wire [3:0]\NLW_res_reg[31]_i_8_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[3]_i_10_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[3]_i_11_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[3]_i_5_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[3]_i_6_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[4]_i_10_CO_UNCONNECTED ;
  wire [0:0]\NLW_res_reg[4]_i_10_O_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[7]_i_10_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[7]_i_11_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[7]_i_5_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[7]_i_6_CO_UNCONNECTED ;
  wire [2:0]\NLW_res_reg[8]_i_10_CO_UNCONNECTED ;

  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    C_reg
       (.CLR(AR),
        .D(flags_sig[0]),
        .G(Fset),
        .GE(1'b1),
        .Q(\pc_reg[0]_0 ));
  CARRY4 C_reg_i_12
       (.CI(C_reg_i_18_n_0),
        .CO({NLW_C_reg_i_12_CO_UNCONNECTED[3:2],CO,NLW_C_reg_i_12_CO_UNCONNECTED[0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({NLW_C_reg_i_12_O_UNCONNECTED[3:1],\pc_reg[25]_0 [22]}),
        .S({1'b0,1'b0,1'b1,ir_out[23]}));
  LUT4 #(
    .INIT(16'h0004)) 
    C_reg_i_17
       (.I0(out[1]),
        .I1(out[3]),
        .I2(out[2]),
        .I3(out[0]),
        .O(Rsrc));
  CARRY4 C_reg_i_18
       (.CI(\res_reg[20]_i_10_n_0 ),
        .CO({C_reg_i_18_n_0,NLW_C_reg_i_18_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\pc_reg[25]_0 [21:18]),
        .S({ir_out[22:20],\ir_reg_reg_n_0_[19] }));
  LUT5 #(
    .INIT(32'h0000BA00)) 
    C_reg_i_2
       (.I0(ir_out[20]),
        .I1(ir_out[23]),
        .I2(ir_out[24]),
        .I3(C_reg_i_9_n_0),
        .I4(Memory_n_2),
        .O(Fset));
  LUT5 #(
    .INIT(32'hE21D1DE2)) 
    C_reg_i_6
       (.I0(pc[31]),
        .I1(\register_array_reg[0][31] ),
        .I2(a_reg[31]),
        .I3(op2[28]),
        .I4(flags_sig[1]),
        .O(c_31));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    C_reg_i_7
       (.I0(a_reg[31]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[31]),
        .O(op1[31]));
  LUT4 #(
    .INIT(16'h0400)) 
    C_reg_i_9
       (.I0(out[1]),
        .I1(out[2]),
        .I2(out[3]),
        .I3(out[0]),
        .O(C_reg_i_9_n_0));
  LUT6 #(
    .INIT(64'h3333CFCC3333BBBB)) 
    \FSM_sequential_state[0]_i_2 
       (.I0(\FSM_sequential_state[2]_i_2_n_0 ),
        .I1(out[1]),
        .I2(ir_out[20]),
        .I3(\MainCtrlIns/state111_out ),
        .I4(out[2]),
        .I5(out[3]),
        .O(\FSM_sequential_state[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000000AF000000AE)) 
    \FSM_sequential_state[0]_i_3 
       (.I0(out[1]),
        .I1(\MainCtrlIns/state111_out ),
        .I2(\MainCtrlIns/state1 ),
        .I3(out[2]),
        .I4(out[3]),
        .I5(\MainCtrlIns/check_9 ),
        .O(\FSM_sequential_state[0]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h04)) 
    \FSM_sequential_state[0]_i_4 
       (.I0(ir_out[26]),
        .I1(ir_out[27]),
        .I2(ir_out[24]),
        .O(\MainCtrlIns/check_9 ));
  LUT6 #(
    .INIT(64'h0F0F0C0F08080808)) 
    \FSM_sequential_state[1]_i_2 
       (.I0(\FSM_sequential_state[2]_i_2_n_0 ),
        .I1(out[1]),
        .I2(out[2]),
        .I3(\MainCtrlIns/state111_out ),
        .I4(ir_out[20]),
        .I5(out[3]),
        .O(\FSM_sequential_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h00005554)) 
    \FSM_sequential_state[1]_i_3 
       (.I0(out[3]),
        .I1(out[2]),
        .I2(\MainCtrlIns/state1 ),
        .I3(\MainCtrlIns/state111_out ),
        .I4(out[1]),
        .O(\FSM_sequential_state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00003F3F0C0F0404)) 
    \FSM_sequential_state[2]_i_1 
       (.I0(\MainCtrlIns/state1 ),
        .I1(out[0]),
        .I2(out[3]),
        .I3(\FSM_sequential_state[2]_i_2_n_0 ),
        .I4(out[1]),
        .I5(out[2]),
        .O(D[2]));
  LUT5 #(
    .INIT(32'h000000F7)) 
    \FSM_sequential_state[2]_i_2 
       (.I0(ir_out[4]),
        .I1(ir_out[7]),
        .I2(ir_out[25]),
        .I3(ir_out[26]),
        .I4(ir_out[27]),
        .O(\FSM_sequential_state[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h000F0F0FF0000010)) 
    \FSM_sequential_state[3]_i_1 
       (.I0(\MainCtrlIns/state1 ),
        .I1(\MainCtrlIns/state111_out ),
        .I2(out[0]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(out[3]),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hBFBFBFFF00000000)) 
    \FSM_sequential_state[3]_i_2 
       (.I0(ir_out[25]),
        .I1(ir_out[7]),
        .I2(ir_out[4]),
        .I3(ir_out[5]),
        .I4(ir_out[6]),
        .I5(\type_of_dt_ins_reg[1]_i_2_n_0 ),
        .O(\MainCtrlIns/state1 ));
  LUT5 #(
    .INIT(32'h0000FF40)) 
    \FSM_sequential_state[3]_i_3 
       (.I0(ir_out[25]),
        .I1(ir_out[7]),
        .I2(ir_out[4]),
        .I3(ir_out[26]),
        .I4(ir_out[27]),
        .O(\MainCtrlIns/state111_out ));
  MUXF7 \FSM_sequential_state_reg[0]_i_1 
       (.I0(\FSM_sequential_state[0]_i_2_n_0 ),
        .I1(\FSM_sequential_state[0]_i_3_n_0 ),
        .O(D[0]),
        .S(out[0]));
  MUXF7 \FSM_sequential_state_reg[1]_i_1 
       (.I0(\FSM_sequential_state[1]_i_2_n_0 ),
        .I1(\FSM_sequential_state[1]_i_3_n_0 ),
        .O(D[1]),
        .S(out[0]));
  local_memory Memory
       (.CLK(CLK),
        .D({d_reg_temp[31],d_reg_temp[23],d_reg_temp[15:8]}),
        .DI(\pc_reg[0]_0 ),
        .\FSM_sequential_state_reg[0] (\FSM_sequential_state_reg[0] ),
        .\FSM_sequential_state_reg[0]_0 (\FSM_sequential_state_reg[0]_0 ),
        .\FSM_sequential_state_reg[0]_1 (\FSM_sequential_state_reg[0]_4 ),
        .\FSM_sequential_state_reg[0]_2 (\FSM_sequential_state_reg[0]_5 ),
        .\FSM_sequential_state_reg[0]_3 (byte_offset[0]),
        .\FSM_sequential_state_reg[0]_4 (byte_offset[1]),
        .\FSM_sequential_state_reg[0]_5 (\FSM_sequential_state_reg[0]_6 ),
        .\FSM_sequential_state_reg[0]_6 (\FSM_sequential_state_reg[0]_7 ),
        .\FSM_sequential_state_reg[0]_7 ({res[13:2],res_reg_LAST_TWO}),
        .\FSM_sequential_state_reg[0]_8 (\FSM_sequential_state_reg[0]_8 ),
        .\FSM_sequential_state_reg[0]_9 (\FSM_sequential_state_reg[0]_9 ),
        .\FSM_sequential_state_reg[1] (\FSM_sequential_state_reg[1] ),
        .\FSM_sequential_state_reg[1]_0 (ir_out[31:28]),
        .\FSM_sequential_state_reg[1]_1 (\FSM_sequential_state_reg[1]_1 ),
        .\FSM_sequential_state_reg[1]_2 (\FSM_sequential_state_reg[1]_3 ),
        .\FSM_sequential_state_reg[1]_3 (\FSM_sequential_state_reg[1]_4 ),
        .\FSM_sequential_state_reg[1]_4 (\FSM_sequential_state_reg[1]_5 ),
        .\FSM_sequential_state_reg[1]_5 (\FSM_sequential_state_reg[1]_6 ),
        .MW(MW),
        .Q({b_reg,Q}),
        .\c_reg[0] (\c_reg[0] ),
        .flags_master(flags_master),
        .memout(memout),
        .out(out),
        .\pc_reg[0] (Memory_n_2),
        .\pc_reg[0]_0 (Memory_n_3),
        .\pc_reg[0]_1 (Memory_n_4),
        .\pc_reg[13] (pc[13:2]),
        .read_switches_IBUF(read_switches_IBUF),
        .\register_array_reg[0][14] (\register_array_reg[0][14] ),
        .\register_array_reg[0][15] (\register_array_reg[0][15] ),
        .\register_array_reg[0][15]_0 (\register_array_reg[0][15]_0 ),
        .\register_array_reg[0][15]_1 (\register_array_reg[0][15]_1 ),
        .\register_array_reg[0][23] (\register_array_reg[0][23] ));
  Multiplier Multiplier_Inst
       (.D({flags_mult,output_MULT}),
        .\FSM_sequential_state_reg[1] (x_reg),
        .Fset(Fset),
        .Q({b_reg,Q}),
        .flags_sig(flags_sig[1]),
        .\pc_reg[0] (Multiplier_Inst_n_0),
        .\pc_reg[0]_0 (\pc_reg[0]_4 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    N_reg
       (.CLR(AR),
        .D(Multiplier_Inst_n_0),
        .G(Z),
        .GE(1'b1),
        .Q(flags_master[3]));
  LUT5 #(
    .INIT(32'h20480000)) 
    RW_reg_i_1
       (.I0(out[3]),
        .I1(out[2]),
        .I2(out[1]),
        .I3(out[0]),
        .I4(p),
        .O(\register_array_reg[15][0] ));
  LUT6 #(
    .INIT(64'hFFFFFBFFFFFFFFFF)) 
    RW_reg_i_2
       (.I0(out[0]),
        .I1(out[2]),
        .I2(out[3]),
        .I3(out[1]),
        .I4(ir_out[23]),
        .I5(ir_out[24]),
        .O(\register_array_reg[15][0]_0 ));
  LUT3 #(
    .INIT(8'h35)) 
    RW_reg_i_3
       (.I0(Memory_n_4),
        .I1(Memory_n_3),
        .I2(ir_out[31]),
        .O(p));
  Register_File Register_File_Instantiate
       (.AR(AR),
        .CLK(CLK),
        .D(rd1),
        .\FSM_sequential_state_reg[0] ({res,res_reg_LAST_TWO}),
        .\FSM_sequential_state_reg[0]_0 (d_reg),
        .Mult_wad(Mult_wad),
        .Q({ir_out[25],\ir_reg_reg_n_0_[19] ,\ir_reg_reg_n_0_[18] ,\ir_reg_reg_n_0_[17] ,\ir_reg_reg_n_0_[16] ,\ir_reg_reg_n_0_[15] ,\ir_reg_reg_n_0_[14] ,\ir_reg_reg_n_0_[13] ,\ir_reg_reg_n_0_[12] ,ir_out[7:4]}),
        .RW(RW),
        .firstOrLast_IBUF(firstOrLast_IBUF),
        .leds_OBUF(leds_OBUF),
        .memOrReg_IBUF(memOrReg_IBUF),
        .memout(memout),
        .out(out),
        .output_big(rd2),
        .\pc_reg[0] (Register_File_Instantiate_n_1),
        .\pc_reg[31] (pc),
        .rad1(rad1),
        .rad2(rad2),
        .read_switches_IBUF(read_switches_IBUF[3:0]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    Z_reg
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_0 ),
        .G(Z),
        .GE(1'b1),
        .Q(flags_master[2]));
  LUT6 #(
    .INIT(64'h00F2000000FF0000)) 
    Z_reg_i_2
       (.I0(ir_out[24]),
        .I1(ir_out[23]),
        .I2(ir_out[20]),
        .I3(Memory_n_2),
        .I4(Z_reg_i_8_n_0),
        .I5(out[0]),
        .O(Z));
  LUT3 #(
    .INIT(8'h04)) 
    Z_reg_i_8
       (.I0(out[3]),
        .I1(out[2]),
        .I2(out[1]),
        .O(Z_reg_i_8_n_0));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[0] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[0]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[0]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[10] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[10]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[10]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[11] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[11]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[11]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[12] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[12]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[12]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[13] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[13]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[13]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[14] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[14]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[14]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[15] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[15]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[15]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[16] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[16]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[16]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[17] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[17]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[17]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[18] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[18]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[18]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[19] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[19]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[19]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[1] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[1]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[1]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[20] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[20]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[20]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[21] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[21]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[21]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[22] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[22]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[22]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[23] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[23]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[23]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[24] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[24]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[24]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[25] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[25]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[25]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[26] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[26]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[26]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[27] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[27]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[27]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[28] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[28]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[28]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[29] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[29]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[29]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[2] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[2]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[2]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[30] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[30]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[30]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[31] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[31]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[31]));
  LUT5 #(
    .INIT(32'hFF00E4E4)) 
    \a_reg_reg[31]_i_14 
       (.I0(output_big),
        .I1(\ir_reg_reg_n_0_[17] ),
        .I2(\ir_reg_reg_n_0_[13] ),
        .I3(\ir_reg_reg_n_0_[9] ),
        .I4(output_big__0),
        .O(rad1[1]));
  LUT5 #(
    .INIT(32'hFF00E4E4)) 
    \a_reg_reg[31]_i_15 
       (.I0(output_big),
        .I1(\ir_reg_reg_n_0_[16] ),
        .I2(\ir_reg_reg_n_0_[12] ),
        .I3(\ir_reg_reg_n_0_[8] ),
        .I4(output_big__0),
        .O(rad1[0]));
  LUT6 #(
    .INIT(64'hFFFFFFFF00000104)) 
    \a_reg_reg[31]_i_3 
       (.I0(\a_reg_reg[31]_i_8_n_0 ),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(AR),
        .O(\a_reg_reg[31]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFF00E4E4)) 
    \a_reg_reg[31]_i_4 
       (.I0(output_big),
        .I1(\ir_reg_reg_n_0_[19] ),
        .I2(\ir_reg_reg_n_0_[15] ),
        .I3(\ir_reg_reg_n_0_[11] ),
        .I4(output_big__0),
        .O(rad1[3]));
  LUT5 #(
    .INIT(32'h00020020)) 
    \a_reg_reg[31]_i_7 
       (.I0(\a_reg_reg[31]_i_8_n_0 ),
        .I1(out[1]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[0]),
        .O(\pc_reg[31]_7 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFFFE)) 
    \a_reg_reg[31]_i_8 
       (.I0(ir_out[23]),
        .I1(ir_out[24]),
        .I2(ir_out[27]),
        .I3(ir_out[26]),
        .I4(ir_out[21]),
        .I5(Register_File_Instantiate_n_1),
        .O(\a_reg_reg[31]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hFF00E4E4)) 
    \a_reg_reg[31]_i_9 
       (.I0(output_big),
        .I1(\ir_reg_reg_n_0_[18] ),
        .I2(\ir_reg_reg_n_0_[14] ),
        .I3(\ir_reg_reg_n_0_[10] ),
        .I4(output_big__0),
        .O(rad1[2]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[3] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[3]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[3]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[4] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[4]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[4]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[5] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[5]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[5]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[6] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[6]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[6]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[7] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[7]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[7]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[8] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[8]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[8]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \a_reg_reg[9] 
       (.CLR(\a_reg_reg[31]_i_3_n_0 ),
        .D(rd1[9]),
        .G(\FSM_sequential_state_reg[1]_9 ),
        .GE(1'b1),
        .Q(a_reg[9]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[0] 
       (.CLR(AR),
        .D(rd2[0]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(Q[0]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[10] 
       (.CLR(AR),
        .D(rd2[10]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(Q[10]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[11] 
       (.CLR(AR),
        .D(rd2[11]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(Q[11]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[12] 
       (.CLR(AR),
        .D(rd2[12]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(Q[12]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[13] 
       (.CLR(AR),
        .D(rd2[13]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(Q[13]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[14] 
       (.CLR(AR),
        .D(rd2[14]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(Q[14]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[15] 
       (.CLR(AR),
        .D(rd2[15]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(Q[15]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[16] 
       (.CLR(AR),
        .D(rd2[16]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(b_reg[16]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[17] 
       (.CLR(AR),
        .D(rd2[17]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(b_reg[17]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[18] 
       (.CLR(AR),
        .D(rd2[18]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(b_reg[18]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[19] 
       (.CLR(AR),
        .D(rd2[19]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(b_reg[19]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[1] 
       (.CLR(AR),
        .D(rd2[1]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(Q[1]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[20] 
       (.CLR(AR),
        .D(rd2[20]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(b_reg[20]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[21] 
       (.CLR(AR),
        .D(rd2[21]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(b_reg[21]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[22] 
       (.CLR(AR),
        .D(rd2[22]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(b_reg[22]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[23] 
       (.CLR(AR),
        .D(rd2[23]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(b_reg[23]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[24] 
       (.CLR(AR),
        .D(rd2[24]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(b_reg[24]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[25] 
       (.CLR(AR),
        .D(rd2[25]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(b_reg[25]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[26] 
       (.CLR(AR),
        .D(rd2[26]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(b_reg[26]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[27] 
       (.CLR(AR),
        .D(rd2[27]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(b_reg[27]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[28] 
       (.CLR(AR),
        .D(rd2[28]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(b_reg[28]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[29] 
       (.CLR(AR),
        .D(rd2[29]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(b_reg[29]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[2] 
       (.CLR(AR),
        .D(rd2[2]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(Q[2]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[30] 
       (.CLR(AR),
        .D(rd2[30]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(b_reg[30]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[31] 
       (.CLR(AR),
        .D(rd2[31]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(b_reg[31]));
  LUT6 #(
    .INIT(64'hFFFFFFEF00000020)) 
    \b_reg_reg[31]_i_12 
       (.I0(\ir_reg_reg_n_0_[13] ),
        .I1(out[1]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[0]),
        .I5(\ir_reg_reg_n_0_[1] ),
        .O(rad2[1]));
  LUT6 #(
    .INIT(64'hFFFFFFEF00000020)) 
    \b_reg_reg[31]_i_13 
       (.I0(\ir_reg_reg_n_0_[12] ),
        .I1(out[1]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[0]),
        .I5(\ir_reg_reg_n_0_[0] ),
        .O(rad2[0]));
  LUT6 #(
    .INIT(64'hFFFFFFEF00000020)) 
    \b_reg_reg[31]_i_3 
       (.I0(\ir_reg_reg_n_0_[15] ),
        .I1(out[1]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[0]),
        .I5(\ir_reg_reg_n_0_[3] ),
        .O(rad2[3]));
  LUT6 #(
    .INIT(64'hFFFFFFEF00000020)) 
    \b_reg_reg[31]_i_7 
       (.I0(\ir_reg_reg_n_0_[14] ),
        .I1(out[1]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[0]),
        .I5(\ir_reg_reg_n_0_[2] ),
        .O(rad2[2]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[3] 
       (.CLR(AR),
        .D(rd2[3]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(Q[3]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[4] 
       (.CLR(AR),
        .D(rd2[4]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(Q[4]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[5] 
       (.CLR(AR),
        .D(rd2[5]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(Q[5]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[6] 
       (.CLR(AR),
        .D(rd2[6]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(Q[6]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[7] 
       (.CLR(AR),
        .D(rd2[7]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(Q[7]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[8] 
       (.CLR(AR),
        .D(rd2[8]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(Q[8]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \b_reg_reg[9] 
       (.CLR(AR),
        .D(rd2[9]),
        .G(\FSM_sequential_state_reg[0]_12 ),
        .GE(1'b1),
        .Q(Q[9]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[0] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [0]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[0]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[10] 
       (.CLR(AR),
        .D(d_reg_temp[10]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[10]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[11] 
       (.CLR(AR),
        .D(d_reg_temp[11]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[11]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[12] 
       (.CLR(AR),
        .D(d_reg_temp[12]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[12]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[13] 
       (.CLR(AR),
        .D(d_reg_temp[13]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[13]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[14] 
       (.CLR(AR),
        .D(d_reg_temp[14]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[14]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[15] 
       (.CLR(AR),
        .D(d_reg_temp[15]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[15]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[16] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [8]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[16]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[17] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [9]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[17]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[18] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [10]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[18]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[19] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [11]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[19]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[1] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [1]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[1]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[20] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [12]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[20]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[21] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [13]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[21]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[22] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [14]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[22]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[23] 
       (.CLR(AR),
        .D(d_reg_temp[23]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[23]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[24] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [15]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[24]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[25] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [16]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[25]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[26] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [17]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[26]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[27] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [18]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[27]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[28] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [19]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[28]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[29] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [20]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[29]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[2] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [2]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[2]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[30] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [21]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[30]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[31] 
       (.CLR(AR),
        .D(d_reg_temp[31]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[31]));
  LUT5 #(
    .INIT(32'h00200000)) 
    \d_reg_reg[31]_i_4 
       (.I0(out[0]),
        .I1(out[2]),
        .I2(out[3]),
        .I3(out[1]),
        .I4(res_reg_LAST_TWO[0]),
        .O(byte_offset[0]));
  LUT5 #(
    .INIT(32'h00200000)) 
    \d_reg_reg[31]_i_5 
       (.I0(out[0]),
        .I1(out[2]),
        .I2(out[3]),
        .I3(out[1]),
        .I4(res_reg_LAST_TWO[1]),
        .O(byte_offset[1]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[3] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [3]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[3]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[4] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [4]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[4]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[5] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [5]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[5]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[6] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [6]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[6]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[7] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[1]_2 [7]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[7]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[8] 
       (.CLR(AR),
        .D(d_reg_temp[8]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[8]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \d_reg_reg[9] 
       (.CLR(AR),
        .D(d_reg_temp[9]),
        .G(\FSM_sequential_state_reg[1]_8 ),
        .GE(1'b1),
        .Q(d_reg[9]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[0] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [0]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(\ir_reg_reg_n_0_[0] ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[10] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [10]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(\ir_reg_reg_n_0_[10] ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[11] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [11]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(\ir_reg_reg_n_0_[11] ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[12] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [12]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(\ir_reg_reg_n_0_[12] ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[13] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [13]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(\ir_reg_reg_n_0_[13] ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[14] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [14]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(\ir_reg_reg_n_0_[14] ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[15] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [15]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(\ir_reg_reg_n_0_[15] ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[16] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [16]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(\ir_reg_reg_n_0_[16] ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[17] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [17]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(\ir_reg_reg_n_0_[17] ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[18] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [18]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(\ir_reg_reg_n_0_[18] ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[19] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [19]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(\ir_reg_reg_n_0_[19] ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[1] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [1]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(\ir_reg_reg_n_0_[1] ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[20] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [20]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(ir_out[20]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[21] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [21]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(ir_out[21]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[22] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [22]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(ir_out[22]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[23] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [23]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(ir_out[23]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[24] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [24]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(ir_out[24]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[25] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [25]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(ir_out[25]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[26] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [26]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(ir_out[26]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[27] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [27]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(ir_out[27]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[28] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [28]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(ir_out[28]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[29] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [29]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(ir_out[29]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[2] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [2]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(\ir_reg_reg_n_0_[2] ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[30] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [30]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(ir_out[30]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[31] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [31]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(ir_out[31]));
  LUT4 #(
    .INIT(16'h0001)) 
    \ir_reg_reg[31]_i_2 
       (.I0(out[1]),
        .I1(out[2]),
        .I2(out[3]),
        .I3(out[0]),
        .O(\pc_reg[0]_1 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[3] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [3]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(\ir_reg_reg_n_0_[3] ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[4] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [4]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(ir_out[4]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[5] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [5]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(ir_out[5]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[6] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [6]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(ir_out[6]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[7] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [7]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(ir_out[7]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[8] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [8]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(\ir_reg_reg_n_0_[8] ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \ir_reg_reg[9] 
       (.CLR(1'b0),
        .D(\register_array_reg[0][15]_0 [9]),
        .G(\FSM_sequential_state_reg[1]_7 ),
        .GE(1'b1),
        .Q(\ir_reg_reg_n_0_[9] ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[0] 
       (.CLR(1'b0),
        .D(output_MULT[0]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(mult_reg[0]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[10] 
       (.CLR(1'b0),
        .D(output_MULT[10]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [7]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[11] 
       (.CLR(1'b0),
        .D(output_MULT[11]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [8]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[12] 
       (.CLR(1'b0),
        .D(output_MULT[12]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [9]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[13] 
       (.CLR(1'b0),
        .D(output_MULT[13]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [10]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[14] 
       (.CLR(1'b0),
        .D(output_MULT[14]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [11]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[15] 
       (.CLR(1'b0),
        .D(output_MULT[15]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [12]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[16] 
       (.CLR(1'b0),
        .D(output_MULT[16]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [13]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[17] 
       (.CLR(1'b0),
        .D(output_MULT[17]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [14]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[18] 
       (.CLR(1'b0),
        .D(output_MULT[18]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [15]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[19] 
       (.CLR(1'b0),
        .D(output_MULT[19]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [16]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[1] 
       (.CLR(1'b0),
        .D(output_MULT[1]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(mult_reg[1]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[20] 
       (.CLR(1'b0),
        .D(output_MULT[20]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [17]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[21] 
       (.CLR(1'b0),
        .D(output_MULT[21]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [18]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[22] 
       (.CLR(1'b0),
        .D(output_MULT[22]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [19]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[23] 
       (.CLR(1'b0),
        .D(output_MULT[23]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [20]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[24] 
       (.CLR(1'b0),
        .D(output_MULT[24]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [21]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[25] 
       (.CLR(1'b0),
        .D(output_MULT[25]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [22]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[26] 
       (.CLR(1'b0),
        .D(output_MULT[26]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [23]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[27] 
       (.CLR(1'b0),
        .D(output_MULT[27]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [24]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[28] 
       (.CLR(1'b0),
        .D(output_MULT[28]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [25]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[29] 
       (.CLR(1'b0),
        .D(output_MULT[29]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [26]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[2] 
       (.CLR(1'b0),
        .D(output_MULT[2]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(mult_reg[2]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[30] 
       (.CLR(1'b0),
        .D(output_MULT[30]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [27]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[31] 
       (.CLR(1'b0),
        .D(flags_mult),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [28]));
  LUT4 #(
    .INIT(16'h0004)) 
    \mult_reg_reg[31]_i_7 
       (.I0(out[1]),
        .I1(out[2]),
        .I2(out[3]),
        .I3(out[0]),
        .O(output_big));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[3] 
       (.CLR(1'b0),
        .D(output_MULT[3]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [0]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[4] 
       (.CLR(1'b0),
        .D(output_MULT[4]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [1]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[5] 
       (.CLR(1'b0),
        .D(output_MULT[5]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [2]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[6] 
       (.CLR(1'b0),
        .D(output_MULT[6]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [3]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[7] 
       (.CLR(1'b0),
        .D(output_MULT[7]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [4]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[8] 
       (.CLR(1'b0),
        .D(output_MULT[8]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [5]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \mult_reg_reg[9] 
       (.CLR(1'b0),
        .D(output_MULT[9]),
        .G(\FSM_sequential_state_reg[1]_10 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_1 [6]));
  LUT6 #(
    .INIT(64'h0004000000080000)) 
    \op_code_reg[0]_i_1 
       (.I0(\op_code_reg[0]_i_2_n_0 ),
        .I1(out[2]),
        .I2(out[1]),
        .I3(out[3]),
        .I4(out[0]),
        .I5(ir_out[21]),
        .O(\pc_reg[31]_0 [0]));
  LUT5 #(
    .INIT(32'h00001000)) 
    \op_code_reg[0]_i_2 
       (.I0(ir_out[5]),
        .I1(ir_out[6]),
        .I2(ir_out[4]),
        .I3(ir_out[7]),
        .I4(ir_out[25]),
        .O(\op_code_reg[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h00440000C044F000)) 
    \op_code_reg[1]_i_1 
       (.I0(ir_out[23]),
        .I1(\FSM_sequential_state_reg[0]_1 ),
        .I2(ir_out[22]),
        .I3(\FSM_sequential_state_reg[0]_2 ),
        .I4(\FSM_sequential_state_reg[2] ),
        .I5(\op_code_reg[2]_i_2_n_0 ),
        .O(\pc_reg[31]_0 [1]));
  LUT6 #(
    .INIT(64'hFEFEEEEEFEECEEEF)) 
    \op_code_reg[2]_i_1 
       (.I0(\op_code_reg[2]_i_2_n_0 ),
        .I1(ir_out[23]),
        .I2(out[2]),
        .I3(out[1]),
        .I4(out[3]),
        .I5(out[0]),
        .O(\pc_reg[31]_0 [2]));
  LUT6 #(
    .INIT(64'hFFFFFF4FFFFFFFFF)) 
    \op_code_reg[2]_i_2 
       (.I0(ir_out[25]),
        .I1(\op_code_reg[3]_i_4_n_0 ),
        .I2(out[2]),
        .I3(out[1]),
        .I4(out[3]),
        .I5(out[0]),
        .O(\op_code_reg[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0A0A030A)) 
    \op_code_reg[3]_i_1 
       (.I0(ir_out[24]),
        .I1(ir_out[21]),
        .I2(\FSM_sequential_state_reg[0]_3 ),
        .I3(\op_code_reg[3]_i_4_n_0 ),
        .I4(ir_out[25]),
        .O(\pc_reg[31]_0 [3]));
  LUT4 #(
    .INIT(16'h0008)) 
    \op_code_reg[3]_i_4 
       (.I0(ir_out[7]),
        .I1(ir_out[4]),
        .I2(ir_out[6]),
        .I3(ir_out[5]),
        .O(\op_code_reg[3]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[0]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [0]),
        .I1(PW),
        .I2(res_reg_LAST_TWO[0]),
        .O(p_1_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[10]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [10]),
        .I1(PW),
        .I2(res[10]),
        .O(p_1_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[11]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [11]),
        .I1(PW),
        .I2(res[11]),
        .O(p_1_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[12]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [12]),
        .I1(PW),
        .I2(res[12]),
        .O(p_1_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[13]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [13]),
        .I1(PW),
        .I2(res[13]),
        .O(p_1_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[14]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [14]),
        .I1(PW),
        .I2(res[14]),
        .O(p_1_in[14]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[15]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [15]),
        .I1(PW),
        .I2(res[15]),
        .O(p_1_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[16]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [16]),
        .I1(PW),
        .I2(res[16]),
        .O(p_1_in[16]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[17]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [17]),
        .I1(PW),
        .I2(res[17]),
        .O(p_1_in[17]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[18]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [18]),
        .I1(PW),
        .I2(res[18]),
        .O(p_1_in[18]));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[19]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [19]),
        .I1(PW),
        .I2(res[19]),
        .O(p_1_in[19]));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[1]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [1]),
        .I1(PW),
        .I2(res_reg_LAST_TWO[1]),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[20]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [20]),
        .I1(PW),
        .I2(res[20]),
        .O(p_1_in[20]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[21]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [21]),
        .I1(PW),
        .I2(res[21]),
        .O(p_1_in[21]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[22]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [22]),
        .I1(PW),
        .I2(res[22]),
        .O(p_1_in[22]));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[23]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [23]),
        .I1(PW),
        .I2(res[23]),
        .O(p_1_in[23]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[24]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [24]),
        .I1(PW),
        .I2(res[24]),
        .O(p_1_in[24]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[25]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [25]),
        .I1(PW),
        .I2(res[25]),
        .O(p_1_in[25]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[26]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [26]),
        .I1(PW),
        .I2(res[26]),
        .O(p_1_in[26]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[27]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [27]),
        .I1(PW),
        .I2(res[27]),
        .O(p_1_in[27]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[28]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [28]),
        .I1(PW),
        .I2(res[28]),
        .O(p_1_in[28]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[29]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [29]),
        .I1(PW),
        .I2(res[29]),
        .O(p_1_in[29]));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[2]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [2]),
        .I1(PW),
        .I2(res[2]),
        .O(p_1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[30]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [30]),
        .I1(PW),
        .I2(res[30]),
        .O(p_1_in[30]));
  LUT4 #(
    .INIT(16'hFEAE)) 
    \pc[31]_i_1 
       (.I0(PW),
        .I1(\pc[31]_i_4_n_0 ),
        .I2(Register_File_Instantiate_n_1),
        .I3(\pc[31]_i_6_n_0 ),
        .O(\pc[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[31]_i_2 
       (.I0(flags_sig[1]),
        .I1(PW),
        .I2(res[31]),
        .O(p_1_in[31]));
  LUT5 #(
    .INIT(32'h20000003)) 
    \pc[31]_i_3 
       (.I0(p),
        .I1(out[1]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[0]),
        .O(PW));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \pc[31]_i_4 
       (.I0(\ir_reg_reg_n_0_[16] ),
        .I1(\ir_reg_reg_n_0_[17] ),
        .I2(RW),
        .I3(Mult_wad),
        .I4(\ir_reg_reg_n_0_[19] ),
        .I5(\ir_reg_reg_n_0_[18] ),
        .O(\pc[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0080000000000000)) 
    \pc[31]_i_6 
       (.I0(\ir_reg_reg_n_0_[12] ),
        .I1(\ir_reg_reg_n_0_[13] ),
        .I2(RW),
        .I3(Mult_wad),
        .I4(\ir_reg_reg_n_0_[15] ),
        .I5(\ir_reg_reg_n_0_[14] ),
        .O(\pc[31]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[3]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [3]),
        .I1(PW),
        .I2(res[3]),
        .O(p_1_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[4]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [4]),
        .I1(PW),
        .I2(res[4]),
        .O(p_1_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[5]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [5]),
        .I1(PW),
        .I2(res[5]),
        .O(p_1_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[6]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [6]),
        .I1(PW),
        .I2(res[6]),
        .O(p_1_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[7]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [7]),
        .I1(PW),
        .I2(res[7]),
        .O(p_1_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[8]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [8]),
        .I1(PW),
        .I2(res[8]),
        .O(p_1_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \pc[9]_i_1 
       (.I0(\FSM_sequential_state_reg[2]_1 [9]),
        .I1(PW),
        .I2(res[9]),
        .O(p_1_in[9]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[0] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[0]),
        .Q(pc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[10] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[10]),
        .Q(pc[10]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[11] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[11]),
        .Q(pc[11]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[12] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[12]),
        .Q(pc[12]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[13] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[13]),
        .Q(pc[13]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[14] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[14]),
        .Q(pc[14]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[15] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[15]),
        .Q(pc[15]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[16] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[16]),
        .Q(pc[16]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[17] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[17]),
        .Q(pc[17]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[18] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[18]),
        .Q(pc[18]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[19] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[19]),
        .Q(pc[19]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[1] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[1]),
        .Q(pc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[20] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[20]),
        .Q(pc[20]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[21] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[21]),
        .Q(pc[21]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[22] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[22]),
        .Q(pc[22]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[23] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[23]),
        .Q(pc[23]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[24] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[24]),
        .Q(pc[24]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[25] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[25]),
        .Q(pc[25]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[26] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[26]),
        .Q(pc[26]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[27] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[27]),
        .Q(pc[27]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[28] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[28]),
        .Q(pc[28]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[29] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[29]),
        .Q(pc[29]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[2] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[2]),
        .Q(pc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[30] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[30]),
        .Q(pc[30]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[31] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[31]),
        .Q(pc[31]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[3] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[3]),
        .Q(pc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[4] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[4]),
        .Q(pc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[5] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[5]),
        .Q(pc[5]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[6] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[6]),
        .Q(pc[6]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[7] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[7]),
        .Q(pc[7]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[8] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[8]),
        .Q(pc[8]));
  FDCE #(
    .INIT(1'b0)) 
    \pc_reg[9] 
       (.C(CLK),
        .CE(\pc[31]_i_1_n_0 ),
        .CLR(AR),
        .D(p_1_in[9]),
        .Q(pc[9]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[0] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [0]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res_reg_LAST_TWO[0]));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[0]_i_2 
       (.I0(\res_reg[0]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [0]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\pc_reg[31]_3 [0]),
        .O(\pc_reg[0]_2 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[0]_i_4 
       (.I0(O),
        .I1(\pc_reg[31]_4 [0]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[0]),
        .I5(\pc_reg[2]_0 [0]),
        .O(\res_reg[0]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[0]_i_5 
       (.I0(\pc_reg[31]_3 [0]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\pc_reg[31]_4 [0]),
        .O(\pc_reg[0]_3 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[0]_i_6 
       (.I0(a_reg[0]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[0]),
        .O(op1[0]));
  LUT6 #(
    .INIT(64'h00CC00CC00CC00A0)) 
    \res_reg[0]_i_7 
       (.I0(mult_reg[0]),
        .I1(shift_reg[0]),
        .I2(\prev_state_reg[3] ),
        .I3(\pc_reg[0]_1 ),
        .I4(Rsrc),
        .I5(\prev_state_reg[3]_0 ),
        .O(\pc_reg[2]_0 [0]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[10] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [10]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[10]));
  LUT6 #(
    .INIT(64'h00CC00CC00CC00A0)) 
    \res_reg[10]_i_10 
       (.I0(\pc_reg[31]_1 [7]),
        .I1(\pc_reg[31]_2 [7]),
        .I2(\prev_state_reg[3] ),
        .I3(\pc_reg[0]_1 ),
        .I4(Rsrc),
        .I5(\prev_state_reg[3]_0 ),
        .O(\res_reg[10]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFAFACCFC0A0ACC0C)) 
    \res_reg[10]_i_3 
       (.I0(\res_reg[10]_i_8_n_0 ),
        .I1(\res_reg[10]_i_9_n_0 ),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\FSM_sequential_state_reg[2]_0 [1]),
        .I5(\pc_reg[31]_5 [4]),
        .O(\pc_reg[10]_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[10]_i_5 
       (.I0(\pc_reg[31]_3 [5]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [10]),
        .O(\pc_reg[10]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[10]_i_6 
       (.I0(a_reg[10]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[10]),
        .O(op1[10]));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[10]_i_8 
       (.I0(\ALU_Instantiate/data3 [10]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [10]),
        .O(\res_reg[10]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h66666888)) 
    \res_reg[10]_i_9 
       (.I0(\FSM_sequential_state_reg[2]_0 [0]),
        .I1(op1[10]),
        .I2(\prev_state_reg[2]_0 ),
        .I3(\pc_reg[25]_0 [7]),
        .I4(\res_reg[10]_i_10_n_0 ),
        .O(\res_reg[10]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[11] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [11]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[11]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \res_reg[11]_i_10 
       (.CI(\res_reg[7]_i_5_n_0 ),
        .CO({\res_reg[11]_i_10_n_0 ,\NLW_res_reg[11]_i_10_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(\ALU_Instantiate/p_0_out [10:7]),
        .O(\pc_reg[31]_5 [5:2]),
        .S({\res_reg[11]_i_19_n_0 ,\res_reg[11]_i_20_n_0 ,\res_reg[11]_i_21_n_0 ,\res_reg[11]_i_22_n_0 }));
  CARRY4 \res_reg[11]_i_11 
       (.CI(\res_reg[7]_i_6_n_0 ),
        .CO({\res_reg[11]_i_11_n_0 ,\NLW_res_reg[11]_i_11_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op1[11:8]),
        .O(\pc_reg[31]_3 [6:3]),
        .S({\res_reg[11]_i_23_n_0 ,\res_reg[11]_i_24_n_0 ,\res_reg[11]_i_25_n_0 ,\res_reg[11]_i_26_n_0 }));
  CARRY4 \res_reg[11]_i_12 
       (.CI(\res_reg[7]_i_11_n_0 ),
        .CO({\res_reg[11]_i_12_n_0 ,\NLW_res_reg[11]_i_12_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op1[11:8]),
        .O(\ALU_Instantiate/data2 [11:8]),
        .S({\res_reg[11]_i_27_n_0 ,\res_reg[11]_i_28_n_0 ,\res_reg[11]_i_29_n_0 ,\res_reg[11]_i_30_n_0 }));
  CARRY4 \res_reg[11]_i_13 
       (.CI(\res_reg[7]_i_10_n_0 ),
        .CO({\res_reg[11]_i_13_n_0 ,\NLW_res_reg[11]_i_13_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op2[8:5]),
        .O(\ALU_Instantiate/data3 [11:8]),
        .S({\res_reg[11]_i_31_n_0 ,\res_reg[11]_i_32_n_0 ,\res_reg[11]_i_33_n_0 ,\res_reg[11]_i_34_n_0 }));
  LUT6 #(
    .INIT(64'h00CC00CC00CC00A0)) 
    \res_reg[11]_i_14 
       (.I0(\pc_reg[31]_1 [8]),
        .I1(\pc_reg[31]_2 [8]),
        .I2(\prev_state_reg[3] ),
        .I3(\pc_reg[0]_1 ),
        .I4(Rsrc),
        .I5(\prev_state_reg[3]_0 ),
        .O(\res_reg[11]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[11]_i_15 
       (.I0(\ALU_Instantiate/data3 [10]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [10]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [5]),
        .O(\ALU_Instantiate/p_0_out [10]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[11]_i_16 
       (.I0(\ALU_Instantiate/data3 [9]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [9]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [4]),
        .O(\ALU_Instantiate/p_0_out [9]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[11]_i_17 
       (.I0(\ALU_Instantiate/data3 [8]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [8]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [3]),
        .O(\ALU_Instantiate/p_0_out [8]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[11]_i_18 
       (.I0(\ALU_Instantiate/data3 [7]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [7]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\ALU_Instantiate/data4 [7]),
        .O(\ALU_Instantiate/p_0_out [7]));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[11]_i_19 
       (.I0(\pc_reg[31]_3 [5]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [10]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [10]),
        .I5(\ALU_Instantiate/p_0_out [11]),
        .O(\res_reg[11]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[11]_i_20 
       (.I0(\pc_reg[31]_3 [4]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [9]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [9]),
        .I5(\ALU_Instantiate/p_0_out [10]),
        .O(\res_reg[11]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[11]_i_21 
       (.I0(\pc_reg[31]_3 [3]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [8]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [8]),
        .I5(\ALU_Instantiate/p_0_out [9]),
        .O(\res_reg[11]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[11]_i_22 
       (.I0(\ALU_Instantiate/data4 [7]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [7]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [7]),
        .I5(\ALU_Instantiate/p_0_out [8]),
        .O(\res_reg[11]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[11]_i_23 
       (.I0(op1[11]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [8]),
        .I4(\pc_reg[31]_1 [8]),
        .I5(\pc_reg[31]_2 [8]),
        .O(\res_reg[11]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[11]_i_24 
       (.I0(op1[10]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [7]),
        .I4(\pc_reg[31]_1 [7]),
        .I5(\pc_reg[31]_2 [7]),
        .O(\res_reg[11]_i_24_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[11]_i_25 
       (.I0(op1[9]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [6]),
        .I4(\pc_reg[31]_1 [6]),
        .I5(\pc_reg[31]_2 [6]),
        .O(\res_reg[11]_i_25_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[11]_i_26 
       (.I0(op1[8]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [5]),
        .I4(\pc_reg[31]_1 [5]),
        .I5(\pc_reg[31]_2 [5]),
        .O(\res_reg[11]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[11]_i_27 
       (.I0(op2[8]),
        .I1(a_reg[11]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[11]),
        .O(\res_reg[11]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[11]_i_28 
       (.I0(op2[7]),
        .I1(a_reg[10]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[10]),
        .O(\res_reg[11]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[11]_i_29 
       (.I0(op2[6]),
        .I1(a_reg[9]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[9]),
        .O(\res_reg[11]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hFAFACCFC0A0ACC0C)) 
    \res_reg[11]_i_3 
       (.I0(\res_reg[11]_i_8_n_0 ),
        .I1(\res_reg[11]_i_9_n_0 ),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\FSM_sequential_state_reg[2]_0 [1]),
        .I5(\pc_reg[31]_5 [5]),
        .O(\pc_reg[11]_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[11]_i_30 
       (.I0(op2[5]),
        .I1(a_reg[8]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[8]),
        .O(\res_reg[11]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[11]_i_31 
       (.I0(op2[8]),
        .I1(a_reg[11]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[11]),
        .O(\res_reg[11]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[11]_i_32 
       (.I0(op2[7]),
        .I1(a_reg[10]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[10]),
        .O(\res_reg[11]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[11]_i_33 
       (.I0(op2[6]),
        .I1(a_reg[9]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[9]),
        .O(\res_reg[11]_i_33_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[11]_i_34 
       (.I0(op2[5]),
        .I1(a_reg[8]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[8]),
        .O(\res_reg[11]_i_34_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[11]_i_5 
       (.I0(\pc_reg[31]_3 [6]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [11]),
        .O(\pc_reg[11]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[11]_i_6 
       (.I0(a_reg[11]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[11]),
        .O(op1[11]));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[11]_i_8 
       (.I0(\ALU_Instantiate/data3 [11]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [11]),
        .O(\res_reg[11]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h66666888)) 
    \res_reg[11]_i_9 
       (.I0(\FSM_sequential_state_reg[2]_0 [0]),
        .I1(op1[11]),
        .I2(\prev_state_reg[2]_0 ),
        .I3(\pc_reg[25]_0 [8]),
        .I4(\res_reg[11]_i_14_n_0 ),
        .O(\res_reg[11]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[12] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [12]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[12]));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[12]_i_2 
       (.I0(\res_reg[12]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [12]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\ALU_Instantiate/data4 [12]),
        .O(\pc_reg[12]_0 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[12]_i_4 
       (.I0(\ALU_Instantiate/data3 [12]),
        .I1(\ALU_Instantiate/data2 [12]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[12]),
        .I5(op2[9]),
        .O(\res_reg[12]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[12]_i_5 
       (.I0(\ALU_Instantiate/data4 [12]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [12]),
        .O(\pc_reg[12]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[12]_i_6 
       (.I0(a_reg[12]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[12]),
        .O(op1[12]));
  CARRY4 \res_reg[12]_i_8 
       (.CI(\res_reg[8]_i_10_n_0 ),
        .CO({\res_reg[12]_i_8_n_0 ,\NLW_res_reg[12]_i_8_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\pc_reg[25]_0 [9:6]),
        .S({\ir_reg_reg_n_0_[10] ,\ir_reg_reg_n_0_[9] ,\ir_reg_reg_n_0_[8] ,ir_out[7]}));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[13] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [13]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[13]));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[13]_i_2 
       (.I0(\res_reg[13]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [13]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\ALU_Instantiate/data4 [13]),
        .O(\pc_reg[13]_0 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[13]_i_4 
       (.I0(\ALU_Instantiate/data3 [13]),
        .I1(\ALU_Instantiate/data2 [13]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[13]),
        .I5(op2[10]),
        .O(\res_reg[13]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[13]_i_5 
       (.I0(\ALU_Instantiate/data4 [13]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [13]),
        .O(\pc_reg[13]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[13]_i_6 
       (.I0(a_reg[13]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[13]),
        .O(op1[13]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[14] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [14]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[14]));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[14]_i_2 
       (.I0(\res_reg[14]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [14]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\ALU_Instantiate/data4 [14]),
        .O(\pc_reg[14]_0 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[14]_i_4 
       (.I0(\ALU_Instantiate/data3 [14]),
        .I1(\ALU_Instantiate/data2 [14]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[14]),
        .I5(op2[11]),
        .O(\res_reg[14]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[14]_i_5 
       (.I0(\ALU_Instantiate/data4 [14]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [14]),
        .O(\pc_reg[14]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[14]_i_6 
       (.I0(a_reg[14]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[14]),
        .O(op1[14]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[15] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [15]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[15]));
  CARRY4 \res_reg[15]_i_10 
       (.CI(\res_reg[11]_i_13_n_0 ),
        .CO({\res_reg[15]_i_10_n_0 ,\NLW_res_reg[15]_i_10_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op2[12:9]),
        .O(\ALU_Instantiate/data3 [15:12]),
        .S({\res_reg[15]_i_24_n_0 ,\res_reg[15]_i_25_n_0 ,\res_reg[15]_i_26_n_0 ,\res_reg[15]_i_27_n_0 }));
  CARRY4 \res_reg[15]_i_11 
       (.CI(\res_reg[11]_i_12_n_0 ),
        .CO({\res_reg[15]_i_11_n_0 ,\NLW_res_reg[15]_i_11_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op1[15:12]),
        .O(\ALU_Instantiate/data2 [15:12]),
        .S({\res_reg[15]_i_28_n_0 ,\res_reg[15]_i_29_n_0 ,\res_reg[15]_i_30_n_0 ,\res_reg[15]_i_31_n_0 }));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[15]_i_12 
       (.I0(\ALU_Instantiate/data3 [14]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [14]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\ALU_Instantiate/data4 [14]),
        .O(\ALU_Instantiate/p_0_out [14]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[15]_i_13 
       (.I0(\ALU_Instantiate/data3 [13]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [13]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\ALU_Instantiate/data4 [13]),
        .O(\ALU_Instantiate/p_0_out [13]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[15]_i_14 
       (.I0(\ALU_Instantiate/data3 [12]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [12]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\ALU_Instantiate/data4 [12]),
        .O(\ALU_Instantiate/p_0_out [12]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[15]_i_15 
       (.I0(\ALU_Instantiate/data3 [11]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [11]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [6]),
        .O(\ALU_Instantiate/p_0_out [11]));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[15]_i_16 
       (.I0(\ALU_Instantiate/data4 [14]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [14]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [14]),
        .I5(\ALU_Instantiate/p_0_out [15]),
        .O(\res_reg[15]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[15]_i_17 
       (.I0(\ALU_Instantiate/data4 [13]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [13]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [13]),
        .I5(\ALU_Instantiate/p_0_out [14]),
        .O(\res_reg[15]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[15]_i_18 
       (.I0(\ALU_Instantiate/data4 [12]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [12]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [12]),
        .I5(\ALU_Instantiate/p_0_out [13]),
        .O(\res_reg[15]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[15]_i_19 
       (.I0(\pc_reg[31]_3 [6]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [11]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [11]),
        .I5(\ALU_Instantiate/p_0_out [12]),
        .O(\res_reg[15]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[15]_i_2 
       (.I0(\res_reg[15]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [15]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\ALU_Instantiate/data4 [15]),
        .O(\pc_reg[15]_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[15]_i_20 
       (.I0(op1[15]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [12]),
        .I4(\pc_reg[31]_1 [12]),
        .I5(\pc_reg[31]_2 [12]),
        .O(\res_reg[15]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[15]_i_21 
       (.I0(op1[14]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [11]),
        .I4(\pc_reg[31]_1 [11]),
        .I5(\pc_reg[31]_2 [11]),
        .O(\res_reg[15]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[15]_i_22 
       (.I0(op1[13]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [10]),
        .I4(\pc_reg[31]_1 [10]),
        .I5(\pc_reg[31]_2 [10]),
        .O(\res_reg[15]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[15]_i_23 
       (.I0(op1[12]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [9]),
        .I4(\pc_reg[31]_1 [9]),
        .I5(\pc_reg[31]_2 [9]),
        .O(\res_reg[15]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[15]_i_24 
       (.I0(op2[12]),
        .I1(a_reg[15]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[15]),
        .O(\res_reg[15]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[15]_i_25 
       (.I0(op2[11]),
        .I1(a_reg[14]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[14]),
        .O(\res_reg[15]_i_25_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[15]_i_26 
       (.I0(op2[10]),
        .I1(a_reg[13]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[13]),
        .O(\res_reg[15]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[15]_i_27 
       (.I0(op2[9]),
        .I1(a_reg[12]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[12]),
        .O(\res_reg[15]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[15]_i_28 
       (.I0(op2[12]),
        .I1(a_reg[15]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[15]),
        .O(\res_reg[15]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[15]_i_29 
       (.I0(op2[11]),
        .I1(a_reg[14]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[14]),
        .O(\res_reg[15]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[15]_i_30 
       (.I0(op2[10]),
        .I1(a_reg[13]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[13]),
        .O(\res_reg[15]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[15]_i_31 
       (.I0(op2[9]),
        .I1(a_reg[12]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[12]),
        .O(\res_reg[15]_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[15]_i_4 
       (.I0(\ALU_Instantiate/data3 [15]),
        .I1(\ALU_Instantiate/data2 [15]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[15]),
        .I5(op2[12]),
        .O(\res_reg[15]_i_4_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \res_reg[15]_i_5 
       (.CI(\res_reg[11]_i_10_n_0 ),
        .CO({\res_reg[15]_i_5_n_0 ,\NLW_res_reg[15]_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(\ALU_Instantiate/p_0_out [14:11]),
        .O(\ALU_Instantiate/data5 [15:12]),
        .S({\res_reg[15]_i_16_n_0 ,\res_reg[15]_i_17_n_0 ,\res_reg[15]_i_18_n_0 ,\res_reg[15]_i_19_n_0 }));
  CARRY4 \res_reg[15]_i_6 
       (.CI(\res_reg[11]_i_11_n_0 ),
        .CO({\res_reg[15]_i_6_n_0 ,\NLW_res_reg[15]_i_6_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op1[15:12]),
        .O(\ALU_Instantiate/data4 [15:12]),
        .S({\res_reg[15]_i_20_n_0 ,\res_reg[15]_i_21_n_0 ,\res_reg[15]_i_22_n_0 ,\res_reg[15]_i_23_n_0 }));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[15]_i_7 
       (.I0(\ALU_Instantiate/data4 [15]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [15]),
        .O(\pc_reg[15]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[15]_i_8 
       (.I0(a_reg[15]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[15]),
        .O(op1[15]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[16] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [16]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[16]));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[16]_i_2 
       (.I0(\res_reg[16]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [16]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\ALU_Instantiate/data4 [16]),
        .O(\pc_reg[16]_0 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[16]_i_4 
       (.I0(\ALU_Instantiate/data3 [16]),
        .I1(\ALU_Instantiate/data2 [16]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[16]),
        .I5(op2[13]),
        .O(\res_reg[16]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[16]_i_5 
       (.I0(\ALU_Instantiate/data4 [16]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [16]),
        .O(\pc_reg[16]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[16]_i_6 
       (.I0(a_reg[16]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[16]),
        .O(op1[16]));
  CARRY4 \res_reg[16]_i_8 
       (.CI(\res_reg[12]_i_8_n_0 ),
        .CO({\res_reg[16]_i_8_n_0 ,\NLW_res_reg[16]_i_8_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\pc_reg[25]_0 [13:10]),
        .S({\ir_reg_reg_n_0_[14] ,\ir_reg_reg_n_0_[13] ,\ir_reg_reg_n_0_[12] ,\ir_reg_reg_n_0_[11] }));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[17] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [17]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[17]));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[17]_i_2 
       (.I0(\res_reg[17]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [17]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\ALU_Instantiate/data4 [17]),
        .O(\pc_reg[17]_0 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[17]_i_4 
       (.I0(\ALU_Instantiate/data3 [17]),
        .I1(\ALU_Instantiate/data2 [17]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[17]),
        .I5(op2[14]),
        .O(\res_reg[17]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[17]_i_5 
       (.I0(\ALU_Instantiate/data4 [17]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [17]),
        .O(\pc_reg[17]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[17]_i_6 
       (.I0(a_reg[17]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[17]),
        .O(op1[17]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[18] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [18]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[18]));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[18]_i_2 
       (.I0(\res_reg[18]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [18]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\ALU_Instantiate/data4 [18]),
        .O(\pc_reg[18]_0 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[18]_i_4 
       (.I0(\ALU_Instantiate/data3 [18]),
        .I1(\ALU_Instantiate/data2 [18]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[18]),
        .I5(op2[15]),
        .O(\res_reg[18]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[18]_i_5 
       (.I0(\ALU_Instantiate/data4 [18]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [18]),
        .O(\pc_reg[18]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[18]_i_6 
       (.I0(a_reg[18]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[18]),
        .O(op1[18]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[19] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [19]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[19]));
  CARRY4 \res_reg[19]_i_10 
       (.CI(\res_reg[15]_i_10_n_0 ),
        .CO({\res_reg[19]_i_10_n_0 ,\NLW_res_reg[19]_i_10_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op2[16:13]),
        .O(\ALU_Instantiate/data3 [19:16]),
        .S({\res_reg[19]_i_24_n_0 ,\res_reg[19]_i_25_n_0 ,\res_reg[19]_i_26_n_0 ,\res_reg[19]_i_27_n_0 }));
  CARRY4 \res_reg[19]_i_11 
       (.CI(\res_reg[15]_i_11_n_0 ),
        .CO({\res_reg[19]_i_11_n_0 ,\NLW_res_reg[19]_i_11_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op1[19:16]),
        .O(\ALU_Instantiate/data2 [19:16]),
        .S({\res_reg[19]_i_28_n_0 ,\res_reg[19]_i_29_n_0 ,\res_reg[19]_i_30_n_0 ,\res_reg[19]_i_31_n_0 }));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[19]_i_12 
       (.I0(\ALU_Instantiate/data3 [18]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [18]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\ALU_Instantiate/data4 [18]),
        .O(\ALU_Instantiate/p_0_out [18]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[19]_i_13 
       (.I0(\ALU_Instantiate/data3 [17]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [17]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\ALU_Instantiate/data4 [17]),
        .O(\ALU_Instantiate/p_0_out [17]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[19]_i_14 
       (.I0(\ALU_Instantiate/data3 [16]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [16]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\ALU_Instantiate/data4 [16]),
        .O(\ALU_Instantiate/p_0_out [16]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[19]_i_15 
       (.I0(\ALU_Instantiate/data3 [15]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [15]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\ALU_Instantiate/data4 [15]),
        .O(\ALU_Instantiate/p_0_out [15]));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[19]_i_16 
       (.I0(\ALU_Instantiate/data4 [18]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [18]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [18]),
        .I5(\ALU_Instantiate/p_0_out [19]),
        .O(\res_reg[19]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[19]_i_17 
       (.I0(\ALU_Instantiate/data4 [17]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [17]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [17]),
        .I5(\ALU_Instantiate/p_0_out [18]),
        .O(\res_reg[19]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[19]_i_18 
       (.I0(\ALU_Instantiate/data4 [16]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [16]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [16]),
        .I5(\ALU_Instantiate/p_0_out [17]),
        .O(\res_reg[19]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[19]_i_19 
       (.I0(\ALU_Instantiate/data4 [15]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [15]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [15]),
        .I5(\ALU_Instantiate/p_0_out [16]),
        .O(\res_reg[19]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[19]_i_2 
       (.I0(\res_reg[19]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [19]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\ALU_Instantiate/data4 [19]),
        .O(\pc_reg[19]_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[19]_i_20 
       (.I0(op1[19]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [16]),
        .I4(\pc_reg[31]_1 [16]),
        .I5(\pc_reg[31]_2 [16]),
        .O(\res_reg[19]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[19]_i_21 
       (.I0(op1[18]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [15]),
        .I4(\pc_reg[31]_1 [15]),
        .I5(\pc_reg[31]_2 [15]),
        .O(\res_reg[19]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[19]_i_22 
       (.I0(op1[17]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [14]),
        .I4(\pc_reg[31]_1 [14]),
        .I5(\pc_reg[31]_2 [14]),
        .O(\res_reg[19]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[19]_i_23 
       (.I0(op1[16]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [13]),
        .I4(\pc_reg[31]_1 [13]),
        .I5(\pc_reg[31]_2 [13]),
        .O(\res_reg[19]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[19]_i_24 
       (.I0(op2[16]),
        .I1(a_reg[19]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[19]),
        .O(\res_reg[19]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[19]_i_25 
       (.I0(op2[15]),
        .I1(a_reg[18]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[18]),
        .O(\res_reg[19]_i_25_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[19]_i_26 
       (.I0(op2[14]),
        .I1(a_reg[17]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[17]),
        .O(\res_reg[19]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[19]_i_27 
       (.I0(op2[13]),
        .I1(a_reg[16]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[16]),
        .O(\res_reg[19]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[19]_i_28 
       (.I0(op2[16]),
        .I1(a_reg[19]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[19]),
        .O(\res_reg[19]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[19]_i_29 
       (.I0(op2[15]),
        .I1(a_reg[18]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[18]),
        .O(\res_reg[19]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[19]_i_30 
       (.I0(op2[14]),
        .I1(a_reg[17]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[17]),
        .O(\res_reg[19]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[19]_i_31 
       (.I0(op2[13]),
        .I1(a_reg[16]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[16]),
        .O(\res_reg[19]_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[19]_i_4 
       (.I0(\ALU_Instantiate/data3 [19]),
        .I1(\ALU_Instantiate/data2 [19]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[19]),
        .I5(op2[16]),
        .O(\res_reg[19]_i_4_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \res_reg[19]_i_5 
       (.CI(\res_reg[15]_i_5_n_0 ),
        .CO({\res_reg[19]_i_5_n_0 ,\NLW_res_reg[19]_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(\ALU_Instantiate/p_0_out [18:15]),
        .O(\ALU_Instantiate/data5 [19:16]),
        .S({\res_reg[19]_i_16_n_0 ,\res_reg[19]_i_17_n_0 ,\res_reg[19]_i_18_n_0 ,\res_reg[19]_i_19_n_0 }));
  CARRY4 \res_reg[19]_i_6 
       (.CI(\res_reg[15]_i_6_n_0 ),
        .CO({\res_reg[19]_i_6_n_0 ,\NLW_res_reg[19]_i_6_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op1[19:16]),
        .O(\ALU_Instantiate/data4 [19:16]),
        .S({\res_reg[19]_i_20_n_0 ,\res_reg[19]_i_21_n_0 ,\res_reg[19]_i_22_n_0 ,\res_reg[19]_i_23_n_0 }));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[19]_i_7 
       (.I0(\ALU_Instantiate/data4 [19]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [19]),
        .O(\pc_reg[19]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[19]_i_8 
       (.I0(a_reg[19]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[19]),
        .O(op1[19]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[1] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [1]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res_reg_LAST_TWO[1]));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[1]_i_2 
       (.I0(\res_reg[1]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [1]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\ALU_Instantiate/data4 [1]),
        .O(\pc_reg[1]_0 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[1]_i_4 
       (.I0(\ALU_Instantiate/data3 [1]),
        .I1(\ALU_Instantiate/data2 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[1]),
        .I5(\pc_reg[2]_0 [1]),
        .O(\res_reg[1]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[1]_i_5 
       (.I0(\ALU_Instantiate/data4 [1]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [1]),
        .O(\pc_reg[1]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[1]_i_6 
       (.I0(a_reg[1]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[1]),
        .O(op1[1]));
  LUT6 #(
    .INIT(64'h00CC00CC00CC00A0)) 
    \res_reg[1]_i_7 
       (.I0(mult_reg[1]),
        .I1(shift_reg[1]),
        .I2(\prev_state_reg[3] ),
        .I3(\pc_reg[0]_1 ),
        .I4(Rsrc),
        .I5(\prev_state_reg[3]_0 ),
        .O(\pc_reg[2]_0 [1]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[20] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [20]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[20]));
  CARRY4 \res_reg[20]_i_10 
       (.CI(\res_reg[16]_i_8_n_0 ),
        .CO({\res_reg[20]_i_10_n_0 ,\NLW_res_reg[20]_i_10_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\pc_reg[25]_0 [17:14]),
        .S({\ir_reg_reg_n_0_[18] ,\ir_reg_reg_n_0_[17] ,\ir_reg_reg_n_0_[16] ,\ir_reg_reg_n_0_[15] }));
  LUT6 #(
    .INIT(64'h00CC00CC00CC00A0)) 
    \res_reg[20]_i_11 
       (.I0(\pc_reg[31]_1 [17]),
        .I1(\pc_reg[31]_2 [17]),
        .I2(\prev_state_reg[3] ),
        .I3(\pc_reg[0]_1 ),
        .I4(Rsrc),
        .I5(\prev_state_reg[3]_0 ),
        .O(\res_reg[20]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFAFACCFC0A0ACC0C)) 
    \res_reg[20]_i_3 
       (.I0(\res_reg[20]_i_8_n_0 ),
        .I1(\res_reg[20]_i_9_n_0 ),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\FSM_sequential_state_reg[2]_0 [1]),
        .I5(\pc_reg[31]_5 [6]),
        .O(\pc_reg[20]_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[20]_i_5 
       (.I0(\pc_reg[31]_3 [7]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [20]),
        .O(\pc_reg[20]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[20]_i_6 
       (.I0(a_reg[20]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[20]),
        .O(op1[20]));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[20]_i_8 
       (.I0(\ALU_Instantiate/data3 [20]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [20]),
        .O(\res_reg[20]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h66666888)) 
    \res_reg[20]_i_9 
       (.I0(\FSM_sequential_state_reg[2]_0 [0]),
        .I1(op1[20]),
        .I2(\prev_state_reg[2]_0 ),
        .I3(\pc_reg[25]_0 [17]),
        .I4(\res_reg[20]_i_11_n_0 ),
        .O(\res_reg[20]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[21] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [21]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[21]));
  LUT6 #(
    .INIT(64'h00CC00CC00CC00A0)) 
    \res_reg[21]_i_10 
       (.I0(\pc_reg[31]_1 [18]),
        .I1(\pc_reg[31]_2 [18]),
        .I2(\prev_state_reg[3] ),
        .I3(\pc_reg[0]_1 ),
        .I4(Rsrc),
        .I5(\prev_state_reg[3]_0 ),
        .O(\res_reg[21]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFAFACCFC0A0ACC0C)) 
    \res_reg[21]_i_3 
       (.I0(\res_reg[21]_i_8_n_0 ),
        .I1(\res_reg[21]_i_9_n_0 ),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\FSM_sequential_state_reg[2]_0 [1]),
        .I5(\pc_reg[31]_5 [7]),
        .O(\pc_reg[21]_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[21]_i_5 
       (.I0(\pc_reg[31]_3 [8]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [21]),
        .O(\pc_reg[21]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[21]_i_6 
       (.I0(a_reg[21]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[21]),
        .O(op1[21]));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[21]_i_8 
       (.I0(\ALU_Instantiate/data3 [21]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [21]),
        .O(\res_reg[21]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h66666888)) 
    \res_reg[21]_i_9 
       (.I0(\FSM_sequential_state_reg[2]_0 [0]),
        .I1(op1[21]),
        .I2(\prev_state_reg[2]_0 ),
        .I3(\pc_reg[25]_0 [18]),
        .I4(\res_reg[21]_i_10_n_0 ),
        .O(\res_reg[21]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[22] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [22]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[22]));
  LUT6 #(
    .INIT(64'h00CC00CC00CC00A0)) 
    \res_reg[22]_i_10 
       (.I0(\pc_reg[31]_1 [19]),
        .I1(\pc_reg[31]_2 [19]),
        .I2(\prev_state_reg[3] ),
        .I3(\pc_reg[0]_1 ),
        .I4(Rsrc),
        .I5(\prev_state_reg[3]_0 ),
        .O(\res_reg[22]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFAFACCFC0A0ACC0C)) 
    \res_reg[22]_i_3 
       (.I0(\res_reg[22]_i_8_n_0 ),
        .I1(\res_reg[22]_i_9_n_0 ),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\FSM_sequential_state_reg[2]_0 [1]),
        .I5(\pc_reg[31]_5 [8]),
        .O(\pc_reg[22]_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[22]_i_5 
       (.I0(\pc_reg[31]_3 [9]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [22]),
        .O(\pc_reg[22]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[22]_i_6 
       (.I0(a_reg[22]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[22]),
        .O(op1[22]));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[22]_i_8 
       (.I0(\ALU_Instantiate/data3 [22]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [22]),
        .O(\res_reg[22]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h66666888)) 
    \res_reg[22]_i_9 
       (.I0(\FSM_sequential_state_reg[2]_0 [0]),
        .I1(op1[22]),
        .I2(\prev_state_reg[2]_0 ),
        .I3(\pc_reg[25]_0 [19]),
        .I4(\res_reg[22]_i_10_n_0 ),
        .O(\res_reg[22]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[23] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [23]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[23]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \res_reg[23]_i_10 
       (.CI(\res_reg[19]_i_5_n_0 ),
        .CO({\res_reg[23]_i_10_n_0 ,\NLW_res_reg[23]_i_10_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(\ALU_Instantiate/p_0_out [22:19]),
        .O(\pc_reg[31]_5 [9:6]),
        .S({\res_reg[23]_i_19_n_0 ,\res_reg[23]_i_20_n_0 ,\res_reg[23]_i_21_n_0 ,\res_reg[23]_i_22_n_0 }));
  CARRY4 \res_reg[23]_i_11 
       (.CI(\res_reg[19]_i_6_n_0 ),
        .CO({\res_reg[23]_i_11_n_0 ,\NLW_res_reg[23]_i_11_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op1[23:20]),
        .O(\pc_reg[31]_3 [10:7]),
        .S({\res_reg[23]_i_23_n_0 ,\res_reg[23]_i_24_n_0 ,\res_reg[23]_i_25_n_0 ,\res_reg[23]_i_26_n_0 }));
  CARRY4 \res_reg[23]_i_12 
       (.CI(\res_reg[19]_i_11_n_0 ),
        .CO({\res_reg[23]_i_12_n_0 ,\NLW_res_reg[23]_i_12_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op1[23:20]),
        .O(\ALU_Instantiate/data2 [23:20]),
        .S({\res_reg[23]_i_27_n_0 ,\res_reg[23]_i_28_n_0 ,\res_reg[23]_i_29_n_0 ,\res_reg[23]_i_30_n_0 }));
  CARRY4 \res_reg[23]_i_13 
       (.CI(\res_reg[19]_i_10_n_0 ),
        .CO({\res_reg[23]_i_13_n_0 ,\NLW_res_reg[23]_i_13_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op2[20:17]),
        .O(\ALU_Instantiate/data3 [23:20]),
        .S({\res_reg[23]_i_31_n_0 ,\res_reg[23]_i_32_n_0 ,\res_reg[23]_i_33_n_0 ,\res_reg[23]_i_34_n_0 }));
  LUT6 #(
    .INIT(64'h00CC00CC00CC00A0)) 
    \res_reg[23]_i_14 
       (.I0(\pc_reg[31]_1 [20]),
        .I1(\pc_reg[31]_2 [20]),
        .I2(\prev_state_reg[3] ),
        .I3(\pc_reg[0]_1 ),
        .I4(Rsrc),
        .I5(\prev_state_reg[3]_0 ),
        .O(\res_reg[23]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[23]_i_15 
       (.I0(\ALU_Instantiate/data3 [22]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [22]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [9]),
        .O(\ALU_Instantiate/p_0_out [22]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[23]_i_16 
       (.I0(\ALU_Instantiate/data3 [21]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [21]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [8]),
        .O(\ALU_Instantiate/p_0_out [21]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[23]_i_17 
       (.I0(\ALU_Instantiate/data3 [20]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [20]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [7]),
        .O(\ALU_Instantiate/p_0_out [20]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[23]_i_18 
       (.I0(\ALU_Instantiate/data3 [19]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [19]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\ALU_Instantiate/data4 [19]),
        .O(\ALU_Instantiate/p_0_out [19]));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[23]_i_19 
       (.I0(\pc_reg[31]_3 [9]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [22]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [22]),
        .I5(\ALU_Instantiate/p_0_out [23]),
        .O(\res_reg[23]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[23]_i_20 
       (.I0(\pc_reg[31]_3 [8]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [21]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [21]),
        .I5(\ALU_Instantiate/p_0_out [22]),
        .O(\res_reg[23]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[23]_i_21 
       (.I0(\pc_reg[31]_3 [7]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [20]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [20]),
        .I5(\ALU_Instantiate/p_0_out [21]),
        .O(\res_reg[23]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[23]_i_22 
       (.I0(\ALU_Instantiate/data4 [19]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [19]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [19]),
        .I5(\ALU_Instantiate/p_0_out [20]),
        .O(\res_reg[23]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[23]_i_23 
       (.I0(op1[23]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [20]),
        .I4(\pc_reg[31]_1 [20]),
        .I5(\pc_reg[31]_2 [20]),
        .O(\res_reg[23]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[23]_i_24 
       (.I0(op1[22]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [19]),
        .I4(\pc_reg[31]_1 [19]),
        .I5(\pc_reg[31]_2 [19]),
        .O(\res_reg[23]_i_24_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[23]_i_25 
       (.I0(op1[21]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [18]),
        .I4(\pc_reg[31]_1 [18]),
        .I5(\pc_reg[31]_2 [18]),
        .O(\res_reg[23]_i_25_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[23]_i_26 
       (.I0(op1[20]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [17]),
        .I4(\pc_reg[31]_1 [17]),
        .I5(\pc_reg[31]_2 [17]),
        .O(\res_reg[23]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[23]_i_27 
       (.I0(op2[20]),
        .I1(a_reg[23]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[23]),
        .O(\res_reg[23]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[23]_i_28 
       (.I0(op2[19]),
        .I1(a_reg[22]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[22]),
        .O(\res_reg[23]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[23]_i_29 
       (.I0(op2[18]),
        .I1(a_reg[21]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[21]),
        .O(\res_reg[23]_i_29_n_0 ));
  LUT6 #(
    .INIT(64'hFAFACCFC0A0ACC0C)) 
    \res_reg[23]_i_3 
       (.I0(\res_reg[23]_i_8_n_0 ),
        .I1(\res_reg[23]_i_9_n_0 ),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\FSM_sequential_state_reg[2]_0 [1]),
        .I5(\pc_reg[31]_5 [9]),
        .O(\pc_reg[23]_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[23]_i_30 
       (.I0(op2[17]),
        .I1(a_reg[20]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[20]),
        .O(\res_reg[23]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[23]_i_31 
       (.I0(op2[20]),
        .I1(a_reg[23]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[23]),
        .O(\res_reg[23]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[23]_i_32 
       (.I0(op2[19]),
        .I1(a_reg[22]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[22]),
        .O(\res_reg[23]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[23]_i_33 
       (.I0(op2[18]),
        .I1(a_reg[21]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[21]),
        .O(\res_reg[23]_i_33_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[23]_i_34 
       (.I0(op2[17]),
        .I1(a_reg[20]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[20]),
        .O(\res_reg[23]_i_34_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[23]_i_5 
       (.I0(\pc_reg[31]_3 [10]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [23]),
        .O(\pc_reg[23]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[23]_i_6 
       (.I0(a_reg[23]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[23]),
        .O(op1[23]));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[23]_i_8 
       (.I0(\ALU_Instantiate/data3 [23]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [23]),
        .O(\res_reg[23]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h66666888)) 
    \res_reg[23]_i_9 
       (.I0(\FSM_sequential_state_reg[2]_0 [0]),
        .I1(op1[23]),
        .I2(\prev_state_reg[2]_0 ),
        .I3(\pc_reg[25]_0 [20]),
        .I4(\res_reg[23]_i_14_n_0 ),
        .O(\res_reg[23]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[24] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [24]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[24]));
  LUT6 #(
    .INIT(64'h00CC00CC00CC00A0)) 
    \res_reg[24]_i_10 
       (.I0(\pc_reg[31]_1 [21]),
        .I1(\pc_reg[31]_2 [21]),
        .I2(\prev_state_reg[3] ),
        .I3(\pc_reg[0]_1 ),
        .I4(Rsrc),
        .I5(\prev_state_reg[3]_0 ),
        .O(\res_reg[24]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFAFACCFC0A0ACC0C)) 
    \res_reg[24]_i_3 
       (.I0(\res_reg[24]_i_8_n_0 ),
        .I1(\res_reg[24]_i_9_n_0 ),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\FSM_sequential_state_reg[2]_0 [1]),
        .I5(\pc_reg[31]_5 [10]),
        .O(\pc_reg[24]_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[24]_i_5 
       (.I0(\pc_reg[31]_3 [11]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [24]),
        .O(\pc_reg[24]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[24]_i_6 
       (.I0(a_reg[24]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[24]),
        .O(op1[24]));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[24]_i_8 
       (.I0(\ALU_Instantiate/data3 [24]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [24]),
        .O(\res_reg[24]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h66666888)) 
    \res_reg[24]_i_9 
       (.I0(\FSM_sequential_state_reg[2]_0 [0]),
        .I1(op1[24]),
        .I2(\prev_state_reg[2]_0 ),
        .I3(\pc_reg[25]_0 [21]),
        .I4(\res_reg[24]_i_10_n_0 ),
        .O(\res_reg[24]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[25] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [25]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[25]));
  LUT6 #(
    .INIT(64'h00CC00CC00CC00A0)) 
    \res_reg[25]_i_10 
       (.I0(\pc_reg[31]_1 [22]),
        .I1(\pc_reg[31]_2 [22]),
        .I2(\prev_state_reg[3] ),
        .I3(\pc_reg[0]_1 ),
        .I4(Rsrc),
        .I5(\prev_state_reg[3]_0 ),
        .O(\res_reg[25]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFAFACCFC0A0ACC0C)) 
    \res_reg[25]_i_3 
       (.I0(\res_reg[25]_i_8_n_0 ),
        .I1(\res_reg[25]_i_9_n_0 ),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\FSM_sequential_state_reg[2]_0 [1]),
        .I5(\pc_reg[31]_5 [11]),
        .O(\pc_reg[25]_1 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[25]_i_5 
       (.I0(\pc_reg[31]_3 [12]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [25]),
        .O(\pc_reg[25]_2 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[25]_i_6 
       (.I0(a_reg[25]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[25]),
        .O(op1[25]));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[25]_i_8 
       (.I0(\ALU_Instantiate/data3 [25]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [25]),
        .O(\res_reg[25]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h66666888)) 
    \res_reg[25]_i_9 
       (.I0(\FSM_sequential_state_reg[2]_0 [0]),
        .I1(op1[25]),
        .I2(\prev_state_reg[2]_0 ),
        .I3(\pc_reg[25]_0 [22]),
        .I4(\res_reg[25]_i_10_n_0 ),
        .O(\res_reg[25]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[26] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [26]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[26]));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[26]_i_5 
       (.I0(\pc_reg[31]_3 [13]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [26]),
        .O(\pc_reg[26]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[26]_i_6 
       (.I0(a_reg[26]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[26]),
        .O(op1[26]));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[26]_i_8 
       (.I0(\ALU_Instantiate/data3 [26]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [26]),
        .O(\pc_reg[26]_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[27] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [27]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[27]));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \res_reg[27]_i_10 
       (.CI(\res_reg[23]_i_10_n_0 ),
        .CO({\res_reg[27]_i_10_n_0 ,\NLW_res_reg[27]_i_10_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(\ALU_Instantiate/p_0_out [26:23]),
        .O(\pc_reg[31]_5 [13:10]),
        .S({\res_reg[27]_i_20_n_0 ,\res_reg[27]_i_21_n_0 ,\res_reg[27]_i_22_n_0 ,\res_reg[27]_i_23_n_0 }));
  CARRY4 \res_reg[27]_i_11 
       (.CI(\res_reg[23]_i_11_n_0 ),
        .CO({\res_reg[27]_i_11_n_0 ,\NLW_res_reg[27]_i_11_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op1[27:24]),
        .O(\pc_reg[31]_3 [14:11]),
        .S({\res_reg[27]_i_24_n_0 ,\res_reg[27]_i_25_n_0 ,\res_reg[27]_i_26_n_0 ,\res_reg[27]_i_27_n_0 }));
  CARRY4 \res_reg[27]_i_12 
       (.CI(\res_reg[23]_i_12_n_0 ),
        .CO({\res_reg[27]_i_12_n_0 ,\NLW_res_reg[27]_i_12_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op1[27:24]),
        .O(\ALU_Instantiate/data2 [27:24]),
        .S({\res_reg[27]_i_28_n_0 ,\res_reg[27]_i_29_n_0 ,\res_reg[27]_i_30_n_0 ,\res_reg[27]_i_31_n_0 }));
  CARRY4 \res_reg[27]_i_13 
       (.CI(\res_reg[23]_i_13_n_0 ),
        .CO({\res_reg[27]_i_13_n_0 ,\NLW_res_reg[27]_i_13_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op2[24:21]),
        .O(\ALU_Instantiate/data3 [27:24]),
        .S({\res_reg[27]_i_32_n_0 ,\res_reg[27]_i_33_n_0 ,\res_reg[27]_i_34_n_0 ,\res_reg[27]_i_35_n_0 }));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[27]_i_16 
       (.I0(\ALU_Instantiate/data3 [26]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [26]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [13]),
        .O(\ALU_Instantiate/p_0_out [26]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[27]_i_17 
       (.I0(\ALU_Instantiate/data3 [25]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [25]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [12]),
        .O(\ALU_Instantiate/p_0_out [25]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[27]_i_18 
       (.I0(\ALU_Instantiate/data3 [24]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [24]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [11]),
        .O(\ALU_Instantiate/p_0_out [24]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[27]_i_19 
       (.I0(\ALU_Instantiate/data3 [23]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [23]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [10]),
        .O(\ALU_Instantiate/p_0_out [23]));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[27]_i_20 
       (.I0(\pc_reg[31]_3 [13]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [26]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [26]),
        .I5(\ALU_Instantiate/p_0_out [27]),
        .O(\res_reg[27]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[27]_i_21 
       (.I0(\pc_reg[31]_3 [12]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [25]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [25]),
        .I5(\ALU_Instantiate/p_0_out [26]),
        .O(\res_reg[27]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[27]_i_22 
       (.I0(\pc_reg[31]_3 [11]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [24]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [24]),
        .I5(\ALU_Instantiate/p_0_out [25]),
        .O(\res_reg[27]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[27]_i_23 
       (.I0(\pc_reg[31]_3 [10]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [23]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [23]),
        .I5(\ALU_Instantiate/p_0_out [24]),
        .O(\res_reg[27]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'h99A99AAA59695A6A)) 
    \res_reg[27]_i_24 
       (.I0(op1[27]),
        .I1(Asrc2[0]),
        .I2(Asrc2[1]),
        .I3(\pc_reg[31]_1 [24]),
        .I4(\pc_reg[31]_2 [24]),
        .I5(CO),
        .O(\res_reg[27]_i_24_n_0 ));
  LUT6 #(
    .INIT(64'h99A99AAA59695A6A)) 
    \res_reg[27]_i_25 
       (.I0(op1[26]),
        .I1(Asrc2[0]),
        .I2(Asrc2[1]),
        .I3(\pc_reg[31]_1 [23]),
        .I4(\pc_reg[31]_2 [23]),
        .I5(CO),
        .O(\res_reg[27]_i_25_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[27]_i_26 
       (.I0(op1[25]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [22]),
        .I4(\pc_reg[31]_1 [22]),
        .I5(\pc_reg[31]_2 [22]),
        .O(\res_reg[27]_i_26_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[27]_i_27 
       (.I0(op1[24]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [21]),
        .I4(\pc_reg[31]_1 [21]),
        .I5(\pc_reg[31]_2 [21]),
        .O(\res_reg[27]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[27]_i_28 
       (.I0(op2[24]),
        .I1(a_reg[27]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[27]),
        .O(\res_reg[27]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[27]_i_29 
       (.I0(op2[23]),
        .I1(a_reg[26]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[26]),
        .O(\res_reg[27]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[27]_i_30 
       (.I0(op2[22]),
        .I1(a_reg[25]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[25]),
        .O(\res_reg[27]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[27]_i_31 
       (.I0(op2[21]),
        .I1(a_reg[24]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[24]),
        .O(\res_reg[27]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[27]_i_32 
       (.I0(op2[24]),
        .I1(a_reg[27]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[27]),
        .O(\res_reg[27]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[27]_i_33 
       (.I0(op2[23]),
        .I1(a_reg[26]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[26]),
        .O(\res_reg[27]_i_33_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[27]_i_34 
       (.I0(op2[22]),
        .I1(a_reg[25]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[25]),
        .O(\res_reg[27]_i_34_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[27]_i_35 
       (.I0(op2[21]),
        .I1(a_reg[24]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[24]),
        .O(\res_reg[27]_i_35_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[27]_i_5 
       (.I0(\pc_reg[31]_3 [14]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [27]),
        .O(\pc_reg[27]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[27]_i_6 
       (.I0(a_reg[27]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[27]),
        .O(op1[27]));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[27]_i_8 
       (.I0(\ALU_Instantiate/data3 [27]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [27]),
        .O(\pc_reg[27]_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[28] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [28]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[28]));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[28]_i_2 
       (.I0(\res_reg[28]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [28]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\pc_reg[31]_3 [15]),
        .O(\pc_reg[28]_0 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[28]_i_4 
       (.I0(\ALU_Instantiate/data3 [28]),
        .I1(\pc_reg[31]_4 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[28]),
        .I5(op2[25]),
        .O(\res_reg[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[28]_i_6 
       (.I0(a_reg[28]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[28]),
        .O(op1[28]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[29] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [29]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[29]));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[29]_i_2 
       (.I0(\res_reg[29]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [29]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\pc_reg[31]_3 [16]),
        .O(\pc_reg[29]_0 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[29]_i_4 
       (.I0(\ALU_Instantiate/data3 [29]),
        .I1(\pc_reg[31]_4 [2]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[29]),
        .I5(op2[26]),
        .O(\res_reg[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[29]_i_6 
       (.I0(a_reg[29]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[29]),
        .O(op1[29]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[2] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [2]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[2]));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[2]_i_2 
       (.I0(\res_reg[2]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [2]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\ALU_Instantiate/data4 [2]),
        .O(\pc_reg[2]_1 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[2]_i_4 
       (.I0(\ALU_Instantiate/data3 [2]),
        .I1(\ALU_Instantiate/data2 [2]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[2]),
        .I5(\pc_reg[2]_0 [2]),
        .O(\res_reg[2]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[2]_i_5 
       (.I0(\ALU_Instantiate/data4 [2]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [2]),
        .O(\pc_reg[2]_2 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[2]_i_6 
       (.I0(a_reg[2]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[2]),
        .O(op1[2]));
  LUT5 #(
    .INIT(32'hCAFFCAF0)) 
    \res_reg[2]_i_7 
       (.I0(mult_reg[2]),
        .I1(plusOp),
        .I2(Asrc2[0]),
        .I3(Asrc2[1]),
        .I4(shift_reg[2]),
        .O(\pc_reg[2]_0 [2]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[30] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [30]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[30]));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[30]_i_2 
       (.I0(\res_reg[30]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [30]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\pc_reg[31]_3 [17]),
        .O(\pc_reg[30]_0 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[30]_i_4 
       (.I0(\ALU_Instantiate/data3 [30]),
        .I1(\pc_reg[31]_4 [3]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[30]),
        .I5(op2[27]),
        .O(\res_reg[30]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[30]_i_6 
       (.I0(a_reg[30]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[30]),
        .O(op1[30]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[31] 
       (.CLR(AR),
        .D(flags_sig[1]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[31]));
  CARRY4 \res_reg[31]_i_10 
       (.CI(\res_reg[27]_i_13_n_0 ),
        .CO(\NLW_res_reg[31]_i_10_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,op2[27:25]}),
        .O(\ALU_Instantiate/data3 [31:28]),
        .S({\res_reg[31]_i_23_n_0 ,\res_reg[31]_i_24_n_0 ,\res_reg[31]_i_25_n_0 ,\res_reg[31]_i_26_n_0 }));
  CARRY4 \res_reg[31]_i_11 
       (.CI(\res_reg[27]_i_12_n_0 ),
        .CO(\NLW_res_reg[31]_i_11_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,op1[30:28]}),
        .O(\pc_reg[31]_4 [4:1]),
        .S({\res_reg[31]_i_27_n_0 ,\res_reg[31]_i_28_n_0 ,\res_reg[31]_i_29_n_0 ,\res_reg[31]_i_30_n_0 }));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[31]_i_12 
       (.I0(\ALU_Instantiate/data3 [29]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\pc_reg[31]_4 [2]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [16]),
        .O(\ALU_Instantiate/p_0_out [29]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[31]_i_13 
       (.I0(\ALU_Instantiate/data3 [28]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\pc_reg[31]_4 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [15]),
        .O(\ALU_Instantiate/p_0_out [28]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[31]_i_14 
       (.I0(\ALU_Instantiate/data3 [27]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [27]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [14]),
        .O(\ALU_Instantiate/p_0_out [27]));
  LUT6 #(
    .INIT(64'hA9A9A9595959A959)) 
    \res_reg[31]_i_15 
       (.I0(\ALU_Instantiate/p_0_out__0 ),
        .I1(\pc_reg[31]_3 [18]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\pc_reg[31]_4 [4]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\ALU_Instantiate/data3 [31]),
        .O(\res_reg[31]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hA9A9A9595959A959)) 
    \res_reg[31]_i_16 
       (.I0(\ALU_Instantiate/p_0_out [29]),
        .I1(\pc_reg[31]_3 [17]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\pc_reg[31]_4 [3]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\ALU_Instantiate/data3 [30]),
        .O(\res_reg[31]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[31]_i_17 
       (.I0(\pc_reg[31]_3 [15]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\pc_reg[31]_4 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [28]),
        .I5(\ALU_Instantiate/p_0_out [29]),
        .O(\res_reg[31]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[31]_i_18 
       (.I0(\pc_reg[31]_3 [14]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [27]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [27]),
        .I5(\ALU_Instantiate/p_0_out [28]),
        .O(\res_reg[31]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'h99A99AAA59695A6A)) 
    \res_reg[31]_i_19 
       (.I0(op1[31]),
        .I1(Asrc2[0]),
        .I2(Asrc2[1]),
        .I3(\pc_reg[31]_1 [28]),
        .I4(\pc_reg[31]_2 [28]),
        .I5(CO),
        .O(\res_reg[31]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h99A99AAA59695A6A)) 
    \res_reg[31]_i_20 
       (.I0(op1[30]),
        .I1(Asrc2[0]),
        .I2(Asrc2[1]),
        .I3(\pc_reg[31]_1 [27]),
        .I4(\pc_reg[31]_2 [27]),
        .I5(CO),
        .O(\res_reg[31]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h99A99AAA59695A6A)) 
    \res_reg[31]_i_21 
       (.I0(op1[29]),
        .I1(Asrc2[0]),
        .I2(Asrc2[1]),
        .I3(\pc_reg[31]_1 [26]),
        .I4(\pc_reg[31]_2 [26]),
        .I5(CO),
        .O(\res_reg[31]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h99A99AAA59695A6A)) 
    \res_reg[31]_i_22 
       (.I0(op1[28]),
        .I1(Asrc2[0]),
        .I2(Asrc2[1]),
        .I3(\pc_reg[31]_1 [25]),
        .I4(\pc_reg[31]_2 [25]),
        .I5(CO),
        .O(\res_reg[31]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[31]_i_23 
       (.I0(op2[28]),
        .I1(a_reg[31]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[31]),
        .O(\res_reg[31]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[31]_i_24 
       (.I0(op2[27]),
        .I1(a_reg[30]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[30]),
        .O(\res_reg[31]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[31]_i_25 
       (.I0(op2[26]),
        .I1(a_reg[29]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[29]),
        .O(\res_reg[31]_i_25_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[31]_i_26 
       (.I0(op2[25]),
        .I1(a_reg[28]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[28]),
        .O(\res_reg[31]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[31]_i_27 
       (.I0(op2[28]),
        .I1(a_reg[31]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[31]),
        .O(\res_reg[31]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[31]_i_28 
       (.I0(op2[27]),
        .I1(a_reg[30]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[30]),
        .O(\res_reg[31]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[31]_i_29 
       (.I0(op2[26]),
        .I1(a_reg[29]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[29]),
        .O(\res_reg[31]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[31]_i_30 
       (.I0(op2[25]),
        .I1(a_reg[28]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[28]),
        .O(\res_reg[31]_i_30_n_0 ));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[31]_i_31 
       (.I0(\ALU_Instantiate/data3 [30]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\pc_reg[31]_4 [3]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [17]),
        .O(\ALU_Instantiate/p_0_out__0 ));
  LUT4 #(
    .INIT(16'h0024)) 
    \res_reg[31]_i_5 
       (.I0(out[0]),
        .I1(out[3]),
        .I2(out[2]),
        .I3(out[1]),
        .O(\register_array_reg[0][31] ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[31]_i_6 
       (.I0(\ALU_Instantiate/data3 [31]),
        .I1(\pc_reg[31]_4 [4]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[31]),
        .I5(op2[28]),
        .O(\pc_reg[31]_6 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \res_reg[31]_i_7 
       (.CI(\res_reg[27]_i_10_n_0 ),
        .CO(\NLW_res_reg[31]_i_7_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,\ALU_Instantiate/p_0_out [29:27]}),
        .O({\pc_reg[31]_5 [14],\ALU_Instantiate/data5 [30:28]}),
        .S({\res_reg[31]_i_15_n_0 ,\res_reg[31]_i_16_n_0 ,\res_reg[31]_i_17_n_0 ,\res_reg[31]_i_18_n_0 }));
  CARRY4 \res_reg[31]_i_8 
       (.CI(\res_reg[27]_i_11_n_0 ),
        .CO(\NLW_res_reg[31]_i_8_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,op1[30:28]}),
        .O(\pc_reg[31]_3 [18:15]),
        .S({\res_reg[31]_i_19_n_0 ,\res_reg[31]_i_20_n_0 ,\res_reg[31]_i_21_n_0 ,\res_reg[31]_i_22_n_0 }));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[3] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [3]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[3]));
  CARRY4 \res_reg[3]_i_10 
       (.CI(1'b0),
        .CO({\res_reg[3]_i_10_n_0 ,\NLW_res_reg[3]_i_10_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI({op2[0],\pc_reg[2]_0 }),
        .O({\ALU_Instantiate/data3 [3:1],O}),
        .S({\res_reg[3]_i_23_n_0 ,\res_reg[3]_i_24_n_0 ,\res_reg[3]_i_25_n_0 ,\res_reg[3]_i_26_n_0 }));
  CARRY4 \res_reg[3]_i_11 
       (.CI(1'b0),
        .CO({\res_reg[3]_i_11_n_0 ,\NLW_res_reg[3]_i_11_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b1),
        .DI(op1[3:0]),
        .O({\ALU_Instantiate/data2 [3:1],\pc_reg[31]_4 [0]}),
        .S({\res_reg[3]_i_27_n_0 ,\res_reg[3]_i_28_n_0 ,\res_reg[3]_i_29_n_0 ,\res_reg[3]_i_30_n_0 }));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[3]_i_12 
       (.I0(\ALU_Instantiate/data3 [2]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [2]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\ALU_Instantiate/data4 [2]),
        .O(\ALU_Instantiate/p_0_out [2]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[3]_i_13 
       (.I0(\ALU_Instantiate/data3 [1]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\ALU_Instantiate/data4 [1]),
        .O(\ALU_Instantiate/p_0_out [1]));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[3]_i_15 
       (.I0(\ALU_Instantiate/data4 [2]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [2]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [2]),
        .I5(\ALU_Instantiate/p_0_out [3]),
        .O(\res_reg[3]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[3]_i_16 
       (.I0(\ALU_Instantiate/data4 [1]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [1]),
        .I5(\ALU_Instantiate/p_0_out [2]),
        .O(\res_reg[3]_i_16_n_0 ));
  LUT5 #(
    .INIT(32'hDFD5202A)) 
    \res_reg[3]_i_17 
       (.I0(\FSM_sequential_state_reg[2]_0 [1]),
        .I1(O),
        .I2(\FSM_sequential_state_reg[2]_0 [0]),
        .I3(\pc_reg[31]_4 [0]),
        .I4(\ALU_Instantiate/p_0_out [1]),
        .O(\res_reg[3]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[3]_i_19 
       (.I0(op1[3]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [0]),
        .I4(\pc_reg[31]_1 [0]),
        .I5(\pc_reg[31]_2 [0]),
        .O(\res_reg[3]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[3]_i_2 
       (.I0(\res_reg[3]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [3]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\ALU_Instantiate/data4 [3]),
        .O(\pc_reg[3]_0 ));
  LUT6 #(
    .INIT(64'h5556A55655A6A5A6)) 
    \res_reg[3]_i_20 
       (.I0(op1[2]),
        .I1(shift_reg[2]),
        .I2(Asrc2[1]),
        .I3(Asrc2[0]),
        .I4(plusOp),
        .I5(mult_reg[2]),
        .O(\res_reg[3]_i_20_n_0 ));
  LUT5 #(
    .INIT(32'h556A6A6A)) 
    \res_reg[3]_i_21 
       (.I0(op1[1]),
        .I1(\prev_state_reg[2] ),
        .I2(shift_reg[1]),
        .I3(\prev_state_reg[0] ),
        .I4(mult_reg[1]),
        .O(\res_reg[3]_i_21_n_0 ));
  LUT5 #(
    .INIT(32'h556A6A6A)) 
    \res_reg[3]_i_22 
       (.I0(op1[0]),
        .I1(\prev_state_reg[2] ),
        .I2(shift_reg[0]),
        .I3(\prev_state_reg[0] ),
        .I4(mult_reg[0]),
        .O(\res_reg[3]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[3]_i_23 
       (.I0(op2[0]),
        .I1(a_reg[3]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[3]),
        .O(\res_reg[3]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[3]_i_24 
       (.I0(\pc_reg[2]_0 [2]),
        .I1(a_reg[2]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[2]),
        .O(\res_reg[3]_i_24_n_0 ));
  LUT5 #(
    .INIT(32'hF8880777)) 
    \res_reg[3]_i_25 
       (.I0(mult_reg[1]),
        .I1(\prev_state_reg[0] ),
        .I2(shift_reg[1]),
        .I3(\prev_state_reg[2] ),
        .I4(op1[1]),
        .O(\res_reg[3]_i_25_n_0 ));
  LUT5 #(
    .INIT(32'hF8880777)) 
    \res_reg[3]_i_26 
       (.I0(mult_reg[0]),
        .I1(\prev_state_reg[0] ),
        .I2(shift_reg[0]),
        .I3(\prev_state_reg[2] ),
        .I4(op1[0]),
        .O(\res_reg[3]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[3]_i_27 
       (.I0(op2[0]),
        .I1(a_reg[3]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[3]),
        .O(\res_reg[3]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[3]_i_28 
       (.I0(\pc_reg[2]_0 [2]),
        .I1(a_reg[2]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[2]),
        .O(\res_reg[3]_i_28_n_0 ));
  LUT5 #(
    .INIT(32'hF8880777)) 
    \res_reg[3]_i_29 
       (.I0(mult_reg[1]),
        .I1(\prev_state_reg[0] ),
        .I2(shift_reg[1]),
        .I3(\prev_state_reg[2] ),
        .I4(op1[1]),
        .O(\res_reg[3]_i_29_n_0 ));
  LUT5 #(
    .INIT(32'hF8880777)) 
    \res_reg[3]_i_30 
       (.I0(mult_reg[0]),
        .I1(\prev_state_reg[0] ),
        .I2(shift_reg[0]),
        .I3(\prev_state_reg[2] ),
        .I4(op1[0]),
        .O(\res_reg[3]_i_30_n_0 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[3]_i_4 
       (.I0(\ALU_Instantiate/data3 [3]),
        .I1(\ALU_Instantiate/data2 [3]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[3]),
        .I5(op2[0]),
        .O(\res_reg[3]_i_4_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \res_reg[3]_i_5 
       (.CI(1'b0),
        .CO({\res_reg[3]_i_5_n_0 ,\NLW_res_reg[3]_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({\ALU_Instantiate/p_0_out [2:1],DI,\pc_reg[0]_0 }),
        .O(\ALU_Instantiate/data5 [3:0]),
        .S({\res_reg[3]_i_15_n_0 ,\res_reg[3]_i_16_n_0 ,\res_reg[3]_i_17_n_0 ,S}));
  CARRY4 \res_reg[3]_i_6 
       (.CI(1'b0),
        .CO({\res_reg[3]_i_6_n_0 ,\NLW_res_reg[3]_i_6_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op1[3:0]),
        .O({\ALU_Instantiate/data4 [3:1],\pc_reg[31]_3 [0]}),
        .S({\res_reg[3]_i_19_n_0 ,\res_reg[3]_i_20_n_0 ,\res_reg[3]_i_21_n_0 ,\res_reg[3]_i_22_n_0 }));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[3]_i_7 
       (.I0(\ALU_Instantiate/data4 [3]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [3]),
        .O(\pc_reg[3]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[3]_i_8 
       (.I0(a_reg[3]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[3]),
        .O(op1[3]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[4] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [4]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[4]));
  CARRY4 \res_reg[4]_i_10 
       (.CI(1'b0),
        .CO({\res_reg[4]_i_10_n_0 ,\NLW_res_reg[4]_i_10_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\ir_reg_reg_n_0_[0] ,1'b0}),
        .O({\pc_reg[25]_0 [1:0],plusOp,\NLW_res_reg[4]_i_10_O_UNCONNECTED [0]}),
        .S({\ir_reg_reg_n_0_[2] ,\ir_reg_reg_n_0_[1] ,\res_reg[4]_i_14_n_0 ,1'b0}));
  LUT6 #(
    .INIT(64'h00CC00CC00CC00A0)) 
    \res_reg[4]_i_11 
       (.I0(\pc_reg[31]_1 [1]),
        .I1(\pc_reg[31]_2 [1]),
        .I2(\prev_state_reg[3] ),
        .I3(\pc_reg[0]_1 ),
        .I4(Rsrc),
        .I5(\prev_state_reg[3]_0 ),
        .O(\res_reg[4]_i_11_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \res_reg[4]_i_14 
       (.I0(\ir_reg_reg_n_0_[0] ),
        .O(\res_reg[4]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hFAFACCFC0A0ACC0C)) 
    \res_reg[4]_i_3 
       (.I0(\res_reg[4]_i_8_n_0 ),
        .I1(\res_reg[4]_i_9_n_0 ),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\FSM_sequential_state_reg[2]_0 [1]),
        .I5(\pc_reg[31]_5 [0]),
        .O(\pc_reg[4]_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[4]_i_5 
       (.I0(\pc_reg[31]_3 [1]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [4]),
        .O(\pc_reg[4]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[4]_i_6 
       (.I0(a_reg[4]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[4]),
        .O(op1[4]));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[4]_i_8 
       (.I0(\ALU_Instantiate/data3 [4]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [4]),
        .O(\res_reg[4]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h66666888)) 
    \res_reg[4]_i_9 
       (.I0(\FSM_sequential_state_reg[2]_0 [0]),
        .I1(op1[4]),
        .I2(\prev_state_reg[2]_0 ),
        .I3(\pc_reg[25]_0 [1]),
        .I4(\res_reg[4]_i_11_n_0 ),
        .O(\res_reg[4]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[5] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [5]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[5]));
  LUT6 #(
    .INIT(64'h00CC00CC00CC00A0)) 
    \res_reg[5]_i_10 
       (.I0(\pc_reg[31]_1 [2]),
        .I1(\pc_reg[31]_2 [2]),
        .I2(\prev_state_reg[3] ),
        .I3(\pc_reg[0]_1 ),
        .I4(Rsrc),
        .I5(\prev_state_reg[3]_0 ),
        .O(\res_reg[5]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFAFACCFC0A0ACC0C)) 
    \res_reg[5]_i_3 
       (.I0(\res_reg[5]_i_8_n_0 ),
        .I1(\res_reg[5]_i_9_n_0 ),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\FSM_sequential_state_reg[2]_0 [1]),
        .I5(\pc_reg[31]_5 [1]),
        .O(\pc_reg[5]_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[5]_i_5 
       (.I0(\pc_reg[31]_3 [2]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [5]),
        .O(\pc_reg[5]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[5]_i_6 
       (.I0(a_reg[5]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[5]),
        .O(op1[5]));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[5]_i_8 
       (.I0(\ALU_Instantiate/data3 [5]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [5]),
        .O(\res_reg[5]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h66666888)) 
    \res_reg[5]_i_9 
       (.I0(\FSM_sequential_state_reg[2]_0 [0]),
        .I1(op1[5]),
        .I2(\prev_state_reg[2]_0 ),
        .I3(\pc_reg[25]_0 [2]),
        .I4(\res_reg[5]_i_10_n_0 ),
        .O(\res_reg[5]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[6] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [6]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[6]));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[6]_i_2 
       (.I0(\res_reg[6]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [6]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\ALU_Instantiate/data4 [6]),
        .O(\pc_reg[6]_0 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[6]_i_4 
       (.I0(\ALU_Instantiate/data3 [6]),
        .I1(\ALU_Instantiate/data2 [6]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[6]),
        .I5(op2[3]),
        .O(\res_reg[6]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[6]_i_5 
       (.I0(\ALU_Instantiate/data4 [6]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [6]),
        .O(\pc_reg[6]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[6]_i_6 
       (.I0(a_reg[6]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[6]),
        .O(op1[6]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[7] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [7]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[7]));
  CARRY4 \res_reg[7]_i_10 
       (.CI(\res_reg[3]_i_10_n_0 ),
        .CO({\res_reg[7]_i_10_n_0 ,\NLW_res_reg[7]_i_10_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op2[4:1]),
        .O(\ALU_Instantiate/data3 [7:4]),
        .S({\res_reg[7]_i_24_n_0 ,\res_reg[7]_i_25_n_0 ,\res_reg[7]_i_26_n_0 ,\res_reg[7]_i_27_n_0 }));
  CARRY4 \res_reg[7]_i_11 
       (.CI(\res_reg[3]_i_11_n_0 ),
        .CO({\res_reg[7]_i_11_n_0 ,\NLW_res_reg[7]_i_11_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op1[7:4]),
        .O(\ALU_Instantiate/data2 [7:4]),
        .S({\res_reg[7]_i_28_n_0 ,\res_reg[7]_i_29_n_0 ,\res_reg[7]_i_30_n_0 ,\res_reg[7]_i_31_n_0 }));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[7]_i_12 
       (.I0(\ALU_Instantiate/data3 [6]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [6]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\ALU_Instantiate/data4 [6]),
        .O(\ALU_Instantiate/p_0_out [6]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[7]_i_13 
       (.I0(\ALU_Instantiate/data3 [5]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [5]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [2]),
        .O(\ALU_Instantiate/p_0_out [5]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[7]_i_14 
       (.I0(\ALU_Instantiate/data3 [4]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [4]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\pc_reg[31]_3 [1]),
        .O(\ALU_Instantiate/p_0_out [4]));
  LUT5 #(
    .INIT(32'hB8FFB800)) 
    \res_reg[7]_i_15 
       (.I0(\ALU_Instantiate/data3 [3]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [3]),
        .I3(\FSM_sequential_state_reg[2]_0 [1]),
        .I4(\ALU_Instantiate/data4 [3]),
        .O(\ALU_Instantiate/p_0_out [3]));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[7]_i_16 
       (.I0(\ALU_Instantiate/data4 [6]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [6]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [6]),
        .I5(\ALU_Instantiate/p_0_out [7]),
        .O(\res_reg[7]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[7]_i_17 
       (.I0(\pc_reg[31]_3 [2]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [5]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [5]),
        .I5(\ALU_Instantiate/p_0_out [6]),
        .O(\res_reg[7]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[7]_i_18 
       (.I0(\pc_reg[31]_3 [1]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [4]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [4]),
        .I5(\ALU_Instantiate/p_0_out [5]),
        .O(\res_reg[7]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hEEE222E2111DDD1D)) 
    \res_reg[7]_i_19 
       (.I0(\ALU_Instantiate/data4 [3]),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\ALU_Instantiate/data2 [3]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\ALU_Instantiate/data3 [3]),
        .I5(\ALU_Instantiate/p_0_out [4]),
        .O(\res_reg[7]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'hFA0AFA3AFA0ACA0A)) 
    \res_reg[7]_i_2 
       (.I0(\res_reg[7]_i_4_n_0 ),
        .I1(\FSM_sequential_state_reg[2]_0 [1]),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\ALU_Instantiate/data5 [7]),
        .I4(\FSM_sequential_state_reg[2]_0 [0]),
        .I5(\ALU_Instantiate/data4 [7]),
        .O(\pc_reg[7]_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[7]_i_20 
       (.I0(op1[7]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [4]),
        .I4(\pc_reg[31]_1 [4]),
        .I5(\pc_reg[31]_2 [4]),
        .O(\res_reg[7]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[7]_i_21 
       (.I0(op1[6]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [3]),
        .I4(\pc_reg[31]_1 [3]),
        .I5(\pc_reg[31]_2 [3]),
        .O(\res_reg[7]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[7]_i_22 
       (.I0(op1[5]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [2]),
        .I4(\pc_reg[31]_1 [2]),
        .I5(\pc_reg[31]_2 [2]),
        .O(\res_reg[7]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'h65A569A966A66AAA)) 
    \res_reg[7]_i_23 
       (.I0(op1[4]),
        .I1(Asrc2[1]),
        .I2(Asrc2[0]),
        .I3(\pc_reg[25]_0 [1]),
        .I4(\pc_reg[31]_1 [1]),
        .I5(\pc_reg[31]_2 [1]),
        .O(\res_reg[7]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[7]_i_24 
       (.I0(op2[4]),
        .I1(a_reg[7]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[7]),
        .O(\res_reg[7]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[7]_i_25 
       (.I0(op2[3]),
        .I1(a_reg[6]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[6]),
        .O(\res_reg[7]_i_25_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[7]_i_26 
       (.I0(op2[2]),
        .I1(a_reg[5]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[5]),
        .O(\res_reg[7]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[7]_i_27 
       (.I0(op2[1]),
        .I1(a_reg[4]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[4]),
        .O(\res_reg[7]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[7]_i_28 
       (.I0(op2[4]),
        .I1(a_reg[7]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[7]),
        .O(\res_reg[7]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[7]_i_29 
       (.I0(op2[3]),
        .I1(a_reg[6]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[6]),
        .O(\res_reg[7]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[7]_i_30 
       (.I0(op2[2]),
        .I1(a_reg[5]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[5]),
        .O(\res_reg[7]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h9A95)) 
    \res_reg[7]_i_31 
       (.I0(op2[1]),
        .I1(a_reg[4]),
        .I2(\register_array_reg[0][31] ),
        .I3(pc[4]),
        .O(\res_reg[7]_i_31_n_0 ));
  LUT6 #(
    .INIT(64'hA0CFAFC0AFC0A0C0)) 
    \res_reg[7]_i_4 
       (.I0(\ALU_Instantiate/data3 [7]),
        .I1(\ALU_Instantiate/data2 [7]),
        .I2(\FSM_sequential_state_reg[2]_0 [1]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(op1[7]),
        .I5(op2[4]),
        .O(\res_reg[7]_i_4_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \res_reg[7]_i_5 
       (.CI(\res_reg[3]_i_5_n_0 ),
        .CO({\res_reg[7]_i_5_n_0 ,\NLW_res_reg[7]_i_5_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(\ALU_Instantiate/p_0_out [6:3]),
        .O({\ALU_Instantiate/data5 [7:6],\pc_reg[31]_5 [1:0]}),
        .S({\res_reg[7]_i_16_n_0 ,\res_reg[7]_i_17_n_0 ,\res_reg[7]_i_18_n_0 ,\res_reg[7]_i_19_n_0 }));
  CARRY4 \res_reg[7]_i_6 
       (.CI(\res_reg[3]_i_6_n_0 ),
        .CO({\res_reg[7]_i_6_n_0 ,\NLW_res_reg[7]_i_6_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(op1[7:4]),
        .O({\ALU_Instantiate/data4 [7:6],\pc_reg[31]_3 [2:1]}),
        .S({\res_reg[7]_i_20_n_0 ,\res_reg[7]_i_21_n_0 ,\res_reg[7]_i_22_n_0 ,\res_reg[7]_i_23_n_0 }));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[7]_i_7 
       (.I0(\ALU_Instantiate/data4 [7]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [7]),
        .O(\pc_reg[7]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[7]_i_8 
       (.I0(a_reg[7]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[7]),
        .O(op1[7]));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[8] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [8]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[8]));
  CARRY4 \res_reg[8]_i_10 
       (.CI(\res_reg[4]_i_10_n_0 ),
        .CO({\res_reg[8]_i_10_n_0 ,\NLW_res_reg[8]_i_10_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\pc_reg[25]_0 [5:2]),
        .S({ir_out[6:4],\ir_reg_reg_n_0_[3] }));
  LUT6 #(
    .INIT(64'h00CC00CC00CC00A0)) 
    \res_reg[8]_i_11 
       (.I0(\pc_reg[31]_1 [5]),
        .I1(\pc_reg[31]_2 [5]),
        .I2(\prev_state_reg[3] ),
        .I3(\pc_reg[0]_1 ),
        .I4(Rsrc),
        .I5(\prev_state_reg[3]_0 ),
        .O(\res_reg[8]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFAFACCFC0A0ACC0C)) 
    \res_reg[8]_i_3 
       (.I0(\res_reg[8]_i_8_n_0 ),
        .I1(\res_reg[8]_i_9_n_0 ),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\FSM_sequential_state_reg[2]_0 [1]),
        .I5(\pc_reg[31]_5 [2]),
        .O(\pc_reg[8]_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[8]_i_5 
       (.I0(\pc_reg[31]_3 [3]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [8]),
        .O(\pc_reg[8]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[8]_i_6 
       (.I0(a_reg[8]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[8]),
        .O(op1[8]));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[8]_i_8 
       (.I0(\ALU_Instantiate/data3 [8]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [8]),
        .O(\res_reg[8]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h66666888)) 
    \res_reg[8]_i_9 
       (.I0(\FSM_sequential_state_reg[2]_0 [0]),
        .I1(op1[8]),
        .I2(\prev_state_reg[2]_0 ),
        .I3(\pc_reg[25]_0 [5]),
        .I4(\res_reg[8]_i_11_n_0 ),
        .O(\res_reg[8]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \res_reg[9] 
       (.CLR(AR),
        .D(\FSM_sequential_state_reg[2]_1 [9]),
        .G(\FSM_sequential_state_reg[0]_10 ),
        .GE(1'b1),
        .Q(res[9]));
  LUT6 #(
    .INIT(64'h00CC00CC00CC00A0)) 
    \res_reg[9]_i_10 
       (.I0(\pc_reg[31]_1 [6]),
        .I1(\pc_reg[31]_2 [6]),
        .I2(\prev_state_reg[3] ),
        .I3(\pc_reg[0]_1 ),
        .I4(Rsrc),
        .I5(\prev_state_reg[3]_0 ),
        .O(\res_reg[9]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFAFACCFC0A0ACC0C)) 
    \res_reg[9]_i_3 
       (.I0(\res_reg[9]_i_8_n_0 ),
        .I1(\res_reg[9]_i_9_n_0 ),
        .I2(\FSM_sequential_state_reg[2]_0 [2]),
        .I3(\FSM_sequential_state_reg[2]_0 [0]),
        .I4(\FSM_sequential_state_reg[2]_0 [1]),
        .I5(\pc_reg[31]_5 [3]),
        .O(\pc_reg[9]_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[9]_i_5 
       (.I0(\pc_reg[31]_3 [4]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [9]),
        .O(\pc_reg[9]_1 ));
  LUT6 #(
    .INIT(64'hFFFFFBEF00000820)) 
    \res_reg[9]_i_6 
       (.I0(a_reg[9]),
        .I1(out[0]),
        .I2(out[3]),
        .I3(out[2]),
        .I4(out[1]),
        .I5(pc[9]),
        .O(op1[9]));
  LUT3 #(
    .INIT(8'hB8)) 
    \res_reg[9]_i_8 
       (.I0(\ALU_Instantiate/data3 [9]),
        .I1(\FSM_sequential_state_reg[2]_0 [0]),
        .I2(\ALU_Instantiate/data2 [9]),
        .O(\res_reg[9]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'h66666888)) 
    \res_reg[9]_i_9 
       (.I0(\FSM_sequential_state_reg[2]_0 [0]),
        .I1(op1[9]),
        .I2(\prev_state_reg[2]_0 ),
        .I3(\pc_reg[25]_0 [6]),
        .I4(\res_reg[9]_i_10_n_0 ),
        .O(\res_reg[9]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_amount_reg[0] 
       (.CLR(\shift_amount_reg[4]_i_3_n_0 ),
        .D(\shift_amount_reg[0]_i_1_n_0 ),
        .G(\shift_amount_reg[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(shift_amount[0]));
  LUT6 #(
    .INIT(64'h020F00F0020F0000)) 
    \shift_amount_reg[0]_i_1 
       (.I0(ir_out[26]),
        .I1(ir_out[27]),
        .I2(ir_out[4]),
        .I3(ir_out[25]),
        .I4(ir_out[7]),
        .I5(x_reg[0]),
        .O(\shift_amount_reg[0]_i_1_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_amount_reg[1] 
       (.CLR(\shift_amount_reg[4]_i_3_n_0 ),
        .D(\shift_amount_reg[1]_i_1_n_0 ),
        .G(\shift_amount_reg[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(shift_amount[1]));
  LUT5 #(
    .INIT(32'hAAAEAAA2)) 
    \shift_amount_reg[1]_i_1 
       (.I0(\ir_reg_reg_n_0_[8] ),
        .I1(ir_out[4]),
        .I2(ir_out[25]),
        .I3(ir_out[7]),
        .I4(x_reg[1]),
        .O(\shift_amount_reg[1]_i_1_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_amount_reg[2] 
       (.CLR(\shift_amount_reg[4]_i_3_n_0 ),
        .D(\shift_amount_reg[2]_i_1_n_0 ),
        .G(\shift_amount_reg[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(shift_amount[2]));
  LUT5 #(
    .INIT(32'hAAAEAAA2)) 
    \shift_amount_reg[2]_i_1 
       (.I0(\ir_reg_reg_n_0_[9] ),
        .I1(ir_out[4]),
        .I2(ir_out[25]),
        .I3(ir_out[7]),
        .I4(x_reg[2]),
        .O(\shift_amount_reg[2]_i_1_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_amount_reg[3] 
       (.CLR(\shift_amount_reg[4]_i_3_n_0 ),
        .D(\shift_amount_reg[3]_i_1_n_0 ),
        .G(\shift_amount_reg[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(shift_amount[3]));
  LUT5 #(
    .INIT(32'hAAAEAAA2)) 
    \shift_amount_reg[3]_i_1 
       (.I0(\ir_reg_reg_n_0_[10] ),
        .I1(ir_out[4]),
        .I2(ir_out[25]),
        .I3(ir_out[7]),
        .I4(x_reg[3]),
        .O(\shift_amount_reg[3]_i_1_n_0 ));
  (* XILINX_LEGACY_PRIM = "LDC" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_amount_reg[4] 
       (.CLR(\shift_amount_reg[4]_i_3_n_0 ),
        .D(\shift_amount_reg[4]_i_1_n_0 ),
        .G(\shift_amount_reg[4]_i_2_n_0 ),
        .GE(1'b1),
        .Q(shift_amount[4]));
  LUT5 #(
    .INIT(32'hAAAEAAA2)) 
    \shift_amount_reg[4]_i_1 
       (.I0(\ir_reg_reg_n_0_[11] ),
        .I1(ir_out[4]),
        .I2(ir_out[25]),
        .I3(ir_out[7]),
        .I4(x_reg[4]),
        .O(\shift_amount_reg[4]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hDF)) 
    \shift_amount_reg[4]_i_2 
       (.I0(ir_out[4]),
        .I1(ir_out[25]),
        .I2(ir_out[7]),
        .O(\shift_amount_reg[4]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h02)) 
    \shift_amount_reg[4]_i_3 
       (.I0(ir_out[26]),
        .I1(ir_out[27]),
        .I2(ir_out[25]),
        .O(\shift_amount_reg[4]_i_3_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[0] 
       (.CLR(1'b0),
        .D(output_shift[0]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(shift_reg[0]));
  LUT6 #(
    .INIT(64'hC8C8C8C8C8CDC8C8)) 
    \shift_reg_reg[0]_i_1 
       (.I0(shift_type[0]),
        .I1(\shift_reg_reg[0]_i_2_n_0 ),
        .I2(shift_type[1]),
        .I3(shift_amount[1]),
        .I4(\shift_reg_reg[0]_i_4_n_0 ),
        .I5(shift_amount[0]),
        .O(output_shift[0]));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[0]_i_2 
       (.I0(\shift_reg_reg[1]_i_4_n_0 ),
        .I1(shift_amount[0]),
        .I2(\shift_reg_reg[31]_i_10_n_0 ),
        .O(\shift_reg_reg[0]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \shift_reg_reg[0]_i_3 
       (.I0(ir_out[25]),
        .I1(ir_out[7]),
        .O(shift_type[1]));
  LUT6 #(
    .INIT(64'h0000000000005140)) 
    \shift_reg_reg[0]_i_4 
       (.I0(shift_amount[2]),
        .I1(\shift_reg_reg[0]_i_5_n_0 ),
        .I2(Q[0]),
        .I3(\ir_reg_reg_n_0_[0] ),
        .I4(shift_amount[3]),
        .I5(shift_amount[4]),
        .O(\shift_reg_reg[0]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'h2D)) 
    \shift_reg_reg[0]_i_5 
       (.I0(ir_out[26]),
        .I1(ir_out[27]),
        .I2(ir_out[25]),
        .O(\shift_reg_reg[0]_i_5_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[10] 
       (.CLR(1'b0),
        .D(output_shift[10]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [7]));
  MUXF7 \shift_reg_reg[10]_i_1 
       (.I0(\shift_reg_reg[10]_i_2_n_0 ),
        .I1(\shift_reg_reg[10]_i_3_n_0 ),
        .O(output_shift[10]),
        .S(shift_type[0]));
  LUT4 #(
    .INIT(16'h6500)) 
    \shift_reg_reg[10]_i_10 
       (.I0(ir_out[25]),
        .I1(ir_out[27]),
        .I2(ir_out[26]),
        .I3(b_reg[26]),
        .O(\shift_reg_reg[10]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[10]_i_2 
       (.I0(\shift_reg_reg[11]_i_4_n_0 ),
        .I1(\shift_reg_reg[10]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[10]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[11]_i_5_n_0 ),
        .O(\shift_reg_reg[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[10]_i_3 
       (.I0(\shift_reg_reg[11]_i_6_n_0 ),
        .I1(\shift_reg_reg[10]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[11]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[10]_i_7_n_0 ),
        .O(\shift_reg_reg[10]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \shift_reg_reg[10]_i_4 
       (.I0(\shift_reg_reg[12]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[26]_i_9_n_0 ),
        .I3(shift_amount[4]),
        .I4(\shift_reg_reg[26]_i_11_n_0 ),
        .O(\shift_reg_reg[10]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \shift_reg_reg[10]_i_5 
       (.I0(\shift_reg_reg[10]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[12]_i_9_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[10]_i_6 
       (.I0(\shift_reg_reg[26]_i_12_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[26]_i_11_n_0 ),
        .I3(\shift_reg_reg[28]_i_12_n_0 ),
        .I4(\shift_reg_reg[28]_i_11_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[10]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[10]_i_7 
       (.I0(\shift_reg_reg[12]_i_10_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[10]_i_9_n_0 ),
        .O(\shift_reg_reg[10]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000D8FFD800)) 
    \shift_reg_reg[10]_i_8 
       (.I0(\shift_reg_reg[0]_i_5_n_0 ),
        .I1(Q[3]),
        .I2(\ir_reg_reg_n_0_[3] ),
        .I3(shift_amount[2]),
        .I4(\shift_reg_reg[31]_i_35_n_0 ),
        .I5(shift_amount[3]),
        .O(\shift_reg_reg[10]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \shift_reg_reg[10]_i_9 
       (.I0(\shift_reg_reg[30]_i_8_n_0 ),
        .I1(shift_amount[2]),
        .I2(\shift_reg_reg[10]_i_10_n_0 ),
        .I3(shift_amount[3]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[26]_i_11_n_0 ),
        .O(\shift_reg_reg[10]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[11] 
       (.CLR(1'b0),
        .D(output_shift[11]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [8]));
  MUXF7 \shift_reg_reg[11]_i_1 
       (.I0(\shift_reg_reg[11]_i_2_n_0 ),
        .I1(\shift_reg_reg[11]_i_3_n_0 ),
        .O(output_shift[11]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \shift_reg_reg[11]_i_10 
       (.I0(\shift_reg_reg[31]_i_7_n_0 ),
        .I1(shift_amount[2]),
        .I2(\shift_reg_reg[27]_i_17_n_0 ),
        .I3(shift_amount[3]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[27]_i_11_n_0 ),
        .O(\shift_reg_reg[11]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h00A0AACA)) 
    \shift_reg_reg[11]_i_11 
       (.I0(Q[8]),
        .I1(\ir_reg_reg_n_0_[8] ),
        .I2(ir_out[26]),
        .I3(ir_out[27]),
        .I4(ir_out[25]),
        .O(\shift_reg_reg[11]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[11]_i_2 
       (.I0(\shift_reg_reg[12]_i_4_n_0 ),
        .I1(\shift_reg_reg[11]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[11]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[12]_i_5_n_0 ),
        .O(\shift_reg_reg[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[11]_i_3 
       (.I0(\shift_reg_reg[12]_i_6_n_0 ),
        .I1(\shift_reg_reg[11]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[12]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[11]_i_7_n_0 ),
        .O(\shift_reg_reg[11]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[11]_i_4 
       (.I0(\shift_reg_reg[13]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[11]_i_8_n_0 ),
        .O(\shift_reg_reg[11]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \shift_reg_reg[11]_i_5 
       (.I0(\shift_reg_reg[11]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[13]_i_9_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[11]_i_6 
       (.I0(\shift_reg_reg[27]_i_12_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[27]_i_11_n_0 ),
        .I3(\shift_reg_reg[29]_i_11_n_0 ),
        .I4(\shift_reg_reg[29]_i_10_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[11]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[11]_i_7 
       (.I0(\shift_reg_reg[13]_i_10_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[11]_i_10_n_0 ),
        .O(\shift_reg_reg[11]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \shift_reg_reg[11]_i_8 
       (.I0(shift_amount[2]),
        .I1(\shift_reg_reg[31]_i_7_n_0 ),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[27]_i_17_n_0 ),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[27]_i_11_n_0 ),
        .O(\shift_reg_reg[11]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000000033E200E2)) 
    \shift_reg_reg[11]_i_9 
       (.I0(\shift_reg_reg[11]_i_11_n_0 ),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[3]_i_8_n_0 ),
        .I3(shift_amount[2]),
        .I4(\shift_reg_reg[31]_i_38_n_0 ),
        .I5(shift_amount[4]),
        .O(\shift_reg_reg[11]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[12] 
       (.CLR(1'b0),
        .D(output_shift[12]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [9]));
  MUXF7 \shift_reg_reg[12]_i_1 
       (.I0(\shift_reg_reg[12]_i_2_n_0 ),
        .I1(\shift_reg_reg[12]_i_3_n_0 ),
        .O(output_shift[12]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'h0040FFFF00400000)) 
    \shift_reg_reg[12]_i_10 
       (.I0(shift_amount[3]),
        .I1(\shift_reg_reg[0]_i_5_n_0 ),
        .I2(b_reg[28]),
        .I3(shift_amount[2]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[28]_i_11_n_0 ),
        .O(\shift_reg_reg[12]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[12]_i_2 
       (.I0(\shift_reg_reg[13]_i_4_n_0 ),
        .I1(\shift_reg_reg[12]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[12]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[13]_i_5_n_0 ),
        .O(\shift_reg_reg[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[12]_i_3 
       (.I0(\shift_reg_reg[13]_i_6_n_0 ),
        .I1(\shift_reg_reg[12]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[13]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[12]_i_7_n_0 ),
        .O(\shift_reg_reg[12]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[12]_i_4 
       (.I0(\shift_reg_reg[14]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[12]_i_8_n_0 ),
        .O(\shift_reg_reg[12]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \shift_reg_reg[12]_i_5 
       (.I0(\shift_reg_reg[12]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[14]_i_9_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[12]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[12]_i_6 
       (.I0(\shift_reg_reg[28]_i_12_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[28]_i_11_n_0 ),
        .I3(\shift_reg_reg[30]_i_11_n_0 ),
        .I4(\shift_reg_reg[30]_i_10_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[12]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[12]_i_7 
       (.I0(\shift_reg_reg[14]_i_10_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[12]_i_10_n_0 ),
        .O(\shift_reg_reg[12]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \shift_reg_reg[12]_i_8 
       (.I0(shift_amount[2]),
        .I1(\shift_reg_reg[31]_i_7_n_0 ),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[28]_i_13_n_0 ),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[28]_i_11_n_0 ),
        .O(\shift_reg_reg[12]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h00D8FFFF00D80000)) 
    \shift_reg_reg[12]_i_9 
       (.I0(\shift_reg_reg[0]_i_5_n_0 ),
        .I1(Q[5]),
        .I2(ir_out[5]),
        .I3(shift_amount[3]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[16]_i_9_n_0 ),
        .O(\shift_reg_reg[12]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[13] 
       (.CLR(1'b0),
        .D(output_shift[13]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [10]));
  MUXF7 \shift_reg_reg[13]_i_1 
       (.I0(\shift_reg_reg[13]_i_2_n_0 ),
        .I1(\shift_reg_reg[13]_i_3_n_0 ),
        .O(output_shift[13]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'h0040FFFF00400000)) 
    \shift_reg_reg[13]_i_10 
       (.I0(shift_amount[3]),
        .I1(\shift_reg_reg[0]_i_5_n_0 ),
        .I2(b_reg[29]),
        .I3(shift_amount[2]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[29]_i_10_n_0 ),
        .O(\shift_reg_reg[13]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[13]_i_2 
       (.I0(\shift_reg_reg[14]_i_4_n_0 ),
        .I1(\shift_reg_reg[13]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[13]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[14]_i_5_n_0 ),
        .O(\shift_reg_reg[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[13]_i_3 
       (.I0(\shift_reg_reg[14]_i_6_n_0 ),
        .I1(\shift_reg_reg[13]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[14]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[13]_i_7_n_0 ),
        .O(\shift_reg_reg[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    \shift_reg_reg[13]_i_4 
       (.I0(\shift_reg_reg[0]_i_5_n_0 ),
        .I1(b_reg[31]),
        .I2(shift_amount[4]),
        .I3(\shift_reg_reg[31]_i_23_n_0 ),
        .I4(shift_amount[1]),
        .I5(\shift_reg_reg[13]_i_8_n_0 ),
        .O(\shift_reg_reg[13]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \shift_reg_reg[13]_i_5 
       (.I0(\shift_reg_reg[13]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[15]_i_8_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[13]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \shift_reg_reg[13]_i_6 
       (.I0(\shift_reg_reg[31]_i_24_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[31]_i_23_n_0 ),
        .I3(\shift_reg_reg[29]_i_11_n_0 ),
        .I4(\shift_reg_reg[29]_i_10_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[13]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[13]_i_7 
       (.I0(\shift_reg_reg[15]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[13]_i_10_n_0 ),
        .O(\shift_reg_reg[13]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \shift_reg_reg[13]_i_8 
       (.I0(shift_amount[2]),
        .I1(\shift_reg_reg[31]_i_7_n_0 ),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[29]_i_8_n_0 ),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[29]_i_10_n_0 ),
        .O(\shift_reg_reg[13]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h00D8FFFF00D80000)) 
    \shift_reg_reg[13]_i_9 
       (.I0(\shift_reg_reg[0]_i_5_n_0 ),
        .I1(Q[6]),
        .I2(ir_out[6]),
        .I3(shift_amount[3]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[31]_i_29_n_0 ),
        .O(\shift_reg_reg[13]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[14] 
       (.CLR(1'b0),
        .D(output_shift[14]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [11]));
  MUXF7 \shift_reg_reg[14]_i_1 
       (.I0(\shift_reg_reg[14]_i_2_n_0 ),
        .I1(\shift_reg_reg[14]_i_3_n_0 ),
        .O(output_shift[14]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'h0040FFFF00400000)) 
    \shift_reg_reg[14]_i_10 
       (.I0(shift_amount[3]),
        .I1(\shift_reg_reg[0]_i_5_n_0 ),
        .I2(b_reg[30]),
        .I3(shift_amount[2]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[30]_i_10_n_0 ),
        .O(\shift_reg_reg[14]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[14]_i_2 
       (.I0(\shift_reg_reg[15]_i_4_n_0 ),
        .I1(\shift_reg_reg[14]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[14]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[15]_i_5_n_0 ),
        .O(\shift_reg_reg[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[14]_i_3 
       (.I0(\shift_reg_reg[15]_i_6_n_0 ),
        .I1(\shift_reg_reg[14]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[15]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[14]_i_7_n_0 ),
        .O(\shift_reg_reg[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    \shift_reg_reg[14]_i_4 
       (.I0(\shift_reg_reg[0]_i_5_n_0 ),
        .I1(b_reg[31]),
        .I2(shift_amount[4]),
        .I3(\shift_reg_reg[31]_i_19_n_0 ),
        .I4(shift_amount[1]),
        .I5(\shift_reg_reg[14]_i_8_n_0 ),
        .O(\shift_reg_reg[14]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \shift_reg_reg[14]_i_5 
       (.I0(\shift_reg_reg[14]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[16]_i_8_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[14]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \shift_reg_reg[14]_i_6 
       (.I0(\shift_reg_reg[31]_i_20_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[31]_i_19_n_0 ),
        .I3(\shift_reg_reg[30]_i_11_n_0 ),
        .I4(\shift_reg_reg[30]_i_10_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[14]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \shift_reg_reg[14]_i_7 
       (.I0(\shift_reg_reg[31]_i_19_n_0 ),
        .I1(shift_amount[4]),
        .I2(shift_amount[1]),
        .I3(\shift_reg_reg[14]_i_10_n_0 ),
        .O(\shift_reg_reg[14]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hCDC8FFFFCDC80000)) 
    \shift_reg_reg[14]_i_8 
       (.I0(shift_amount[2]),
        .I1(\shift_reg_reg[31]_i_7_n_0 ),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[30]_i_8_n_0 ),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[30]_i_10_n_0 ),
        .O(\shift_reg_reg[14]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h00D8FFFF00D80000)) 
    \shift_reg_reg[14]_i_9 
       (.I0(\shift_reg_reg[0]_i_5_n_0 ),
        .I1(Q[7]),
        .I2(ir_out[7]),
        .I3(shift_amount[3]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[31]_i_34_n_0 ),
        .O(\shift_reg_reg[14]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[15] 
       (.CLR(1'b0),
        .D(output_shift[15]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [12]));
  MUXF7 \shift_reg_reg[15]_i_1 
       (.I0(\shift_reg_reg[15]_i_2_n_0 ),
        .I1(\shift_reg_reg[15]_i_3_n_0 ),
        .O(output_shift[15]),
        .S(shift_type[0]));
  LUT5 #(
    .INIT(32'hCAFFCA00)) 
    \shift_reg_reg[15]_i_10 
       (.I0(\ir_reg_reg_n_0_[0] ),
        .I1(Q[0]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[11]_i_11_n_0 ),
        .O(\shift_reg_reg[15]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[15]_i_2 
       (.I0(\shift_reg_reg[16]_i_4_n_0 ),
        .I1(\shift_reg_reg[15]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[15]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[16]_i_5_n_0 ),
        .O(\shift_reg_reg[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[15]_i_3 
       (.I0(\shift_reg_reg[16]_i_6_n_0 ),
        .I1(\shift_reg_reg[15]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[16]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[15]_i_7_n_0 ),
        .O(\shift_reg_reg[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF000BBBBF0008888)) 
    \shift_reg_reg[15]_i_4 
       (.I0(\shift_reg_reg[31]_i_25_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[31]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[31]_i_23_n_0 ),
        .O(\shift_reg_reg[15]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \shift_reg_reg[15]_i_5 
       (.I0(\shift_reg_reg[15]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[31]_i_14_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[15]_i_6 
       (.I0(\shift_reg_reg[31]_i_24_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[31]_i_23_n_0 ),
        .I3(\shift_reg_reg[31]_i_26_n_0 ),
        .I4(\shift_reg_reg[31]_i_25_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[15]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \shift_reg_reg[15]_i_7 
       (.I0(\shift_reg_reg[31]_i_25_n_0 ),
        .I1(shift_amount[4]),
        .I2(shift_amount[1]),
        .I3(\shift_reg_reg[15]_i_9_n_0 ),
        .O(\shift_reg_reg[15]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    \shift_reg_reg[15]_i_8 
       (.I0(\shift_reg_reg[15]_i_10_n_0 ),
        .I1(shift_amount[2]),
        .I2(\shift_reg_reg[31]_i_38_n_0 ),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(Q[12]),
        .O(\shift_reg_reg[15]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0040FFFF00400000)) 
    \shift_reg_reg[15]_i_9 
       (.I0(shift_amount[3]),
        .I1(\shift_reg_reg[0]_i_5_n_0 ),
        .I2(b_reg[31]),
        .I3(shift_amount[2]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[31]_i_23_n_0 ),
        .O(\shift_reg_reg[15]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[16] 
       (.CLR(1'b0),
        .D(output_shift[16]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [13]));
  MUXF7 \shift_reg_reg[16]_i_1 
       (.I0(\shift_reg_reg[16]_i_2_n_0 ),
        .I1(\shift_reg_reg[16]_i_3_n_0 ),
        .O(output_shift[16]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[16]_i_2 
       (.I0(\shift_reg_reg[17]_i_4_n_0 ),
        .I1(\shift_reg_reg[16]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[16]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[17]_i_5_n_0 ),
        .O(\shift_reg_reg[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[16]_i_3 
       (.I0(\shift_reg_reg[17]_i_6_n_0 ),
        .I1(\shift_reg_reg[16]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[17]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[16]_i_7_n_0 ),
        .O(\shift_reg_reg[16]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF000BBBBF0008888)) 
    \shift_reg_reg[16]_i_4 
       (.I0(\shift_reg_reg[31]_i_21_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[31]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[31]_i_19_n_0 ),
        .O(\shift_reg_reg[16]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \shift_reg_reg[16]_i_5 
       (.I0(\shift_reg_reg[16]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[31]_i_17_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[16]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[16]_i_6 
       (.I0(\shift_reg_reg[31]_i_20_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[31]_i_19_n_0 ),
        .I3(\shift_reg_reg[31]_i_22_n_0 ),
        .I4(\shift_reg_reg[31]_i_21_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[16]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \shift_reg_reg[16]_i_7 
       (.I0(\shift_reg_reg[31]_i_21_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[31]_i_19_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[16]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    \shift_reg_reg[16]_i_8 
       (.I0(\shift_reg_reg[16]_i_9_n_0 ),
        .I1(shift_amount[2]),
        .I2(\shift_reg_reg[31]_i_45_n_0 ),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(Q[13]),
        .O(\shift_reg_reg[16]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hCAFFCA00)) 
    \shift_reg_reg[16]_i_9 
       (.I0(\ir_reg_reg_n_0_[1] ),
        .I1(Q[1]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[21]_i_14_n_0 ),
        .O(\shift_reg_reg[16]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[17] 
       (.CLR(1'b0),
        .D(output_shift[17]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [14]));
  MUXF7 \shift_reg_reg[17]_i_1 
       (.I0(\shift_reg_reg[17]_i_2_n_0 ),
        .I1(\shift_reg_reg[17]_i_3_n_0 ),
        .O(output_shift[17]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[17]_i_2 
       (.I0(\shift_reg_reg[18]_i_4_n_0 ),
        .I1(\shift_reg_reg[17]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[17]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[18]_i_5_n_0 ),
        .O(\shift_reg_reg[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[17]_i_3 
       (.I0(\shift_reg_reg[18]_i_6_n_0 ),
        .I1(\shift_reg_reg[17]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[18]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[17]_i_7_n_0 ),
        .O(\shift_reg_reg[17]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF000BBBBF0008888)) 
    \shift_reg_reg[17]_i_4 
       (.I0(\shift_reg_reg[19]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[31]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[31]_i_25_n_0 ),
        .O(\shift_reg_reg[17]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \shift_reg_reg[17]_i_5 
       (.I0(\shift_reg_reg[31]_i_14_n_0 ),
        .I1(shift_amount[4]),
        .I2(shift_amount[1]),
        .I3(\shift_reg_reg[19]_i_9_n_0 ),
        .O(\shift_reg_reg[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \shift_reg_reg[17]_i_6 
       (.I0(\shift_reg_reg[19]_i_10_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[19]_i_8_n_0 ),
        .I3(\shift_reg_reg[31]_i_26_n_0 ),
        .I4(\shift_reg_reg[31]_i_25_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[17]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \shift_reg_reg[17]_i_7 
       (.I0(\shift_reg_reg[19]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[31]_i_25_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[17]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[18] 
       (.CLR(1'b0),
        .D(output_shift[18]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [15]));
  MUXF7 \shift_reg_reg[18]_i_1 
       (.I0(\shift_reg_reg[18]_i_2_n_0 ),
        .I1(\shift_reg_reg[18]_i_3_n_0 ),
        .O(output_shift[18]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[18]_i_2 
       (.I0(\shift_reg_reg[19]_i_4_n_0 ),
        .I1(\shift_reg_reg[18]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[18]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[19]_i_5_n_0 ),
        .O(\shift_reg_reg[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[18]_i_3 
       (.I0(\shift_reg_reg[19]_i_6_n_0 ),
        .I1(\shift_reg_reg[18]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[19]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[18]_i_7_n_0 ),
        .O(\shift_reg_reg[18]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF000BBBBF0008888)) 
    \shift_reg_reg[18]_i_4 
       (.I0(\shift_reg_reg[20]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[31]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[31]_i_21_n_0 ),
        .O(\shift_reg_reg[18]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \shift_reg_reg[18]_i_5 
       (.I0(\shift_reg_reg[31]_i_17_n_0 ),
        .I1(shift_amount[4]),
        .I2(shift_amount[1]),
        .I3(\shift_reg_reg[20]_i_9_n_0 ),
        .O(\shift_reg_reg[18]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \shift_reg_reg[18]_i_6 
       (.I0(\shift_reg_reg[20]_i_10_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[20]_i_11_n_0 ),
        .I3(\shift_reg_reg[31]_i_22_n_0 ),
        .I4(\shift_reg_reg[31]_i_21_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[18]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \shift_reg_reg[18]_i_7 
       (.I0(\shift_reg_reg[20]_i_12_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[31]_i_21_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[18]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[19] 
       (.CLR(1'b0),
        .D(output_shift[19]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [16]));
  MUXF7 \shift_reg_reg[19]_i_1 
       (.I0(\shift_reg_reg[19]_i_2_n_0 ),
        .I1(\shift_reg_reg[19]_i_3_n_0 ),
        .O(output_shift[19]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    \shift_reg_reg[19]_i_10 
       (.I0(\shift_reg_reg[0]_i_5_n_0 ),
        .I1(Q[15]),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[31]_i_35_n_0 ),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[19]_i_12_n_0 ),
        .O(\shift_reg_reg[19]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hC0AFAFC0C0A0A0C0)) 
    \shift_reg_reg[19]_i_11 
       (.I0(Q[4]),
        .I1(ir_out[4]),
        .I2(shift_amount[3]),
        .I3(ir_out[25]),
        .I4(\shift_reg_reg[19]_i_13_n_0 ),
        .I5(Q[12]),
        .O(\shift_reg_reg[19]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'hBB88B8B8)) 
    \shift_reg_reg[19]_i_12 
       (.I0(\shift_reg_reg[31]_i_43_n_0 ),
        .I1(shift_amount[3]),
        .I2(\ir_reg_reg_n_0_[3] ),
        .I3(Q[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .O(\shift_reg_reg[19]_i_12_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \shift_reg_reg[19]_i_13 
       (.I0(ir_out[27]),
        .I1(ir_out[26]),
        .O(\shift_reg_reg[19]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[19]_i_2 
       (.I0(\shift_reg_reg[20]_i_4_n_0 ),
        .I1(\shift_reg_reg[19]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[19]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[20]_i_5_n_0 ),
        .O(\shift_reg_reg[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[19]_i_3 
       (.I0(\shift_reg_reg[20]_i_6_n_0 ),
        .I1(\shift_reg_reg[19]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[20]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[19]_i_7_n_0 ),
        .O(\shift_reg_reg[19]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF000BBBBF0008888)) 
    \shift_reg_reg[19]_i_4 
       (.I0(\shift_reg_reg[21]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[31]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[19]_i_8_n_0 ),
        .O(\shift_reg_reg[19]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[19]_i_5 
       (.I0(\shift_reg_reg[19]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[21]_i_9_n_0 ),
        .O(\shift_reg_reg[19]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[19]_i_6 
       (.I0(\shift_reg_reg[19]_i_10_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[19]_i_8_n_0 ),
        .I3(\shift_reg_reg[21]_i_10_n_0 ),
        .I4(\shift_reg_reg[21]_i_11_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[19]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \shift_reg_reg[19]_i_7 
       (.I0(\shift_reg_reg[21]_i_12_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[19]_i_8_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[19]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hB8BB8888B8888888)) 
    \shift_reg_reg[19]_i_8 
       (.I0(\shift_reg_reg[23]_i_15_n_0 ),
        .I1(shift_amount[2]),
        .I2(b_reg[27]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[19]),
        .O(\shift_reg_reg[19]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0F004F4F0F004040)) 
    \shift_reg_reg[19]_i_9 
       (.I0(shift_amount[3]),
        .I1(\shift_reg_reg[3]_i_8_n_0 ),
        .I2(shift_amount[4]),
        .I3(\shift_reg_reg[19]_i_11_n_0 ),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[23]_i_13_n_0 ),
        .O(\shift_reg_reg[19]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[1] 
       (.CLR(1'b0),
        .D(output_shift[1]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(shift_reg[1]));
  MUXF7 \shift_reg_reg[1]_i_1 
       (.I0(\shift_reg_reg[1]_i_2_n_0 ),
        .I1(\shift_reg_reg[1]_i_3_n_0 ),
        .O(output_shift[1]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[1]_i_2 
       (.I0(\shift_reg_reg[2]_i_4_n_0 ),
        .I1(\shift_reg_reg[1]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[1]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[2]_i_5_n_0 ),
        .O(\shift_reg_reg[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hABA8FFFFABA80000)) 
    \shift_reg_reg[1]_i_3 
       (.I0(\shift_reg_reg[2]_i_6_n_0 ),
        .I1(ir_out[25]),
        .I2(ir_out[7]),
        .I3(\shift_reg_reg[2]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[1]_i_4_n_0 ),
        .O(\shift_reg_reg[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \shift_reg_reg[1]_i_4 
       (.I0(\shift_reg_reg[19]_i_8_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[19]_i_10_n_0 ),
        .I3(\shift_reg_reg[31]_i_25_n_0 ),
        .I4(\shift_reg_reg[31]_i_26_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[1]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00000010)) 
    \shift_reg_reg[1]_i_5 
       (.I0(shift_amount[4]),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[3]_i_8_n_0 ),
        .I3(shift_amount[2]),
        .I4(shift_amount[1]),
        .O(\shift_reg_reg[1]_i_5_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[20] 
       (.CLR(1'b0),
        .D(output_shift[20]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [17]));
  MUXF7 \shift_reg_reg[20]_i_1 
       (.I0(\shift_reg_reg[20]_i_2_n_0 ),
        .I1(\shift_reg_reg[20]_i_3_n_0 ),
        .O(output_shift[20]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'hB888BBBBB8888888)) 
    \shift_reg_reg[20]_i_10 
       (.I0(\shift_reg_reg[24]_i_14_n_0 ),
        .I1(shift_amount[2]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(Q[12]),
        .I4(shift_amount[3]),
        .I5(\shift_reg_reg[31]_i_38_n_0 ),
        .O(\shift_reg_reg[20]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    \shift_reg_reg[20]_i_11 
       (.I0(\shift_reg_reg[3]_i_8_n_0 ),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[24]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[31]_i_37_n_0 ),
        .O(\shift_reg_reg[20]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h30BB000030880000)) 
    \shift_reg_reg[20]_i_12 
       (.I0(b_reg[24]),
        .I1(shift_amount[2]),
        .I2(b_reg[28]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[20]),
        .O(\shift_reg_reg[20]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hCFA0C0A0)) 
    \shift_reg_reg[20]_i_13 
       (.I0(ir_out[5]),
        .I1(Q[5]),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[0]_i_5_n_0 ),
        .I4(Q[13]),
        .O(\shift_reg_reg[20]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[20]_i_2 
       (.I0(\shift_reg_reg[21]_i_4_n_0 ),
        .I1(\shift_reg_reg[20]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[20]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[21]_i_5_n_0 ),
        .O(\shift_reg_reg[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[20]_i_3 
       (.I0(\shift_reg_reg[21]_i_6_n_0 ),
        .I1(\shift_reg_reg[20]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[21]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[20]_i_7_n_0 ),
        .O(\shift_reg_reg[20]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF000BBBBF0008888)) 
    \shift_reg_reg[20]_i_4 
       (.I0(\shift_reg_reg[22]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[31]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[20]_i_8_n_0 ),
        .O(\shift_reg_reg[20]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[20]_i_5 
       (.I0(\shift_reg_reg[20]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[22]_i_9_n_0 ),
        .O(\shift_reg_reg[20]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[20]_i_6 
       (.I0(\shift_reg_reg[20]_i_10_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[20]_i_11_n_0 ),
        .I3(\shift_reg_reg[22]_i_10_n_0 ),
        .I4(\shift_reg_reg[22]_i_11_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[20]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \shift_reg_reg[20]_i_7 
       (.I0(\shift_reg_reg[22]_i_12_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[20]_i_12_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[20]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hB080FFFFB0800000)) 
    \shift_reg_reg[20]_i_8 
       (.I0(b_reg[31]),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[24]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[31]_i_37_n_0 ),
        .O(\shift_reg_reg[20]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0F004F4F0F004040)) 
    \shift_reg_reg[20]_i_9 
       (.I0(shift_amount[3]),
        .I1(\shift_reg_reg[4]_i_8_n_0 ),
        .I2(shift_amount[4]),
        .I3(\shift_reg_reg[20]_i_13_n_0 ),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[24]_i_13_n_0 ),
        .O(\shift_reg_reg[20]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[21] 
       (.CLR(1'b0),
        .D(output_shift[21]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [18]));
  MUXF7 \shift_reg_reg[21]_i_1 
       (.I0(\shift_reg_reg[21]_i_2_n_0 ),
        .I1(\shift_reg_reg[21]_i_3_n_0 ),
        .O(output_shift[21]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    \shift_reg_reg[21]_i_10 
       (.I0(\shift_reg_reg[0]_i_5_n_0 ),
        .I1(b_reg[17]),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[21]_i_14_n_0 ),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[21]_i_15_n_0 ),
        .O(\shift_reg_reg[21]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    \shift_reg_reg[21]_i_11 
       (.I0(\shift_reg_reg[4]_i_8_n_0 ),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[25]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[31]_i_44_n_0 ),
        .O(\shift_reg_reg[21]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h30BB000030880000)) 
    \shift_reg_reg[21]_i_12 
       (.I0(b_reg[25]),
        .I1(shift_amount[2]),
        .I2(b_reg[29]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[21]),
        .O(\shift_reg_reg[21]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hCFA0C0A0)) 
    \shift_reg_reg[21]_i_13 
       (.I0(ir_out[6]),
        .I1(Q[6]),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[0]_i_5_n_0 ),
        .I4(Q[14]),
        .O(\shift_reg_reg[21]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h00A0AACA)) 
    \shift_reg_reg[21]_i_14 
       (.I0(Q[9]),
        .I1(\ir_reg_reg_n_0_[9] ),
        .I2(ir_out[26]),
        .I3(ir_out[27]),
        .I4(ir_out[25]),
        .O(\shift_reg_reg[21]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'hBB883030)) 
    \shift_reg_reg[21]_i_15 
       (.I0(Q[13]),
        .I1(shift_amount[3]),
        .I2(ir_out[5]),
        .I3(Q[5]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .O(\shift_reg_reg[21]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[21]_i_2 
       (.I0(\shift_reg_reg[22]_i_4_n_0 ),
        .I1(\shift_reg_reg[21]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[21]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[22]_i_5_n_0 ),
        .O(\shift_reg_reg[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[21]_i_3 
       (.I0(\shift_reg_reg[22]_i_6_n_0 ),
        .I1(\shift_reg_reg[21]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[22]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[21]_i_7_n_0 ),
        .O(\shift_reg_reg[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF000BBBBF0008888)) 
    \shift_reg_reg[21]_i_4 
       (.I0(\shift_reg_reg[23]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[31]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[21]_i_8_n_0 ),
        .O(\shift_reg_reg[21]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[21]_i_5 
       (.I0(\shift_reg_reg[21]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[23]_i_9_n_0 ),
        .O(\shift_reg_reg[21]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \shift_reg_reg[21]_i_6 
       (.I0(\shift_reg_reg[23]_i_10_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[23]_i_11_n_0 ),
        .I3(\shift_reg_reg[21]_i_10_n_0 ),
        .I4(\shift_reg_reg[21]_i_11_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[21]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \shift_reg_reg[21]_i_7 
       (.I0(\shift_reg_reg[23]_i_12_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[21]_i_12_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[21]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hB080FFFFB0800000)) 
    \shift_reg_reg[21]_i_8 
       (.I0(b_reg[31]),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[25]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[31]_i_44_n_0 ),
        .O(\shift_reg_reg[21]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0F004F4F0F004040)) 
    \shift_reg_reg[21]_i_9 
       (.I0(shift_amount[3]),
        .I1(\shift_reg_reg[5]_i_8_n_0 ),
        .I2(shift_amount[4]),
        .I3(\shift_reg_reg[21]_i_13_n_0 ),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[25]_i_14_n_0 ),
        .O(\shift_reg_reg[21]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[22] 
       (.CLR(1'b0),
        .D(output_shift[22]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [19]));
  MUXF7 \shift_reg_reg[22]_i_1 
       (.I0(\shift_reg_reg[22]_i_2_n_0 ),
        .I1(\shift_reg_reg[22]_i_3_n_0 ),
        .O(output_shift[22]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    \shift_reg_reg[22]_i_10 
       (.I0(\shift_reg_reg[0]_i_5_n_0 ),
        .I1(b_reg[18]),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[22]_i_14_n_0 ),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[22]_i_15_n_0 ),
        .O(\shift_reg_reg[22]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    \shift_reg_reg[22]_i_11 
       (.I0(\shift_reg_reg[5]_i_8_n_0 ),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[26]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[31]_i_40_n_0 ),
        .O(\shift_reg_reg[22]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h30BB000030880000)) 
    \shift_reg_reg[22]_i_12 
       (.I0(b_reg[26]),
        .I1(shift_amount[2]),
        .I2(b_reg[30]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[22]),
        .O(\shift_reg_reg[22]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hCFA0C0A0)) 
    \shift_reg_reg[22]_i_13 
       (.I0(ir_out[7]),
        .I1(Q[7]),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[0]_i_5_n_0 ),
        .I4(Q[15]),
        .O(\shift_reg_reg[22]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h00A0AACA)) 
    \shift_reg_reg[22]_i_14 
       (.I0(Q[10]),
        .I1(\ir_reg_reg_n_0_[10] ),
        .I2(ir_out[26]),
        .I3(ir_out[27]),
        .I4(ir_out[25]),
        .O(\shift_reg_reg[22]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'hBB883030)) 
    \shift_reg_reg[22]_i_15 
       (.I0(Q[14]),
        .I1(shift_amount[3]),
        .I2(ir_out[6]),
        .I3(Q[6]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .O(\shift_reg_reg[22]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[22]_i_2 
       (.I0(\shift_reg_reg[23]_i_4_n_0 ),
        .I1(\shift_reg_reg[22]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[22]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[23]_i_5_n_0 ),
        .O(\shift_reg_reg[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[22]_i_3 
       (.I0(\shift_reg_reg[23]_i_6_n_0 ),
        .I1(\shift_reg_reg[22]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[23]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[22]_i_7_n_0 ),
        .O(\shift_reg_reg[22]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF000BBBBF0008888)) 
    \shift_reg_reg[22]_i_4 
       (.I0(\shift_reg_reg[24]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[31]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[22]_i_8_n_0 ),
        .O(\shift_reg_reg[22]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[22]_i_5 
       (.I0(\shift_reg_reg[22]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[24]_i_9_n_0 ),
        .O(\shift_reg_reg[22]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \shift_reg_reg[22]_i_6 
       (.I0(\shift_reg_reg[24]_i_10_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[24]_i_11_n_0 ),
        .I3(\shift_reg_reg[22]_i_10_n_0 ),
        .I4(\shift_reg_reg[22]_i_11_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[22]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \shift_reg_reg[22]_i_7 
       (.I0(\shift_reg_reg[24]_i_12_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[22]_i_12_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[22]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hB080FFFFB0800000)) 
    \shift_reg_reg[22]_i_8 
       (.I0(b_reg[31]),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[26]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[31]_i_40_n_0 ),
        .O(\shift_reg_reg[22]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0F004F4F0F004040)) 
    \shift_reg_reg[22]_i_9 
       (.I0(shift_amount[3]),
        .I1(\shift_reg_reg[6]_i_8_n_0 ),
        .I2(shift_amount[4]),
        .I3(\shift_reg_reg[22]_i_13_n_0 ),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[26]_i_14_n_0 ),
        .O(\shift_reg_reg[22]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[23] 
       (.CLR(1'b0),
        .D(output_shift[23]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [20]));
  MUXF7 \shift_reg_reg[23]_i_1 
       (.I0(\shift_reg_reg[23]_i_2_n_0 ),
        .I1(\shift_reg_reg[23]_i_3_n_0 ),
        .O(output_shift[23]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    \shift_reg_reg[23]_i_10 
       (.I0(\shift_reg_reg[0]_i_5_n_0 ),
        .I1(b_reg[19]),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[31]_i_43_n_0 ),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[23]_i_14_n_0 ),
        .O(\shift_reg_reg[23]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    \shift_reg_reg[23]_i_11 
       (.I0(\shift_reg_reg[6]_i_8_n_0 ),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[27]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[23]_i_15_n_0 ),
        .O(\shift_reg_reg[23]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h30BB000030880000)) 
    \shift_reg_reg[23]_i_12 
       (.I0(b_reg[27]),
        .I1(shift_amount[2]),
        .I2(b_reg[31]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[23]),
        .O(\shift_reg_reg[23]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hEAFFC000EA00C000)) 
    \shift_reg_reg[23]_i_13 
       (.I0(Q[8]),
        .I1(\ir_reg_reg_n_0_[8] ),
        .I2(\shift_amount_reg[4]_i_3_n_0 ),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[16]),
        .O(\shift_reg_reg[23]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'hBB883030)) 
    \shift_reg_reg[23]_i_14 
       (.I0(Q[15]),
        .I1(shift_amount[3]),
        .I2(ir_out[7]),
        .I3(Q[7]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .O(\shift_reg_reg[23]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[23]_i_15 
       (.I0(b_reg[31]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(b_reg[23]),
        .O(\shift_reg_reg[23]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[23]_i_2 
       (.I0(\shift_reg_reg[24]_i_4_n_0 ),
        .I1(\shift_reg_reg[23]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[23]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[24]_i_5_n_0 ),
        .O(\shift_reg_reg[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[23]_i_3 
       (.I0(\shift_reg_reg[24]_i_6_n_0 ),
        .I1(\shift_reg_reg[23]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[24]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[23]_i_7_n_0 ),
        .O(\shift_reg_reg[23]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF000BBBBF0008888)) 
    \shift_reg_reg[23]_i_4 
       (.I0(\shift_reg_reg[25]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[31]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[23]_i_8_n_0 ),
        .O(\shift_reg_reg[23]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[23]_i_5 
       (.I0(\shift_reg_reg[23]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[25]_i_10_n_0 ),
        .O(\shift_reg_reg[23]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[23]_i_6 
       (.I0(\shift_reg_reg[23]_i_10_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[23]_i_11_n_0 ),
        .I3(\shift_reg_reg[25]_i_11_n_0 ),
        .I4(\shift_reg_reg[25]_i_12_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[23]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h88B8)) 
    \shift_reg_reg[23]_i_7 
       (.I0(\shift_reg_reg[25]_i_13_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[23]_i_12_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[23]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hF0BB0000F0880000)) 
    \shift_reg_reg[23]_i_8 
       (.I0(b_reg[27]),
        .I1(shift_amount[2]),
        .I2(b_reg[31]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[23]),
        .O(\shift_reg_reg[23]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \shift_reg_reg[23]_i_9 
       (.I0(\shift_reg_reg[7]_i_8_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[23]_i_13_n_0 ),
        .I3(shift_amount[2]),
        .I4(\shift_reg_reg[27]_i_15_n_0 ),
        .O(\shift_reg_reg[23]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[24] 
       (.CLR(1'b0),
        .D(output_shift[24]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [21]));
  MUXF7 \shift_reg_reg[24]_i_1 
       (.I0(\shift_reg_reg[24]_i_2_n_0 ),
        .I1(\shift_reg_reg[24]_i_3_n_0 ),
        .O(output_shift[24]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'hB080FFFFB0800000)) 
    \shift_reg_reg[24]_i_10 
       (.I0(b_reg[20]),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(Q[12]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[24]_i_14_n_0 ),
        .O(\shift_reg_reg[24]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    \shift_reg_reg[24]_i_11 
       (.I0(\shift_reg_reg[31]_i_38_n_0 ),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[28]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[24]_i_15_n_0 ),
        .O(\shift_reg_reg[24]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h0000000044400040)) 
    \shift_reg_reg[24]_i_12 
       (.I0(shift_amount[3]),
        .I1(\shift_reg_reg[0]_i_5_n_0 ),
        .I2(b_reg[24]),
        .I3(shift_amount[2]),
        .I4(b_reg[28]),
        .I5(shift_amount[4]),
        .O(\shift_reg_reg[24]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hEAFFC000EA00C000)) 
    \shift_reg_reg[24]_i_13 
       (.I0(Q[9]),
        .I1(\ir_reg_reg_n_0_[9] ),
        .I2(\shift_amount_reg[4]_i_3_n_0 ),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[17]),
        .O(\shift_reg_reg[24]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hBB33B800B800B800)) 
    \shift_reg_reg[24]_i_14 
       (.I0(b_reg[16]),
        .I1(shift_amount[3]),
        .I2(Q[8]),
        .I3(\shift_reg_reg[0]_i_5_n_0 ),
        .I4(\ir_reg_reg_n_0_[8] ),
        .I5(\shift_amount_reg[4]_i_3_n_0 ),
        .O(\shift_reg_reg[24]_i_14_n_0 ));
  LUT5 #(
    .INIT(32'hCFA0C0A0)) 
    \shift_reg_reg[24]_i_15 
       (.I0(\ir_reg_reg_n_0_[0] ),
        .I1(Q[0]),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[0]_i_5_n_0 ),
        .I4(b_reg[24]),
        .O(\shift_reg_reg[24]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[24]_i_2 
       (.I0(\shift_reg_reg[25]_i_4_n_0 ),
        .I1(\shift_reg_reg[24]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[24]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[25]_i_5_n_0 ),
        .O(\shift_reg_reg[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[24]_i_3 
       (.I0(\shift_reg_reg[25]_i_6_n_0 ),
        .I1(\shift_reg_reg[24]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[25]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[24]_i_7_n_0 ),
        .O(\shift_reg_reg[24]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF000BBBBF0008888)) 
    \shift_reg_reg[24]_i_4 
       (.I0(\shift_reg_reg[26]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[31]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[24]_i_8_n_0 ),
        .O(\shift_reg_reg[24]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[24]_i_5 
       (.I0(\shift_reg_reg[24]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[26]_i_10_n_0 ),
        .O(\shift_reg_reg[24]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[24]_i_6 
       (.I0(\shift_reg_reg[24]_i_10_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[24]_i_11_n_0 ),
        .I3(\shift_reg_reg[26]_i_11_n_0 ),
        .I4(\shift_reg_reg[26]_i_12_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[24]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[24]_i_7 
       (.I0(\shift_reg_reg[26]_i_13_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[24]_i_12_n_0 ),
        .O(\shift_reg_reg[24]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hF0BB0000F0880000)) 
    \shift_reg_reg[24]_i_8 
       (.I0(b_reg[28]),
        .I1(shift_amount[2]),
        .I2(b_reg[31]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[24]),
        .O(\shift_reg_reg[24]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \shift_reg_reg[24]_i_9 
       (.I0(\shift_reg_reg[8]_i_8_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[24]_i_13_n_0 ),
        .I3(shift_amount[2]),
        .I4(\shift_reg_reg[28]_i_14_n_0 ),
        .O(\shift_reg_reg[24]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[25] 
       (.CLR(1'b0),
        .D(output_shift[25]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [22]));
  MUXF7 \shift_reg_reg[25]_i_1 
       (.I0(\shift_reg_reg[25]_i_2_n_0 ),
        .I1(\shift_reg_reg[25]_i_3_n_0 ),
        .O(output_shift[25]),
        .S(shift_type[0]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \shift_reg_reg[25]_i_10 
       (.I0(\shift_reg_reg[9]_i_8_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[25]_i_14_n_0 ),
        .I3(shift_amount[2]),
        .I4(\shift_reg_reg[29]_i_12_n_0 ),
        .O(\shift_reg_reg[25]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hB080FFFFB0800000)) 
    \shift_reg_reg[25]_i_11 
       (.I0(b_reg[21]),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(Q[13]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[25]_i_15_n_0 ),
        .O(\shift_reg_reg[25]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    \shift_reg_reg[25]_i_12 
       (.I0(\shift_reg_reg[31]_i_45_n_0 ),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[29]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[25]_i_16_n_0 ),
        .O(\shift_reg_reg[25]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0000000044400040)) 
    \shift_reg_reg[25]_i_13 
       (.I0(shift_amount[3]),
        .I1(\shift_reg_reg[0]_i_5_n_0 ),
        .I2(b_reg[25]),
        .I3(shift_amount[2]),
        .I4(b_reg[29]),
        .I5(shift_amount[4]),
        .O(\shift_reg_reg[25]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hEAFFC000EA00C000)) 
    \shift_reg_reg[25]_i_14 
       (.I0(Q[10]),
        .I1(\ir_reg_reg_n_0_[10] ),
        .I2(\shift_amount_reg[4]_i_3_n_0 ),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[18]),
        .O(\shift_reg_reg[25]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hBB33B800B800B800)) 
    \shift_reg_reg[25]_i_15 
       (.I0(b_reg[17]),
        .I1(shift_amount[3]),
        .I2(Q[9]),
        .I3(\shift_reg_reg[0]_i_5_n_0 ),
        .I4(\ir_reg_reg_n_0_[9] ),
        .I5(\shift_amount_reg[4]_i_3_n_0 ),
        .O(\shift_reg_reg[25]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hCFA0C0A0)) 
    \shift_reg_reg[25]_i_16 
       (.I0(\ir_reg_reg_n_0_[1] ),
        .I1(Q[1]),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[0]_i_5_n_0 ),
        .I4(b_reg[25]),
        .O(\shift_reg_reg[25]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[25]_i_2 
       (.I0(\shift_reg_reg[26]_i_4_n_0 ),
        .I1(\shift_reg_reg[25]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[25]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[26]_i_5_n_0 ),
        .O(\shift_reg_reg[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[25]_i_3 
       (.I0(\shift_reg_reg[26]_i_6_n_0 ),
        .I1(\shift_reg_reg[25]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[26]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[25]_i_7_n_0 ),
        .O(\shift_reg_reg[25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF00EF4FFF00E040)) 
    \shift_reg_reg[25]_i_4 
       (.I0(shift_amount[2]),
        .I1(\shift_reg_reg[25]_i_8_n_0 ),
        .I2(shift_amount[1]),
        .I3(\shift_reg_reg[31]_i_7_n_0 ),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[25]_i_9_n_0 ),
        .O(\shift_reg_reg[25]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[25]_i_5 
       (.I0(\shift_reg_reg[25]_i_10_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[27]_i_10_n_0 ),
        .O(\shift_reg_reg[25]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[25]_i_6 
       (.I0(\shift_reg_reg[25]_i_11_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[25]_i_12_n_0 ),
        .I3(\shift_reg_reg[27]_i_11_n_0 ),
        .I4(\shift_reg_reg[27]_i_12_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[25]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[25]_i_7 
       (.I0(\shift_reg_reg[27]_i_13_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[25]_i_13_n_0 ),
        .O(\shift_reg_reg[25]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[25]_i_8 
       (.I0(b_reg[31]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(b_reg[27]),
        .O(\shift_reg_reg[25]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hF0BB0000F0880000)) 
    \shift_reg_reg[25]_i_9 
       (.I0(b_reg[29]),
        .I1(shift_amount[2]),
        .I2(b_reg[31]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[25]),
        .O(\shift_reg_reg[25]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[26] 
       (.CLR(1'b0),
        .D(output_shift[26]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [23]));
  MUXF7 \shift_reg_reg[26]_i_1 
       (.I0(\shift_reg_reg[26]_i_2_n_0 ),
        .I1(\shift_reg_reg[26]_i_3_n_0 ),
        .O(output_shift[26]),
        .S(shift_type[0]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \shift_reg_reg[26]_i_10 
       (.I0(\shift_reg_reg[10]_i_8_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[26]_i_14_n_0 ),
        .I3(shift_amount[2]),
        .I4(\shift_reg_reg[30]_i_12_n_0 ),
        .O(\shift_reg_reg[26]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hB080FFFFB0800000)) 
    \shift_reg_reg[26]_i_11 
       (.I0(b_reg[22]),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(Q[14]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[26]_i_15_n_0 ),
        .O(\shift_reg_reg[26]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hB888FFFFB8880000)) 
    \shift_reg_reg[26]_i_12 
       (.I0(\shift_reg_reg[31]_i_30_n_0 ),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[30]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[26]_i_16_n_0 ),
        .O(\shift_reg_reg[26]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0000000044400040)) 
    \shift_reg_reg[26]_i_13 
       (.I0(shift_amount[3]),
        .I1(\shift_reg_reg[0]_i_5_n_0 ),
        .I2(b_reg[26]),
        .I3(shift_amount[2]),
        .I4(b_reg[30]),
        .I5(shift_amount[4]),
        .O(\shift_reg_reg[26]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hEAFFC000EA00C000)) 
    \shift_reg_reg[26]_i_14 
       (.I0(Q[11]),
        .I1(\ir_reg_reg_n_0_[11] ),
        .I2(\shift_amount_reg[4]_i_3_n_0 ),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[19]),
        .O(\shift_reg_reg[26]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hBB33B800B800B800)) 
    \shift_reg_reg[26]_i_15 
       (.I0(b_reg[18]),
        .I1(shift_amount[3]),
        .I2(Q[10]),
        .I3(\shift_reg_reg[0]_i_5_n_0 ),
        .I4(\ir_reg_reg_n_0_[10] ),
        .I5(\shift_amount_reg[4]_i_3_n_0 ),
        .O(\shift_reg_reg[26]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hCFA0C0A0)) 
    \shift_reg_reg[26]_i_16 
       (.I0(\ir_reg_reg_n_0_[2] ),
        .I1(Q[2]),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[0]_i_5_n_0 ),
        .I4(b_reg[26]),
        .O(\shift_reg_reg[26]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[26]_i_2 
       (.I0(\shift_reg_reg[27]_i_4_n_0 ),
        .I1(\shift_reg_reg[26]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[26]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[27]_i_5_n_0 ),
        .O(\shift_reg_reg[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[26]_i_3 
       (.I0(\shift_reg_reg[27]_i_6_n_0 ),
        .I1(\shift_reg_reg[26]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[27]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[26]_i_7_n_0 ),
        .O(\shift_reg_reg[26]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF00EF4FFF00E040)) 
    \shift_reg_reg[26]_i_4 
       (.I0(shift_amount[2]),
        .I1(\shift_reg_reg[26]_i_8_n_0 ),
        .I2(shift_amount[1]),
        .I3(\shift_reg_reg[31]_i_7_n_0 ),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[26]_i_9_n_0 ),
        .O(\shift_reg_reg[26]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[26]_i_5 
       (.I0(\shift_reg_reg[26]_i_10_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[28]_i_10_n_0 ),
        .O(\shift_reg_reg[26]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[26]_i_6 
       (.I0(\shift_reg_reg[26]_i_11_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[26]_i_12_n_0 ),
        .I3(\shift_reg_reg[28]_i_11_n_0 ),
        .I4(\shift_reg_reg[28]_i_12_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[26]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \shift_reg_reg[26]_i_7 
       (.I0(shift_amount[2]),
        .I1(\shift_reg_reg[28]_i_13_n_0 ),
        .I2(shift_amount[3]),
        .I3(shift_amount[4]),
        .I4(shift_amount[1]),
        .I5(\shift_reg_reg[26]_i_13_n_0 ),
        .O(\shift_reg_reg[26]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[26]_i_8 
       (.I0(b_reg[31]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(b_reg[28]),
        .O(\shift_reg_reg[26]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hF0BB0000F0880000)) 
    \shift_reg_reg[26]_i_9 
       (.I0(b_reg[30]),
        .I1(shift_amount[2]),
        .I2(b_reg[31]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[26]),
        .O(\shift_reg_reg[26]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[27] 
       (.CLR(1'b0),
        .D(output_shift[27]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [24]));
  MUXF7 \shift_reg_reg[27]_i_1 
       (.I0(\shift_reg_reg[27]_i_2_n_0 ),
        .I1(\shift_reg_reg[27]_i_3_n_0 ),
        .O(output_shift[27]),
        .S(shift_type[0]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \shift_reg_reg[27]_i_10 
       (.I0(\shift_reg_reg[27]_i_14_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[27]_i_15_n_0 ),
        .I3(shift_amount[2]),
        .I4(\shift_reg_reg[31]_i_27_n_0 ),
        .O(\shift_reg_reg[27]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hB080FFFFB0800000)) 
    \shift_reg_reg[27]_i_11 
       (.I0(b_reg[23]),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(Q[15]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[27]_i_16_n_0 ),
        .O(\shift_reg_reg[27]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[27]_i_12 
       (.I0(\shift_reg_reg[31]_i_35_n_0 ),
        .I1(\shift_reg_reg[31]_i_7_n_0 ),
        .I2(shift_amount[2]),
        .I3(\shift_reg_reg[6]_i_8_n_0 ),
        .I4(shift_amount[3]),
        .I5(\shift_reg_reg[27]_i_17_n_0 ),
        .O(\shift_reg_reg[27]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0000000044400040)) 
    \shift_reg_reg[27]_i_13 
       (.I0(shift_amount[3]),
        .I1(\shift_reg_reg[0]_i_5_n_0 ),
        .I2(b_reg[27]),
        .I3(shift_amount[2]),
        .I4(b_reg[31]),
        .I5(shift_amount[4]),
        .O(\shift_reg_reg[27]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h30BB3088)) 
    \shift_reg_reg[27]_i_14 
       (.I0(\shift_reg_reg[31]_i_38_n_0 ),
        .I1(shift_amount[2]),
        .I2(\shift_reg_reg[3]_i_8_n_0 ),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[11]_i_11_n_0 ),
        .O(\shift_reg_reg[27]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[27]_i_15 
       (.I0(Q[12]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(b_reg[20]),
        .O(\shift_reg_reg[27]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hBB33B800B800B800)) 
    \shift_reg_reg[27]_i_16 
       (.I0(b_reg[19]),
        .I1(shift_amount[3]),
        .I2(Q[11]),
        .I3(\shift_reg_reg[0]_i_5_n_0 ),
        .I4(\ir_reg_reg_n_0_[11] ),
        .I5(\shift_amount_reg[4]_i_3_n_0 ),
        .O(\shift_reg_reg[27]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h6500)) 
    \shift_reg_reg[27]_i_17 
       (.I0(ir_out[25]),
        .I1(ir_out[27]),
        .I2(ir_out[26]),
        .I3(b_reg[27]),
        .O(\shift_reg_reg[27]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[27]_i_2 
       (.I0(\shift_reg_reg[28]_i_4_n_0 ),
        .I1(\shift_reg_reg[27]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[27]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[28]_i_5_n_0 ),
        .O(\shift_reg_reg[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[27]_i_3 
       (.I0(\shift_reg_reg[28]_i_6_n_0 ),
        .I1(\shift_reg_reg[27]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[28]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[27]_i_7_n_0 ),
        .O(\shift_reg_reg[27]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[27]_i_4 
       (.I0(\shift_reg_reg[27]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[27]_i_9_n_0 ),
        .O(\shift_reg_reg[27]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[27]_i_5 
       (.I0(\shift_reg_reg[27]_i_10_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[29]_i_9_n_0 ),
        .O(\shift_reg_reg[27]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[27]_i_6 
       (.I0(\shift_reg_reg[27]_i_11_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[27]_i_12_n_0 ),
        .I3(\shift_reg_reg[29]_i_10_n_0 ),
        .I4(\shift_reg_reg[29]_i_11_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[27]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0004FFFF00040000)) 
    \shift_reg_reg[27]_i_7 
       (.I0(shift_amount[2]),
        .I1(\shift_reg_reg[29]_i_8_n_0 ),
        .I2(shift_amount[3]),
        .I3(shift_amount[4]),
        .I4(shift_amount[1]),
        .I5(\shift_reg_reg[27]_i_13_n_0 ),
        .O(\shift_reg_reg[27]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hF0F10000F0E00000)) 
    \shift_reg_reg[27]_i_8 
       (.I0(shift_amount[4]),
        .I1(shift_amount[2]),
        .I2(b_reg[31]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[29]),
        .O(\shift_reg_reg[27]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hF0F10000F0E00000)) 
    \shift_reg_reg[27]_i_9 
       (.I0(shift_amount[4]),
        .I1(shift_amount[2]),
        .I2(b_reg[31]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[27]),
        .O(\shift_reg_reg[27]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[28] 
       (.CLR(1'b0),
        .D(output_shift[28]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [25]));
  MUXF7 \shift_reg_reg[28]_i_1 
       (.I0(\shift_reg_reg[28]_i_2_n_0 ),
        .I1(\shift_reg_reg[28]_i_3_n_0 ),
        .O(output_shift[28]),
        .S(shift_type[0]));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \shift_reg_reg[28]_i_10 
       (.I0(\shift_reg_reg[12]_i_9_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[28]_i_14_n_0 ),
        .I3(shift_amount[2]),
        .I4(\shift_reg_reg[31]_i_32_n_0 ),
        .O(\shift_reg_reg[28]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hB080FFFFB0800000)) 
    \shift_reg_reg[28]_i_11 
       (.I0(b_reg[24]),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[16]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[28]_i_15_n_0 ),
        .O(\shift_reg_reg[28]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    \shift_reg_reg[28]_i_12 
       (.I0(\shift_reg_reg[31]_i_39_n_0 ),
        .I1(shift_amount[2]),
        .I2(\shift_reg_reg[31]_i_38_n_0 ),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[28]),
        .O(\shift_reg_reg[28]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h6500)) 
    \shift_reg_reg[28]_i_13 
       (.I0(ir_out[25]),
        .I1(ir_out[27]),
        .I2(ir_out[26]),
        .I3(b_reg[28]),
        .O(\shift_reg_reg[28]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[28]_i_14 
       (.I0(Q[13]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(b_reg[21]),
        .O(\shift_reg_reg[28]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[28]_i_15 
       (.I0(b_reg[20]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(Q[12]),
        .O(\shift_reg_reg[28]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[28]_i_2 
       (.I0(\shift_reg_reg[29]_i_4_n_0 ),
        .I1(\shift_reg_reg[28]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[28]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[29]_i_5_n_0 ),
        .O(\shift_reg_reg[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[28]_i_3 
       (.I0(\shift_reg_reg[29]_i_6_n_0 ),
        .I1(\shift_reg_reg[28]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[29]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[28]_i_7_n_0 ),
        .O(\shift_reg_reg[28]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[28]_i_4 
       (.I0(\shift_reg_reg[28]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[28]_i_9_n_0 ),
        .O(\shift_reg_reg[28]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[28]_i_5 
       (.I0(\shift_reg_reg[28]_i_10_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[30]_i_9_n_0 ),
        .O(\shift_reg_reg[28]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[28]_i_6 
       (.I0(\shift_reg_reg[28]_i_11_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[28]_i_12_n_0 ),
        .I3(\shift_reg_reg[30]_i_10_n_0 ),
        .I4(\shift_reg_reg[30]_i_11_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[28]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000B08)) 
    \shift_reg_reg[28]_i_7 
       (.I0(\shift_reg_reg[30]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(shift_amount[2]),
        .I3(\shift_reg_reg[28]_i_13_n_0 ),
        .I4(shift_amount[3]),
        .I5(shift_amount[4]),
        .O(\shift_reg_reg[28]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hF0F10000F0E00000)) 
    \shift_reg_reg[28]_i_8 
       (.I0(shift_amount[4]),
        .I1(shift_amount[2]),
        .I2(b_reg[31]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[30]),
        .O(\shift_reg_reg[28]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hF0F10000F0E00000)) 
    \shift_reg_reg[28]_i_9 
       (.I0(shift_amount[4]),
        .I1(shift_amount[2]),
        .I2(b_reg[31]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[28]),
        .O(\shift_reg_reg[28]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[29] 
       (.CLR(1'b0),
        .D(output_shift[29]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [26]));
  MUXF7 \shift_reg_reg[29]_i_1 
       (.I0(\shift_reg_reg[29]_i_2_n_0 ),
        .I1(\shift_reg_reg[29]_i_3_n_0 ),
        .O(output_shift[29]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'hB080FFFFB0800000)) 
    \shift_reg_reg[29]_i_10 
       (.I0(b_reg[25]),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[17]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[29]_i_13_n_0 ),
        .O(\shift_reg_reg[29]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    \shift_reg_reg[29]_i_11 
       (.I0(\shift_reg_reg[31]_i_46_n_0 ),
        .I1(shift_amount[2]),
        .I2(\shift_reg_reg[31]_i_45_n_0 ),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[29]),
        .O(\shift_reg_reg[29]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[29]_i_12 
       (.I0(Q[14]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(b_reg[22]),
        .O(\shift_reg_reg[29]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[29]_i_13 
       (.I0(b_reg[21]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(Q[13]),
        .O(\shift_reg_reg[29]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[29]_i_2 
       (.I0(\shift_reg_reg[30]_i_4_n_0 ),
        .I1(\shift_reg_reg[29]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[29]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[30]_i_5_n_0 ),
        .O(\shift_reg_reg[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[29]_i_3 
       (.I0(\shift_reg_reg[30]_i_6_n_0 ),
        .I1(\shift_reg_reg[29]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[30]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[29]_i_7_n_0 ),
        .O(\shift_reg_reg[29]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \shift_reg_reg[29]_i_4 
       (.I0(shift_amount[1]),
        .I1(shift_amount[4]),
        .I2(shift_amount[2]),
        .I3(\shift_reg_reg[31]_i_7_n_0 ),
        .I4(shift_amount[3]),
        .I5(\shift_reg_reg[29]_i_8_n_0 ),
        .O(\shift_reg_reg[29]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[29]_i_5 
       (.I0(\shift_reg_reg[29]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[31]_i_13_n_0 ),
        .O(\shift_reg_reg[29]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \shift_reg_reg[29]_i_6 
       (.I0(\shift_reg_reg[31]_i_23_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[31]_i_24_n_0 ),
        .I3(\shift_reg_reg[29]_i_10_n_0 ),
        .I4(\shift_reg_reg[29]_i_11_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[29]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000B08)) 
    \shift_reg_reg[29]_i_7 
       (.I0(\shift_reg_reg[31]_i_7_n_0 ),
        .I1(shift_amount[1]),
        .I2(shift_amount[2]),
        .I3(\shift_reg_reg[29]_i_8_n_0 ),
        .I4(shift_amount[3]),
        .I5(shift_amount[4]),
        .O(\shift_reg_reg[29]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h6500)) 
    \shift_reg_reg[29]_i_8 
       (.I0(ir_out[25]),
        .I1(ir_out[27]),
        .I2(ir_out[26]),
        .I3(b_reg[29]),
        .O(\shift_reg_reg[29]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \shift_reg_reg[29]_i_9 
       (.I0(\shift_reg_reg[13]_i_9_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[29]_i_12_n_0 ),
        .I3(shift_amount[2]),
        .I4(\shift_reg_reg[31]_i_31_n_0 ),
        .O(\shift_reg_reg[29]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[2] 
       (.CLR(1'b0),
        .D(output_shift[2]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(shift_reg[2]));
  MUXF7 \shift_reg_reg[2]_i_1 
       (.I0(\shift_reg_reg[2]_i_2_n_0 ),
        .I1(\shift_reg_reg[2]_i_3_n_0 ),
        .O(output_shift[2]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[2]_i_2 
       (.I0(\shift_reg_reg[3]_i_4_n_0 ),
        .I1(\shift_reg_reg[2]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[2]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[3]_i_5_n_0 ),
        .O(\shift_reg_reg[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[2]_i_3 
       (.I0(\shift_reg_reg[3]_i_6_n_0 ),
        .I1(\shift_reg_reg[2]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[3]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[2]_i_7_n_0 ),
        .O(\shift_reg_reg[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \shift_reg_reg[2]_i_4 
       (.I0(\shift_reg_reg[20]_i_8_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[20]_i_10_n_0 ),
        .I3(\shift_reg_reg[31]_i_21_n_0 ),
        .I4(\shift_reg_reg[31]_i_22_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[2]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h00000010)) 
    \shift_reg_reg[2]_i_5 
       (.I0(shift_amount[4]),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[4]_i_8_n_0 ),
        .I3(shift_amount[2]),
        .I4(shift_amount[1]),
        .O(\shift_reg_reg[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \shift_reg_reg[2]_i_6 
       (.I0(\shift_reg_reg[20]_i_11_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[20]_i_10_n_0 ),
        .I3(\shift_reg_reg[31]_i_21_n_0 ),
        .I4(\shift_reg_reg[31]_i_22_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[2]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \shift_reg_reg[2]_i_7 
       (.I0(\shift_reg_reg[31]_i_21_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[31]_i_22_n_0 ),
        .I3(\shift_reg_reg[4]_i_9_n_0 ),
        .I4(shift_amount[1]),
        .O(\shift_reg_reg[2]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[30] 
       (.CLR(1'b0),
        .D(output_shift[30]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [27]));
  MUXF7 \shift_reg_reg[30]_i_1 
       (.I0(\shift_reg_reg[30]_i_2_n_0 ),
        .I1(\shift_reg_reg[30]_i_3_n_0 ),
        .O(output_shift[30]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'hB080FFFFB0800000)) 
    \shift_reg_reg[30]_i_10 
       (.I0(b_reg[26]),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[18]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[30]_i_13_n_0 ),
        .O(\shift_reg_reg[30]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    \shift_reg_reg[30]_i_11 
       (.I0(\shift_reg_reg[31]_i_41_n_0 ),
        .I1(shift_amount[2]),
        .I2(\shift_reg_reg[31]_i_30_n_0 ),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[30]),
        .O(\shift_reg_reg[30]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[30]_i_12 
       (.I0(Q[15]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(b_reg[23]),
        .O(\shift_reg_reg[30]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[30]_i_13 
       (.I0(b_reg[22]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(Q[14]),
        .O(\shift_reg_reg[30]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[30]_i_2 
       (.I0(\shift_reg_reg[31]_i_7_n_0 ),
        .I1(\shift_reg_reg[30]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[30]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[31]_i_8_n_0 ),
        .O(\shift_reg_reg[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[30]_i_3 
       (.I0(\shift_reg_reg[31]_i_11_n_0 ),
        .I1(\shift_reg_reg[30]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[31]_i_12_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[30]_i_7_n_0 ),
        .O(\shift_reg_reg[30]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF01FF00FE00)) 
    \shift_reg_reg[30]_i_4 
       (.I0(shift_amount[1]),
        .I1(shift_amount[4]),
        .I2(shift_amount[2]),
        .I3(\shift_reg_reg[31]_i_7_n_0 ),
        .I4(shift_amount[3]),
        .I5(\shift_reg_reg[30]_i_8_n_0 ),
        .O(\shift_reg_reg[30]_i_4_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[30]_i_5 
       (.I0(\shift_reg_reg[30]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[31]_i_16_n_0 ),
        .O(\shift_reg_reg[30]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \shift_reg_reg[30]_i_6 
       (.I0(\shift_reg_reg[31]_i_19_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[31]_i_20_n_0 ),
        .I3(\shift_reg_reg[30]_i_10_n_0 ),
        .I4(\shift_reg_reg[30]_i_11_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[30]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \shift_reg_reg[30]_i_7 
       (.I0(shift_amount[4]),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[30]),
        .I4(shift_amount[2]),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[30]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h6500)) 
    \shift_reg_reg[30]_i_8 
       (.I0(ir_out[25]),
        .I1(ir_out[27]),
        .I2(ir_out[26]),
        .I3(b_reg[30]),
        .O(\shift_reg_reg[30]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \shift_reg_reg[30]_i_9 
       (.I0(\shift_reg_reg[14]_i_9_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[30]_i_12_n_0 ),
        .I3(shift_amount[2]),
        .I4(\shift_reg_reg[31]_i_36_n_0 ),
        .O(\shift_reg_reg[30]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[31] 
       (.CLR(1'b0),
        .D(output_shift[31]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [28]));
  MUXF7 \shift_reg_reg[31]_i_1 
       (.I0(\shift_reg_reg[31]_i_4_n_0 ),
        .I1(\shift_reg_reg[31]_i_5_n_0 ),
        .O(output_shift[31]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[31]_i_10 
       (.I0(\shift_reg_reg[31]_i_19_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[31]_i_20_n_0 ),
        .I3(\shift_reg_reg[31]_i_21_n_0 ),
        .I4(\shift_reg_reg[31]_i_22_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[31]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[31]_i_11 
       (.I0(\shift_reg_reg[31]_i_23_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[31]_i_24_n_0 ),
        .I3(\shift_reg_reg[31]_i_25_n_0 ),
        .I4(\shift_reg_reg[31]_i_26_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[31]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000001000)) 
    \shift_reg_reg[31]_i_12 
       (.I0(shift_amount[4]),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[31]),
        .I4(shift_amount[2]),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[31]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \shift_reg_reg[31]_i_13 
       (.I0(\shift_reg_reg[15]_i_8_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[31]_i_27_n_0 ),
        .I3(shift_amount[2]),
        .I4(\shift_reg_reg[31]_i_28_n_0 ),
        .O(\shift_reg_reg[31]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    \shift_reg_reg[31]_i_14 
       (.I0(\shift_reg_reg[31]_i_29_n_0 ),
        .I1(shift_amount[2]),
        .I2(\shift_reg_reg[31]_i_30_n_0 ),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(Q[14]),
        .O(\shift_reg_reg[31]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hB8BB8888B8888888)) 
    \shift_reg_reg[31]_i_15 
       (.I0(\shift_reg_reg[31]_i_31_n_0 ),
        .I1(shift_amount[2]),
        .I2(b_reg[22]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[30]),
        .O(\shift_reg_reg[31]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \shift_reg_reg[31]_i_16 
       (.I0(\shift_reg_reg[16]_i_8_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[31]_i_32_n_0 ),
        .I3(shift_amount[2]),
        .I4(\shift_reg_reg[31]_i_33_n_0 ),
        .O(\shift_reg_reg[31]_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hB8BBB888B888B888)) 
    \shift_reg_reg[31]_i_17 
       (.I0(\shift_reg_reg[31]_i_34_n_0 ),
        .I1(shift_amount[2]),
        .I2(\shift_reg_reg[31]_i_35_n_0 ),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(Q[15]),
        .O(\shift_reg_reg[31]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hB8BB8888B8888888)) 
    \shift_reg_reg[31]_i_18 
       (.I0(\shift_reg_reg[31]_i_36_n_0 ),
        .I1(shift_amount[2]),
        .I2(b_reg[23]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[31]),
        .O(\shift_reg_reg[31]_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hB8BB8888B8888888)) 
    \shift_reg_reg[31]_i_19 
       (.I0(\shift_reg_reg[31]_i_37_n_0 ),
        .I1(shift_amount[2]),
        .I2(b_reg[24]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[16]),
        .O(\shift_reg_reg[31]_i_19_n_0 ));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    \shift_reg_reg[31]_i_20 
       (.I0(\shift_reg_reg[0]_i_5_n_0 ),
        .I1(Q[12]),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[31]_i_38_n_0 ),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[31]_i_39_n_0 ),
        .O(\shift_reg_reg[31]_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hB8BB8888B8888888)) 
    \shift_reg_reg[31]_i_21 
       (.I0(\shift_reg_reg[31]_i_40_n_0 ),
        .I1(shift_amount[2]),
        .I2(b_reg[26]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[18]),
        .O(\shift_reg_reg[31]_i_21_n_0 ));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    \shift_reg_reg[31]_i_22 
       (.I0(\shift_reg_reg[0]_i_5_n_0 ),
        .I1(Q[14]),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[31]_i_30_n_0 ),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[31]_i_41_n_0 ),
        .O(\shift_reg_reg[31]_i_22_n_0 ));
  LUT6 #(
    .INIT(64'hB080FFFFB0800000)) 
    \shift_reg_reg[31]_i_23 
       (.I0(b_reg[27]),
        .I1(shift_amount[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(b_reg[19]),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[31]_i_42_n_0 ),
        .O(\shift_reg_reg[31]_i_23_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[31]_i_24 
       (.I0(\shift_reg_reg[31]_i_43_n_0 ),
        .I1(\shift_reg_reg[6]_i_8_n_0 ),
        .I2(shift_amount[2]),
        .I3(\shift_reg_reg[31]_i_35_n_0 ),
        .I4(shift_amount[3]),
        .I5(\shift_reg_reg[31]_i_7_n_0 ),
        .O(\shift_reg_reg[31]_i_24_n_0 ));
  LUT6 #(
    .INIT(64'hB8BB8888B8888888)) 
    \shift_reg_reg[31]_i_25 
       (.I0(\shift_reg_reg[31]_i_44_n_0 ),
        .I1(shift_amount[2]),
        .I2(b_reg[25]),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .I5(b_reg[17]),
        .O(\shift_reg_reg[31]_i_25_n_0 ));
  LUT6 #(
    .INIT(64'h8F80FFFF8F800000)) 
    \shift_reg_reg[31]_i_26 
       (.I0(\shift_reg_reg[0]_i_5_n_0 ),
        .I1(Q[13]),
        .I2(shift_amount[3]),
        .I3(\shift_reg_reg[31]_i_45_n_0 ),
        .I4(shift_amount[2]),
        .I5(\shift_reg_reg[31]_i_46_n_0 ),
        .O(\shift_reg_reg[31]_i_26_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[31]_i_27 
       (.I0(b_reg[16]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(b_reg[24]),
        .O(\shift_reg_reg[31]_i_27_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[31]_i_28 
       (.I0(b_reg[20]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(b_reg[28]),
        .O(\shift_reg_reg[31]_i_28_n_0 ));
  LUT5 #(
    .INIT(32'hCAFFCA00)) 
    \shift_reg_reg[31]_i_29 
       (.I0(\ir_reg_reg_n_0_[2] ),
        .I1(Q[2]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[22]_i_14_n_0 ),
        .O(\shift_reg_reg[31]_i_29_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \shift_reg_reg[31]_i_3 
       (.I0(ir_out[6]),
        .I1(ir_out[25]),
        .O(shift_type[0]));
  LUT5 #(
    .INIT(32'hAACACCAC)) 
    \shift_reg_reg[31]_i_30 
       (.I0(ir_out[6]),
        .I1(Q[6]),
        .I2(ir_out[26]),
        .I3(ir_out[27]),
        .I4(ir_out[25]),
        .O(\shift_reg_reg[31]_i_30_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[31]_i_31 
       (.I0(b_reg[18]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(b_reg[26]),
        .O(\shift_reg_reg[31]_i_31_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[31]_i_32 
       (.I0(b_reg[17]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(b_reg[25]),
        .O(\shift_reg_reg[31]_i_32_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[31]_i_33 
       (.I0(b_reg[21]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(b_reg[29]),
        .O(\shift_reg_reg[31]_i_33_n_0 ));
  LUT5 #(
    .INIT(32'hCAFFCA00)) 
    \shift_reg_reg[31]_i_34 
       (.I0(\ir_reg_reg_n_0_[3] ),
        .I1(Q[3]),
        .I2(\shift_reg_reg[0]_i_5_n_0 ),
        .I3(shift_amount[3]),
        .I4(\shift_reg_reg[31]_i_43_n_0 ),
        .O(\shift_reg_reg[31]_i_34_n_0 ));
  LUT5 #(
    .INIT(32'hAACACCAC)) 
    \shift_reg_reg[31]_i_35 
       (.I0(ir_out[7]),
        .I1(Q[7]),
        .I2(ir_out[26]),
        .I3(ir_out[27]),
        .I4(ir_out[25]),
        .O(\shift_reg_reg[31]_i_35_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[31]_i_36 
       (.I0(b_reg[19]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(b_reg[27]),
        .O(\shift_reg_reg[31]_i_36_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[31]_i_37 
       (.I0(b_reg[28]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(b_reg[20]),
        .O(\shift_reg_reg[31]_i_37_n_0 ));
  LUT5 #(
    .INIT(32'hFBAE08A2)) 
    \shift_reg_reg[31]_i_38 
       (.I0(Q[4]),
        .I1(ir_out[26]),
        .I2(ir_out[27]),
        .I3(ir_out[25]),
        .I4(ir_out[4]),
        .O(\shift_reg_reg[31]_i_38_n_0 ));
  LUT5 #(
    .INIT(32'hBB88B8B8)) 
    \shift_reg_reg[31]_i_39 
       (.I0(\shift_reg_reg[11]_i_11_n_0 ),
        .I1(shift_amount[3]),
        .I2(\ir_reg_reg_n_0_[0] ),
        .I3(Q[0]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .O(\shift_reg_reg[31]_i_39_n_0 ));
  LUT6 #(
    .INIT(64'hABA8ABABABA8A8A8)) 
    \shift_reg_reg[31]_i_4 
       (.I0(\shift_reg_reg[31]_i_7_n_0 ),
        .I1(ir_out[25]),
        .I2(ir_out[7]),
        .I3(\shift_reg_reg[31]_i_8_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[31]_i_9_n_0 ),
        .O(\shift_reg_reg[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[31]_i_40 
       (.I0(b_reg[30]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(b_reg[22]),
        .O(\shift_reg_reg[31]_i_40_n_0 ));
  LUT5 #(
    .INIT(32'hBB88B8B8)) 
    \shift_reg_reg[31]_i_41 
       (.I0(\shift_reg_reg[22]_i_14_n_0 ),
        .I1(shift_amount[3]),
        .I2(\ir_reg_reg_n_0_[2] ),
        .I3(Q[2]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .O(\shift_reg_reg[31]_i_41_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[31]_i_42 
       (.I0(b_reg[23]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(Q[15]),
        .O(\shift_reg_reg[31]_i_42_n_0 ));
  LUT5 #(
    .INIT(32'h00A0AACA)) 
    \shift_reg_reg[31]_i_43 
       (.I0(Q[11]),
        .I1(\ir_reg_reg_n_0_[11] ),
        .I2(ir_out[26]),
        .I3(ir_out[27]),
        .I4(ir_out[25]),
        .O(\shift_reg_reg[31]_i_43_n_0 ));
  LUT6 #(
    .INIT(64'h0BB00B0B08800808)) 
    \shift_reg_reg[31]_i_44 
       (.I0(b_reg[29]),
        .I1(shift_amount[3]),
        .I2(ir_out[25]),
        .I3(ir_out[27]),
        .I4(ir_out[26]),
        .I5(b_reg[21]),
        .O(\shift_reg_reg[31]_i_44_n_0 ));
  LUT5 #(
    .INIT(32'hAACACCAC)) 
    \shift_reg_reg[31]_i_45 
       (.I0(ir_out[5]),
        .I1(Q[5]),
        .I2(ir_out[26]),
        .I3(ir_out[27]),
        .I4(ir_out[25]),
        .O(\shift_reg_reg[31]_i_45_n_0 ));
  LUT5 #(
    .INIT(32'hBB88B8B8)) 
    \shift_reg_reg[31]_i_46 
       (.I0(\shift_reg_reg[21]_i_14_n_0 ),
        .I1(shift_amount[3]),
        .I2(\ir_reg_reg_n_0_[1] ),
        .I3(Q[1]),
        .I4(\shift_reg_reg[0]_i_5_n_0 ),
        .O(\shift_reg_reg[31]_i_46_n_0 ));
  LUT6 #(
    .INIT(64'hAAA0AAA0CCCFCCC0)) 
    \shift_reg_reg[31]_i_5 
       (.I0(\shift_reg_reg[31]_i_10_n_0 ),
        .I1(\shift_reg_reg[31]_i_11_n_0 ),
        .I2(ir_out[25]),
        .I3(ir_out[7]),
        .I4(\shift_reg_reg[31]_i_12_n_0 ),
        .I5(shift_amount[0]),
        .O(\shift_reg_reg[31]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h6500)) 
    \shift_reg_reg[31]_i_7 
       (.I0(ir_out[25]),
        .I1(ir_out[27]),
        .I2(ir_out[26]),
        .I3(b_reg[31]),
        .O(\shift_reg_reg[31]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \shift_reg_reg[31]_i_8 
       (.I0(\shift_reg_reg[31]_i_13_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[31]_i_14_n_0 ),
        .I3(shift_amount[4]),
        .I4(\shift_reg_reg[31]_i_15_n_0 ),
        .O(\shift_reg_reg[31]_i_8_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \shift_reg_reg[31]_i_9 
       (.I0(\shift_reg_reg[31]_i_16_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[31]_i_17_n_0 ),
        .I3(shift_amount[4]),
        .I4(\shift_reg_reg[31]_i_18_n_0 ),
        .O(\shift_reg_reg[31]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[3] 
       (.CLR(1'b0),
        .D(output_shift[3]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [0]));
  MUXF7 \shift_reg_reg[3]_i_1 
       (.I0(\shift_reg_reg[3]_i_2_n_0 ),
        .I1(\shift_reg_reg[3]_i_3_n_0 ),
        .O(output_shift[3]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[3]_i_2 
       (.I0(\shift_reg_reg[4]_i_4_n_0 ),
        .I1(\shift_reg_reg[3]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[3]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[4]_i_5_n_0 ),
        .O(\shift_reg_reg[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[3]_i_3 
       (.I0(\shift_reg_reg[4]_i_6_n_0 ),
        .I1(\shift_reg_reg[3]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[4]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[3]_i_7_n_0 ),
        .O(\shift_reg_reg[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[3]_i_4 
       (.I0(\shift_reg_reg[19]_i_8_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[19]_i_10_n_0 ),
        .I3(\shift_reg_reg[21]_i_8_n_0 ),
        .I4(\shift_reg_reg[21]_i_10_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000B08)) 
    \shift_reg_reg[3]_i_5 
       (.I0(\shift_reg_reg[3]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(shift_amount[2]),
        .I3(\shift_reg_reg[5]_i_8_n_0 ),
        .I4(shift_amount[3]),
        .I5(shift_amount[4]),
        .O(\shift_reg_reg[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[3]_i_6 
       (.I0(\shift_reg_reg[19]_i_8_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[19]_i_10_n_0 ),
        .I3(\shift_reg_reg[21]_i_11_n_0 ),
        .I4(\shift_reg_reg[21]_i_10_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[3]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hFF00B8B8)) 
    \shift_reg_reg[3]_i_7 
       (.I0(\shift_reg_reg[19]_i_8_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[19]_i_10_n_0 ),
        .I3(\shift_reg_reg[5]_i_9_n_0 ),
        .I4(shift_amount[1]),
        .O(\shift_reg_reg[3]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hAACACCAC)) 
    \shift_reg_reg[3]_i_8 
       (.I0(\ir_reg_reg_n_0_[0] ),
        .I1(Q[0]),
        .I2(ir_out[26]),
        .I3(ir_out[27]),
        .I4(ir_out[25]),
        .O(\shift_reg_reg[3]_i_8_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[4] 
       (.CLR(1'b0),
        .D(output_shift[4]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [1]));
  MUXF7 \shift_reg_reg[4]_i_1 
       (.I0(\shift_reg_reg[4]_i_2_n_0 ),
        .I1(\shift_reg_reg[4]_i_3_n_0 ),
        .O(output_shift[4]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[4]_i_2 
       (.I0(\shift_reg_reg[5]_i_4_n_0 ),
        .I1(\shift_reg_reg[4]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[4]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[5]_i_5_n_0 ),
        .O(\shift_reg_reg[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[4]_i_3 
       (.I0(\shift_reg_reg[5]_i_6_n_0 ),
        .I1(\shift_reg_reg[4]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[5]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[4]_i_7_n_0 ),
        .O(\shift_reg_reg[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[4]_i_4 
       (.I0(\shift_reg_reg[20]_i_8_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[20]_i_10_n_0 ),
        .I3(\shift_reg_reg[22]_i_8_n_0 ),
        .I4(\shift_reg_reg[22]_i_10_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000B08)) 
    \shift_reg_reg[4]_i_5 
       (.I0(\shift_reg_reg[4]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(shift_amount[2]),
        .I3(\shift_reg_reg[6]_i_8_n_0 ),
        .I4(shift_amount[3]),
        .I5(shift_amount[4]),
        .O(\shift_reg_reg[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[4]_i_6 
       (.I0(\shift_reg_reg[20]_i_11_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[20]_i_10_n_0 ),
        .I3(\shift_reg_reg[22]_i_11_n_0 ),
        .I4(\shift_reg_reg[22]_i_10_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[4]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[4]_i_7 
       (.I0(\shift_reg_reg[6]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[4]_i_9_n_0 ),
        .O(\shift_reg_reg[4]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hAACACCAC)) 
    \shift_reg_reg[4]_i_8 
       (.I0(\ir_reg_reg_n_0_[1] ),
        .I1(Q[1]),
        .I2(ir_out[26]),
        .I3(ir_out[27]),
        .I4(ir_out[25]),
        .O(\shift_reg_reg[4]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h2F20FFFF2F200000)) 
    \shift_reg_reg[4]_i_9 
       (.I0(\shift_reg_reg[8]_i_10_n_0 ),
        .I1(shift_amount[3]),
        .I2(shift_amount[2]),
        .I3(\shift_reg_reg[31]_i_37_n_0 ),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[20]_i_10_n_0 ),
        .O(\shift_reg_reg[4]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[5] 
       (.CLR(1'b0),
        .D(output_shift[5]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [2]));
  MUXF7 \shift_reg_reg[5]_i_1 
       (.I0(\shift_reg_reg[5]_i_2_n_0 ),
        .I1(\shift_reg_reg[5]_i_3_n_0 ),
        .O(output_shift[5]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[5]_i_2 
       (.I0(\shift_reg_reg[6]_i_4_n_0 ),
        .I1(\shift_reg_reg[5]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[5]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[6]_i_5_n_0 ),
        .O(\shift_reg_reg[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[5]_i_3 
       (.I0(\shift_reg_reg[6]_i_6_n_0 ),
        .I1(\shift_reg_reg[5]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[6]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[5]_i_7_n_0 ),
        .O(\shift_reg_reg[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[5]_i_4 
       (.I0(\shift_reg_reg[21]_i_8_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[21]_i_10_n_0 ),
        .I3(\shift_reg_reg[23]_i_8_n_0 ),
        .I4(\shift_reg_reg[23]_i_10_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000004FF0400)) 
    \shift_reg_reg[5]_i_5 
       (.I0(shift_amount[2]),
        .I1(\shift_reg_reg[5]_i_8_n_0 ),
        .I2(shift_amount[3]),
        .I3(shift_amount[1]),
        .I4(\shift_reg_reg[7]_i_8_n_0 ),
        .I5(shift_amount[4]),
        .O(\shift_reg_reg[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \shift_reg_reg[5]_i_6 
       (.I0(\shift_reg_reg[23]_i_11_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[23]_i_10_n_0 ),
        .I3(\shift_reg_reg[21]_i_11_n_0 ),
        .I4(\shift_reg_reg[21]_i_10_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[5]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[5]_i_7 
       (.I0(\shift_reg_reg[7]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[5]_i_9_n_0 ),
        .O(\shift_reg_reg[5]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hAACACCAC)) 
    \shift_reg_reg[5]_i_8 
       (.I0(\ir_reg_reg_n_0_[2] ),
        .I1(Q[2]),
        .I2(ir_out[26]),
        .I3(ir_out[27]),
        .I4(ir_out[25]),
        .O(\shift_reg_reg[5]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h2F20FFFF2F200000)) 
    \shift_reg_reg[5]_i_9 
       (.I0(\shift_reg_reg[9]_i_10_n_0 ),
        .I1(shift_amount[3]),
        .I2(shift_amount[2]),
        .I3(\shift_reg_reg[31]_i_44_n_0 ),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[21]_i_10_n_0 ),
        .O(\shift_reg_reg[5]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[6] 
       (.CLR(1'b0),
        .D(output_shift[6]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [3]));
  MUXF7 \shift_reg_reg[6]_i_1 
       (.I0(\shift_reg_reg[6]_i_2_n_0 ),
        .I1(\shift_reg_reg[6]_i_3_n_0 ),
        .O(output_shift[6]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[6]_i_2 
       (.I0(\shift_reg_reg[7]_i_4_n_0 ),
        .I1(\shift_reg_reg[6]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[6]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[7]_i_5_n_0 ),
        .O(\shift_reg_reg[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[6]_i_3 
       (.I0(\shift_reg_reg[7]_i_6_n_0 ),
        .I1(\shift_reg_reg[6]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[7]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[6]_i_7_n_0 ),
        .O(\shift_reg_reg[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[6]_i_4 
       (.I0(\shift_reg_reg[22]_i_8_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[22]_i_10_n_0 ),
        .I3(\shift_reg_reg[24]_i_8_n_0 ),
        .I4(\shift_reg_reg[24]_i_10_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000000004FF0400)) 
    \shift_reg_reg[6]_i_5 
       (.I0(shift_amount[2]),
        .I1(\shift_reg_reg[6]_i_8_n_0 ),
        .I2(shift_amount[3]),
        .I3(shift_amount[1]),
        .I4(\shift_reg_reg[8]_i_8_n_0 ),
        .I5(shift_amount[4]),
        .O(\shift_reg_reg[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hB8B8B8B8FF33CC00)) 
    \shift_reg_reg[6]_i_6 
       (.I0(\shift_reg_reg[24]_i_11_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[24]_i_10_n_0 ),
        .I3(\shift_reg_reg[22]_i_11_n_0 ),
        .I4(\shift_reg_reg[22]_i_10_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[6]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[6]_i_7 
       (.I0(\shift_reg_reg[8]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[6]_i_9_n_0 ),
        .O(\shift_reg_reg[6]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hAACACCAC)) 
    \shift_reg_reg[6]_i_8 
       (.I0(\ir_reg_reg_n_0_[3] ),
        .I1(Q[3]),
        .I2(ir_out[26]),
        .I3(ir_out[27]),
        .I4(ir_out[25]),
        .O(\shift_reg_reg[6]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h2F20FFFF2F200000)) 
    \shift_reg_reg[6]_i_9 
       (.I0(\shift_reg_reg[10]_i_10_n_0 ),
        .I1(shift_amount[3]),
        .I2(shift_amount[2]),
        .I3(\shift_reg_reg[31]_i_40_n_0 ),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[22]_i_10_n_0 ),
        .O(\shift_reg_reg[6]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[7] 
       (.CLR(1'b0),
        .D(output_shift[7]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [4]));
  MUXF7 \shift_reg_reg[7]_i_1 
       (.I0(\shift_reg_reg[7]_i_2_n_0 ),
        .I1(\shift_reg_reg[7]_i_3_n_0 ),
        .O(output_shift[7]),
        .S(shift_type[0]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[7]_i_2 
       (.I0(\shift_reg_reg[8]_i_4_n_0 ),
        .I1(\shift_reg_reg[7]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[7]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[8]_i_5_n_0 ),
        .O(\shift_reg_reg[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[7]_i_3 
       (.I0(\shift_reg_reg[8]_i_6_n_0 ),
        .I1(\shift_reg_reg[7]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[8]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[7]_i_7_n_0 ),
        .O(\shift_reg_reg[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[7]_i_4 
       (.I0(\shift_reg_reg[25]_i_9_n_0 ),
        .I1(\shift_reg_reg[25]_i_11_n_0 ),
        .I2(shift_amount[1]),
        .I3(\shift_reg_reg[23]_i_8_n_0 ),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[23]_i_10_n_0 ),
        .O(\shift_reg_reg[7]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \shift_reg_reg[7]_i_5 
       (.I0(\shift_reg_reg[7]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[9]_i_8_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[7]_i_6 
       (.I0(\shift_reg_reg[23]_i_11_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[23]_i_10_n_0 ),
        .I3(\shift_reg_reg[25]_i_12_n_0 ),
        .I4(\shift_reg_reg[25]_i_11_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[7]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[7]_i_7 
       (.I0(\shift_reg_reg[9]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[7]_i_9_n_0 ),
        .O(\shift_reg_reg[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000D8FFD800)) 
    \shift_reg_reg[7]_i_8 
       (.I0(\shift_reg_reg[0]_i_5_n_0 ),
        .I1(Q[0]),
        .I2(\ir_reg_reg_n_0_[0] ),
        .I3(shift_amount[2]),
        .I4(\shift_reg_reg[31]_i_38_n_0 ),
        .I5(shift_amount[3]),
        .O(\shift_reg_reg[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h2F20FFFF2F200000)) 
    \shift_reg_reg[7]_i_9 
       (.I0(\shift_reg_reg[27]_i_17_n_0 ),
        .I1(shift_amount[3]),
        .I2(shift_amount[2]),
        .I3(\shift_reg_reg[23]_i_15_n_0 ),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[23]_i_10_n_0 ),
        .O(\shift_reg_reg[7]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[8] 
       (.CLR(1'b0),
        .D(output_shift[8]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [5]));
  MUXF7 \shift_reg_reg[8]_i_1 
       (.I0(\shift_reg_reg[8]_i_2_n_0 ),
        .I1(\shift_reg_reg[8]_i_3_n_0 ),
        .O(output_shift[8]),
        .S(shift_type[0]));
  LUT4 #(
    .INIT(16'h6500)) 
    \shift_reg_reg[8]_i_10 
       (.I0(ir_out[25]),
        .I1(ir_out[27]),
        .I2(ir_out[26]),
        .I3(b_reg[24]),
        .O(\shift_reg_reg[8]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[8]_i_2 
       (.I0(\shift_reg_reg[9]_i_4_n_0 ),
        .I1(\shift_reg_reg[8]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[8]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[9]_i_5_n_0 ),
        .O(\shift_reg_reg[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[8]_i_3 
       (.I0(\shift_reg_reg[9]_i_6_n_0 ),
        .I1(\shift_reg_reg[8]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[9]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[8]_i_7_n_0 ),
        .O(\shift_reg_reg[8]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[8]_i_4 
       (.I0(\shift_reg_reg[26]_i_9_n_0 ),
        .I1(\shift_reg_reg[26]_i_11_n_0 ),
        .I2(shift_amount[1]),
        .I3(\shift_reg_reg[24]_i_8_n_0 ),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[24]_i_10_n_0 ),
        .O(\shift_reg_reg[8]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h00B8)) 
    \shift_reg_reg[8]_i_5 
       (.I0(\shift_reg_reg[8]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[10]_i_8_n_0 ),
        .I3(shift_amount[4]),
        .O(\shift_reg_reg[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[8]_i_6 
       (.I0(\shift_reg_reg[24]_i_11_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[24]_i_10_n_0 ),
        .I3(\shift_reg_reg[26]_i_12_n_0 ),
        .I4(\shift_reg_reg[26]_i_11_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[8]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[8]_i_7 
       (.I0(\shift_reg_reg[10]_i_9_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[8]_i_9_n_0 ),
        .O(\shift_reg_reg[8]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000D8FFD800)) 
    \shift_reg_reg[8]_i_8 
       (.I0(\shift_reg_reg[0]_i_5_n_0 ),
        .I1(Q[1]),
        .I2(\ir_reg_reg_n_0_[1] ),
        .I3(shift_amount[2]),
        .I4(\shift_reg_reg[31]_i_45_n_0 ),
        .I5(shift_amount[3]),
        .O(\shift_reg_reg[8]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \shift_reg_reg[8]_i_9 
       (.I0(\shift_reg_reg[28]_i_13_n_0 ),
        .I1(shift_amount[2]),
        .I2(\shift_reg_reg[8]_i_10_n_0 ),
        .I3(shift_amount[3]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[24]_i_10_n_0 ),
        .O(\shift_reg_reg[8]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \shift_reg_reg[9] 
       (.CLR(1'b0),
        .D(output_shift[9]),
        .G(\FSM_sequential_state_reg[0]_11 ),
        .GE(1'b1),
        .Q(\pc_reg[31]_2 [6]));
  MUXF7 \shift_reg_reg[9]_i_1 
       (.I0(\shift_reg_reg[9]_i_2_n_0 ),
        .I1(\shift_reg_reg[9]_i_3_n_0 ),
        .O(output_shift[9]),
        .S(shift_type[0]));
  LUT4 #(
    .INIT(16'h6500)) 
    \shift_reg_reg[9]_i_10 
       (.I0(ir_out[25]),
        .I1(ir_out[27]),
        .I2(ir_out[26]),
        .I3(b_reg[25]),
        .O(\shift_reg_reg[9]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[9]_i_2 
       (.I0(\shift_reg_reg[10]_i_4_n_0 ),
        .I1(\shift_reg_reg[9]_i_4_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[9]_i_5_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[10]_i_5_n_0 ),
        .O(\shift_reg_reg[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \shift_reg_reg[9]_i_3 
       (.I0(\shift_reg_reg[10]_i_6_n_0 ),
        .I1(\shift_reg_reg[9]_i_6_n_0 ),
        .I2(shift_type[1]),
        .I3(\shift_reg_reg[10]_i_7_n_0 ),
        .I4(shift_amount[0]),
        .I5(\shift_reg_reg[9]_i_7_n_0 ),
        .O(\shift_reg_reg[9]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hB8BBB888)) 
    \shift_reg_reg[9]_i_4 
       (.I0(\shift_reg_reg[11]_i_8_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[25]_i_9_n_0 ),
        .I3(shift_amount[4]),
        .I4(\shift_reg_reg[25]_i_11_n_0 ),
        .O(\shift_reg_reg[9]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h2F20)) 
    \shift_reg_reg[9]_i_5 
       (.I0(\shift_reg_reg[9]_i_8_n_0 ),
        .I1(shift_amount[4]),
        .I2(shift_amount[1]),
        .I3(\shift_reg_reg[11]_i_9_n_0 ),
        .O(\shift_reg_reg[9]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFF33CC00B8B8B8B8)) 
    \shift_reg_reg[9]_i_6 
       (.I0(\shift_reg_reg[25]_i_12_n_0 ),
        .I1(shift_amount[4]),
        .I2(\shift_reg_reg[25]_i_11_n_0 ),
        .I3(\shift_reg_reg[27]_i_12_n_0 ),
        .I4(\shift_reg_reg[27]_i_11_n_0 ),
        .I5(shift_amount[1]),
        .O(\shift_reg_reg[9]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \shift_reg_reg[9]_i_7 
       (.I0(\shift_reg_reg[11]_i_10_n_0 ),
        .I1(shift_amount[1]),
        .I2(\shift_reg_reg[9]_i_9_n_0 ),
        .O(\shift_reg_reg[9]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'h00000000D8FFD800)) 
    \shift_reg_reg[9]_i_8 
       (.I0(\shift_reg_reg[0]_i_5_n_0 ),
        .I1(Q[2]),
        .I2(\ir_reg_reg_n_0_[2] ),
        .I3(shift_amount[2]),
        .I4(\shift_reg_reg[31]_i_30_n_0 ),
        .I5(shift_amount[3]),
        .O(\shift_reg_reg[9]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h00B8FFFF00B80000)) 
    \shift_reg_reg[9]_i_9 
       (.I0(\shift_reg_reg[29]_i_8_n_0 ),
        .I1(shift_amount[2]),
        .I2(\shift_reg_reg[9]_i_10_n_0 ),
        .I3(shift_amount[3]),
        .I4(shift_amount[4]),
        .I5(\shift_reg_reg[25]_i_11_n_0 ),
        .O(\shift_reg_reg[9]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'h0404040604050406)) 
    \type_of_dt_ins_reg[0]_i_1 
       (.I0(ir_out[20]),
        .I1(ir_out[26]),
        .I2(ir_out[27]),
        .I3(\type_of_dt_ins_reg[2]_i_3_n_0 ),
        .I4(ir_out[5]),
        .I5(ir_out[6]),
        .O(\register_array_reg[0][30] [0]));
  LUT6 #(
    .INIT(64'h6000000050000000)) 
    \type_of_dt_ins_reg[1]_i_1 
       (.I0(ir_out[6]),
        .I1(ir_out[5]),
        .I2(ir_out[4]),
        .I3(ir_out[7]),
        .I4(\type_of_dt_ins_reg[1]_i_2_n_0 ),
        .I5(ir_out[20]),
        .O(\register_array_reg[0][30] [1]));
  LUT2 #(
    .INIT(4'h1)) 
    \type_of_dt_ins_reg[1]_i_2 
       (.I0(ir_out[27]),
        .I1(ir_out[26]),
        .O(\type_of_dt_ins_reg[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h1010101012111011)) 
    \type_of_dt_ins_reg[2]_i_1 
       (.I0(ir_out[20]),
        .I1(ir_out[27]),
        .I2(ir_out[26]),
        .I3(ir_out[6]),
        .I4(ir_out[5]),
        .I5(\type_of_dt_ins_reg[2]_i_3_n_0 ),
        .O(\register_array_reg[0][30] [2]));
  LUT5 #(
    .INIT(32'h0C0C0E0F)) 
    \type_of_dt_ins_reg[2]_i_2 
       (.I0(ir_out[20]),
        .I1(ir_out[26]),
        .I2(ir_out[27]),
        .I3(ir_out[6]),
        .I4(\type_of_dt_ins_reg[2]_i_3_n_0 ),
        .O(E));
  LUT2 #(
    .INIT(4'h7)) 
    \type_of_dt_ins_reg[2]_i_3 
       (.I0(ir_out[4]),
        .I1(ir_out[7]),
        .O(\type_of_dt_ins_reg[2]_i_3_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[0] 
       (.CLR(1'b0),
        .D(rd1[0]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[0]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[10] 
       (.CLR(1'b0),
        .D(rd1[10]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[10]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[11] 
       (.CLR(1'b0),
        .D(rd1[11]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[11]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[12] 
       (.CLR(1'b0),
        .D(rd1[12]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[12]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[13] 
       (.CLR(1'b0),
        .D(rd1[13]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[13]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[14] 
       (.CLR(1'b0),
        .D(rd1[14]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[14]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[15] 
       (.CLR(1'b0),
        .D(rd1[15]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[15]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[16] 
       (.CLR(1'b0),
        .D(rd1[16]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[16]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[17] 
       (.CLR(1'b0),
        .D(rd1[17]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[17]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[18] 
       (.CLR(1'b0),
        .D(rd1[18]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[18]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[19] 
       (.CLR(1'b0),
        .D(rd1[19]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[19]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[1] 
       (.CLR(1'b0),
        .D(rd1[1]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[1]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[20] 
       (.CLR(1'b0),
        .D(rd1[20]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[20]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[21] 
       (.CLR(1'b0),
        .D(rd1[21]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[21]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[22] 
       (.CLR(1'b0),
        .D(rd1[22]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[22]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[23] 
       (.CLR(1'b0),
        .D(rd1[23]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[23]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[24] 
       (.CLR(1'b0),
        .D(rd1[24]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[24]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[25] 
       (.CLR(1'b0),
        .D(rd1[25]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[25]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[26] 
       (.CLR(1'b0),
        .D(rd1[26]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[26]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[27] 
       (.CLR(1'b0),
        .D(rd1[27]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[27]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[28] 
       (.CLR(1'b0),
        .D(rd1[28]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[28]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[29] 
       (.CLR(1'b0),
        .D(rd1[29]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[29]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[2] 
       (.CLR(1'b0),
        .D(rd1[2]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[2]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[30] 
       (.CLR(1'b0),
        .D(rd1[30]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[30]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[31] 
       (.CLR(1'b0),
        .D(rd1[31]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[31]));
  LUT4 #(
    .INIT(16'h0002)) 
    \x_reg_reg[31]_i_2 
       (.I0(out[1]),
        .I1(out[2]),
        .I2(out[3]),
        .I3(out[0]),
        .O(output_big__0));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[3] 
       (.CLR(1'b0),
        .D(rd1[3]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[3]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[4] 
       (.CLR(1'b0),
        .D(rd1[4]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[4]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[5] 
       (.CLR(1'b0),
        .D(rd1[5]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[5]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[6] 
       (.CLR(1'b0),
        .D(rd1[6]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[6]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[7] 
       (.CLR(1'b0),
        .D(rd1[7]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[7]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[8] 
       (.CLR(1'b0),
        .D(rd1[8]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[8]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \x_reg_reg[9] 
       (.CLR(1'b0),
        .D(rd1[9]),
        .G(\FSM_sequential_state_reg[1]_11 ),
        .GE(1'b1),
        .Q(x_reg[9]));
endmodule

module MainCtrl
   (RW,
    Asrc2,
    \pc_reg[0] ,
    \pc_reg[0]_0 ,
    \register_array_reg[0][23] ,
    Q,
    \register_array_reg[0][6] ,
    \register_array_reg[0][30] ,
    \pc_reg[27] ,
    \pc_reg[27]_0 ,
    \pc_reg[26] ,
    \register_array_reg[0][0] ,
    \register_array_reg[0][14] ,
    \register_array_reg[0][15] ,
    \register_array_reg[0][15]_0 ,
    \register_array_reg[0][31] ,
    \register_array_reg[0][23]_0 ,
    \register_array_reg[0][31]_0 ,
    \register_array_reg[0][23]_1 ,
    \register_array_reg[0][23]_2 ,
    \register_array_reg[0][6]_0 ,
    op2,
    \pc_reg[3] ,
    \pc_reg[3]_0 ,
    \FSM_sequential_state_reg[3] ,
    \FSM_sequential_state_reg[0] ,
    D,
    out,
    Rsrc,
    \FSM_sequential_state_reg[1] ,
    MW,
    \FSM_sequential_state_reg[1]_0 ,
    \FSM_sequential_state_reg[0]_0 ,
    \FSM_sequential_state_reg[0]_1 ,
    \FSM_sequential_state_reg[0]_2 ,
    \FSM_sequential_state_reg[2] ,
    op1,
    CO,
    byte_offset,
    \FSM_sequential_state_reg[1]_1 ,
    \FSM_sequential_state_reg[0]_3 ,
    \FSM_sequential_state_reg[0]_4 ,
    output_big__2,
    \FSM_sequential_state_reg[1]_2 ,
    \FSM_sequential_state_reg[1]_3 ,
    E,
    CLK,
    AR);
  output RW;
  output [1:0]Asrc2;
  output \pc_reg[0] ;
  output \pc_reg[0]_0 ;
  output \register_array_reg[0][23] ;
  output [2:0]Q;
  output \register_array_reg[0][6] ;
  output [21:0]\register_array_reg[0][30] ;
  output \pc_reg[27] ;
  output \pc_reg[27]_0 ;
  output \pc_reg[26] ;
  output \register_array_reg[0][0] ;
  output \register_array_reg[0][14] ;
  output \register_array_reg[0][15] ;
  output \register_array_reg[0][15]_0 ;
  output \register_array_reg[0][31] ;
  output \register_array_reg[0][23]_0 ;
  output \register_array_reg[0][31]_0 ;
  output [7:0]\register_array_reg[0][23]_1 ;
  output \register_array_reg[0][23]_2 ;
  output \register_array_reg[0][6]_0 ;
  output [28:0]op2;
  output \pc_reg[3] ;
  output \pc_reg[3]_0 ;
  input \FSM_sequential_state_reg[3] ;
  input \FSM_sequential_state_reg[0] ;
  input [0:0]D;
  input [3:0]out;
  input Rsrc;
  input \FSM_sequential_state_reg[1] ;
  input MW;
  input \FSM_sequential_state_reg[1]_0 ;
  input \FSM_sequential_state_reg[0]_0 ;
  input [31:0]\FSM_sequential_state_reg[0]_1 ;
  input \FSM_sequential_state_reg[0]_2 ;
  input [0:0]\FSM_sequential_state_reg[2] ;
  input [1:0]op1;
  input [0:0]CO;
  input [1:0]byte_offset;
  input [15:0]\FSM_sequential_state_reg[1]_1 ;
  input \FSM_sequential_state_reg[0]_3 ;
  input [28:0]\FSM_sequential_state_reg[0]_4 ;
  input [28:0]output_big__2;
  input [22:0]\FSM_sequential_state_reg[1]_2 ;
  input [2:0]\FSM_sequential_state_reg[1]_3 ;
  input [0:0]E;
  input CLK;
  input [0:0]AR;

  wire [0:0]AR;
  wire [1:0]Asrc2;
  wire CLK;
  wire [0:0]CO;
  wire [0:0]D;
  wire [0:0]E;
  wire \FSM_sequential_state_reg[0] ;
  wire \FSM_sequential_state_reg[0]_0 ;
  wire [31:0]\FSM_sequential_state_reg[0]_1 ;
  wire \FSM_sequential_state_reg[0]_2 ;
  wire \FSM_sequential_state_reg[0]_3 ;
  wire [28:0]\FSM_sequential_state_reg[0]_4 ;
  wire \FSM_sequential_state_reg[1] ;
  wire \FSM_sequential_state_reg[1]_0 ;
  wire [15:0]\FSM_sequential_state_reg[1]_1 ;
  wire [22:0]\FSM_sequential_state_reg[1]_2 ;
  wire [2:0]\FSM_sequential_state_reg[1]_3 ;
  wire [0:0]\FSM_sequential_state_reg[2] ;
  wire \FSM_sequential_state_reg[3] ;
  wire MW;
  wire [2:0]Q;
  wire RW;
  wire Rsrc;
  wire [1:0]byte_offset;
  wire \d_reg_reg[15]_i_5_n_0 ;
  wire \d_reg_reg[7]_i_2_n_0 ;
  wire \d_reg_reg[7]_i_3_n_0 ;
  wire [1:0]op1;
  wire [28:0]op2;
  wire [3:0]out;
  wire [28:0]output_big__2;
  wire \pc_reg[0] ;
  wire \pc_reg[0]_0 ;
  wire \pc_reg[26] ;
  wire \pc_reg[27] ;
  wire \pc_reg[27]_0 ;
  wire \pc_reg[3] ;
  wire \pc_reg[3]_0 ;
  wire [3:0]prev_state;
  wire \register_array_reg[0][0] ;
  wire \register_array_reg[0][14] ;
  wire \register_array_reg[0][15] ;
  wire \register_array_reg[0][15]_0 ;
  wire \register_array_reg[0][23] ;
  wire \register_array_reg[0][23]_0 ;
  wire [7:0]\register_array_reg[0][23]_1 ;
  wire \register_array_reg[0][23]_2 ;
  wire [21:0]\register_array_reg[0][30] ;
  wire \register_array_reg[0][31] ;
  wire \register_array_reg[0][31]_0 ;
  wire \register_array_reg[0][6] ;
  wire \register_array_reg[0][6]_0 ;
  wire \res_reg[26]_i_10_n_0 ;
  wire \res_reg[26]_i_11_n_0 ;
  wire \res_reg[27]_i_14_n_0 ;
  wire \res_reg[27]_i_15_n_0 ;
  wire [2:0]state;

  LUT6 #(
    .INIT(64'h1111111110111101)) 
    C_reg_i_11
       (.I0(\FSM_sequential_state_reg[1] ),
        .I1(Rsrc),
        .I2(prev_state[2]),
        .I3(prev_state[1]),
        .I4(prev_state[0]),
        .I5(prev_state[3]),
        .O(\pc_reg[27]_0 ));
  LUT6 #(
    .INIT(64'h4444444445444444)) 
    C_reg_i_13
       (.I0(\FSM_sequential_state_reg[1] ),
        .I1(Rsrc),
        .I2(prev_state[2]),
        .I3(prev_state[1]),
        .I4(prev_state[0]),
        .I5(prev_state[3]),
        .O(\pc_reg[3] ));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    C_reg_i_14
       (.I0(Rsrc),
        .I1(prev_state[0]),
        .I2(prev_state[2]),
        .I3(prev_state[1]),
        .I4(prev_state[3]),
        .I5(\FSM_sequential_state_reg[1] ),
        .O(\pc_reg[3]_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    C_reg_i_8
       (.I0(\pc_reg[27]_0 ),
        .I1(CO),
        .I2(\pc_reg[3] ),
        .I3(\FSM_sequential_state_reg[0]_4 [28]),
        .I4(output_big__2[28]),
        .I5(\pc_reg[3]_0 ),
        .O(op2[28]));
  LUT5 #(
    .INIT(32'hAAEAAA2A)) 
    RAM_reg_0_127_10_10_i_1
       (.I0(\FSM_sequential_state_reg[1]_1 [10]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\FSM_sequential_state_reg[1]_1 [2]),
        .O(\register_array_reg[0][23]_1 [2]));
  LUT5 #(
    .INIT(32'hAAEAAA2A)) 
    RAM_reg_0_127_11_11_i_1
       (.I0(\FSM_sequential_state_reg[1]_1 [11]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\FSM_sequential_state_reg[1]_1 [3]),
        .O(\register_array_reg[0][23]_1 [3]));
  LUT5 #(
    .INIT(32'hAAEAAA2A)) 
    RAM_reg_0_127_12_12_i_1
       (.I0(\FSM_sequential_state_reg[1]_1 [12]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\FSM_sequential_state_reg[1]_1 [4]),
        .O(\register_array_reg[0][23]_1 [4]));
  LUT5 #(
    .INIT(32'hAAEAAA2A)) 
    RAM_reg_0_127_13_13_i_1
       (.I0(\FSM_sequential_state_reg[1]_1 [13]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\FSM_sequential_state_reg[1]_1 [5]),
        .O(\register_array_reg[0][23]_1 [5]));
  LUT5 #(
    .INIT(32'hAAEAAA2A)) 
    RAM_reg_0_127_14_14_i_1
       (.I0(\FSM_sequential_state_reg[1]_1 [14]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\FSM_sequential_state_reg[1]_1 [6]),
        .O(\register_array_reg[0][23]_1 [6]));
  LUT5 #(
    .INIT(32'hAAEAAA2A)) 
    RAM_reg_0_127_15_15_i_1
       (.I0(\FSM_sequential_state_reg[1]_1 [15]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\FSM_sequential_state_reg[1]_1 [7]),
        .O(\register_array_reg[0][23]_1 [7]));
  LUT6 #(
    .INIT(64'h0000A08000000000)) 
    RAM_reg_0_127_16_16_i_3
       (.I0(MW),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(\FSM_sequential_state_reg[1]_0 ),
        .I5(\FSM_sequential_state_reg[0]_0 ),
        .O(\register_array_reg[0][6] ));
  LUT5 #(
    .INIT(32'hAAEAAA2A)) 
    RAM_reg_0_127_8_8_i_1
       (.I0(\FSM_sequential_state_reg[1]_1 [8]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\FSM_sequential_state_reg[1]_1 [0]),
        .O(\register_array_reg[0][23]_1 [0]));
  LUT6 #(
    .INIT(64'h8000020000000000)) 
    RAM_reg_0_127_8_8_i_7
       (.I0(MW),
        .I1(\FSM_sequential_state_reg[1]_0 ),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .I5(\FSM_sequential_state_reg[0]_0 ),
        .O(\register_array_reg[0][23] ));
  LUT5 #(
    .INIT(32'hAAEAAA2A)) 
    RAM_reg_0_127_9_9_i_1
       (.I0(\FSM_sequential_state_reg[1]_1 [9]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\FSM_sequential_state_reg[1]_1 [1]),
        .O(\register_array_reg[0][23]_1 [1]));
  LUT2 #(
    .INIT(4'h2)) 
    RAM_reg_0_15_0_0__15_i_1
       (.I0(\register_array_reg[0][6] ),
        .I1(\FSM_sequential_state_reg[0]_3 ),
        .O(\register_array_reg[0][6]_0 ));
  LUT2 #(
    .INIT(4'h2)) 
    RAM_reg_0_15_0_0__7_i_1
       (.I0(\register_array_reg[0][23] ),
        .I1(\FSM_sequential_state_reg[0]_3 ),
        .O(\register_array_reg[0][23]_2 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    RW_reg
       (.CLR(1'b0),
        .D(\FSM_sequential_state_reg[3] ),
        .G(\FSM_sequential_state_reg[0] ),
        .GE(1'b1),
        .Q(RW));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \d_reg_reg[0]_i_1 
       (.I0(\register_array_reg[0][0] ),
        .I1(\FSM_sequential_state_reg[0]_1 [16]),
        .I2(\d_reg_reg[7]_i_2_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_1 [8]),
        .I4(\FSM_sequential_state_reg[0]_1 [0]),
        .I5(\d_reg_reg[7]_i_3_n_0 ),
        .O(\register_array_reg[0][30] [0]));
  LUT4 #(
    .INIT(16'h0200)) 
    \d_reg_reg[14]_i_2 
       (.I0(byte_offset[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .O(\register_array_reg[0][0] ));
  LUT5 #(
    .INIT(32'hD0D0D3DD)) 
    \d_reg_reg[14]_i_3 
       (.I0(byte_offset[0]),
        .I1(byte_offset[1]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(\register_array_reg[0][14] ));
  LUT6 #(
    .INIT(64'hFFFFF000F111F000)) 
    \d_reg_reg[15]_i_2 
       (.I0(\register_array_reg[0][15]_0 ),
        .I1(\FSM_sequential_state_reg[1]_0 ),
        .I2(\register_array_reg[0][0] ),
        .I3(\FSM_sequential_state_reg[0]_1 [31]),
        .I4(\FSM_sequential_state_reg[0]_1 [15]),
        .I5(\d_reg_reg[15]_i_5_n_0 ),
        .O(\register_array_reg[0][15] ));
  LUT2 #(
    .INIT(4'hB)) 
    \d_reg_reg[15]_i_3 
       (.I0(Q[2]),
        .I1(Q[1]),
        .O(\register_array_reg[0][15]_0 ));
  LUT5 #(
    .INIT(32'hF100F1F5)) 
    \d_reg_reg[15]_i_5 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .I3(byte_offset[1]),
        .I4(byte_offset[0]),
        .O(\d_reg_reg[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAB000000)) 
    \d_reg_reg[16]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\FSM_sequential_state_reg[1]_0 ),
        .I4(\FSM_sequential_state_reg[0]_1 [16]),
        .I5(\FSM_sequential_state_reg[0]_2 ),
        .O(\register_array_reg[0][30] [8]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAB000000)) 
    \d_reg_reg[17]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\FSM_sequential_state_reg[1]_0 ),
        .I4(\FSM_sequential_state_reg[0]_1 [17]),
        .I5(\FSM_sequential_state_reg[0]_2 ),
        .O(\register_array_reg[0][30] [9]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAB000000)) 
    \d_reg_reg[18]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\FSM_sequential_state_reg[1]_0 ),
        .I4(\FSM_sequential_state_reg[0]_1 [18]),
        .I5(\FSM_sequential_state_reg[0]_2 ),
        .O(\register_array_reg[0][30] [10]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAB000000)) 
    \d_reg_reg[19]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\FSM_sequential_state_reg[1]_0 ),
        .I4(\FSM_sequential_state_reg[0]_1 [19]),
        .I5(\FSM_sequential_state_reg[0]_2 ),
        .O(\register_array_reg[0][30] [11]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \d_reg_reg[1]_i_1 
       (.I0(\register_array_reg[0][0] ),
        .I1(\FSM_sequential_state_reg[0]_1 [17]),
        .I2(\d_reg_reg[7]_i_2_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_1 [9]),
        .I4(\FSM_sequential_state_reg[0]_1 [1]),
        .I5(\d_reg_reg[7]_i_3_n_0 ),
        .O(\register_array_reg[0][30] [1]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAB000000)) 
    \d_reg_reg[20]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\FSM_sequential_state_reg[1]_0 ),
        .I4(\FSM_sequential_state_reg[0]_1 [20]),
        .I5(\FSM_sequential_state_reg[0]_2 ),
        .O(\register_array_reg[0][30] [12]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAB000000)) 
    \d_reg_reg[21]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\FSM_sequential_state_reg[1]_0 ),
        .I4(\FSM_sequential_state_reg[0]_1 [21]),
        .I5(\FSM_sequential_state_reg[0]_2 ),
        .O(\register_array_reg[0][30] [13]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAB000000)) 
    \d_reg_reg[22]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\FSM_sequential_state_reg[1]_0 ),
        .I4(\FSM_sequential_state_reg[0]_1 [22]),
        .I5(\FSM_sequential_state_reg[0]_2 ),
        .O(\register_array_reg[0][30] [14]));
  LUT6 #(
    .INIT(64'hABEB00AB00000000)) 
    \d_reg_reg[23]_i_2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(byte_offset[0]),
        .I4(byte_offset[1]),
        .I5(\FSM_sequential_state_reg[0]_1 [23]),
        .O(\register_array_reg[0][23]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAB000000)) 
    \d_reg_reg[24]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\FSM_sequential_state_reg[1]_0 ),
        .I4(\FSM_sequential_state_reg[0]_1 [24]),
        .I5(\FSM_sequential_state_reg[0]_2 ),
        .O(\register_array_reg[0][30] [15]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAB000000)) 
    \d_reg_reg[25]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\FSM_sequential_state_reg[1]_0 ),
        .I4(\FSM_sequential_state_reg[0]_1 [25]),
        .I5(\FSM_sequential_state_reg[0]_2 ),
        .O(\register_array_reg[0][30] [16]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAB000000)) 
    \d_reg_reg[26]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\FSM_sequential_state_reg[1]_0 ),
        .I4(\FSM_sequential_state_reg[0]_1 [26]),
        .I5(\FSM_sequential_state_reg[0]_2 ),
        .O(\register_array_reg[0][30] [17]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAB000000)) 
    \d_reg_reg[27]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\FSM_sequential_state_reg[1]_0 ),
        .I4(\FSM_sequential_state_reg[0]_1 [27]),
        .I5(\FSM_sequential_state_reg[0]_2 ),
        .O(\register_array_reg[0][30] [18]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAB000000)) 
    \d_reg_reg[28]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\FSM_sequential_state_reg[1]_0 ),
        .I4(\FSM_sequential_state_reg[0]_1 [28]),
        .I5(\FSM_sequential_state_reg[0]_2 ),
        .O(\register_array_reg[0][30] [19]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAB000000)) 
    \d_reg_reg[29]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\FSM_sequential_state_reg[1]_0 ),
        .I4(\FSM_sequential_state_reg[0]_1 [29]),
        .I5(\FSM_sequential_state_reg[0]_2 ),
        .O(\register_array_reg[0][30] [20]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \d_reg_reg[2]_i_1 
       (.I0(\register_array_reg[0][0] ),
        .I1(\FSM_sequential_state_reg[0]_1 [18]),
        .I2(\d_reg_reg[7]_i_2_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_1 [10]),
        .I4(\FSM_sequential_state_reg[0]_1 [2]),
        .I5(\d_reg_reg[7]_i_3_n_0 ),
        .O(\register_array_reg[0][30] [2]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAB000000)) 
    \d_reg_reg[30]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(\FSM_sequential_state_reg[1]_0 ),
        .I4(\FSM_sequential_state_reg[0]_1 [30]),
        .I5(\FSM_sequential_state_reg[0]_2 ),
        .O(\register_array_reg[0][30] [21]));
  LUT6 #(
    .INIT(64'hEB00ABAB00000000)) 
    \d_reg_reg[31]_i_3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(byte_offset[1]),
        .I4(byte_offset[0]),
        .I5(\FSM_sequential_state_reg[0]_1 [31]),
        .O(\register_array_reg[0][31]_0 ));
  LUT3 #(
    .INIT(8'h08)) 
    \d_reg_reg[31]_i_6 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\register_array_reg[0][31] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \d_reg_reg[3]_i_1 
       (.I0(\register_array_reg[0][0] ),
        .I1(\FSM_sequential_state_reg[0]_1 [19]),
        .I2(\d_reg_reg[7]_i_2_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_1 [11]),
        .I4(\FSM_sequential_state_reg[0]_1 [3]),
        .I5(\d_reg_reg[7]_i_3_n_0 ),
        .O(\register_array_reg[0][30] [3]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \d_reg_reg[4]_i_1 
       (.I0(\register_array_reg[0][0] ),
        .I1(\FSM_sequential_state_reg[0]_1 [20]),
        .I2(\d_reg_reg[7]_i_2_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_1 [12]),
        .I4(\FSM_sequential_state_reg[0]_1 [4]),
        .I5(\d_reg_reg[7]_i_3_n_0 ),
        .O(\register_array_reg[0][30] [4]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \d_reg_reg[5]_i_1 
       (.I0(\register_array_reg[0][0] ),
        .I1(\FSM_sequential_state_reg[0]_1 [21]),
        .I2(\d_reg_reg[7]_i_2_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_1 [13]),
        .I4(\FSM_sequential_state_reg[0]_1 [5]),
        .I5(\d_reg_reg[7]_i_3_n_0 ),
        .O(\register_array_reg[0][30] [5]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \d_reg_reg[6]_i_1 
       (.I0(\register_array_reg[0][0] ),
        .I1(\FSM_sequential_state_reg[0]_1 [22]),
        .I2(\d_reg_reg[7]_i_2_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_1 [14]),
        .I4(\FSM_sequential_state_reg[0]_1 [6]),
        .I5(\d_reg_reg[7]_i_3_n_0 ),
        .O(\register_array_reg[0][30] [6]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \d_reg_reg[7]_i_1 
       (.I0(\register_array_reg[0][0] ),
        .I1(\FSM_sequential_state_reg[0]_1 [23]),
        .I2(\d_reg_reg[7]_i_2_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_1 [15]),
        .I4(\FSM_sequential_state_reg[0]_1 [7]),
        .I5(\d_reg_reg[7]_i_3_n_0 ),
        .O(\register_array_reg[0][30] [7]));
  LUT4 #(
    .INIT(16'h00EF)) 
    \d_reg_reg[7]_i_2 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(\FSM_sequential_state_reg[1]_0 ),
        .O(\d_reg_reg[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hDDD3DDDD)) 
    \d_reg_reg[7]_i_3 
       (.I0(byte_offset[0]),
        .I1(byte_offset[1]),
        .I2(Q[0]),
        .I3(Q[2]),
        .I4(Q[1]),
        .O(\d_reg_reg[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT4 #(
    .INIT(16'h7F00)) 
    \prev_state[0]_i_1 
       (.I0(out[1]),
        .I1(out[3]),
        .I2(out[2]),
        .I3(out[0]),
        .O(state[0]));
  LUT3 #(
    .INIT(8'h70)) 
    \prev_state[1]_i_1 
       (.I0(out[2]),
        .I1(out[3]),
        .I2(out[1]),
        .O(state[1]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT3 #(
    .INIT(8'h70)) 
    \prev_state[2]_i_1 
       (.I0(out[3]),
        .I1(out[1]),
        .I2(out[2]),
        .O(state[2]));
  FDCE #(
    .INIT(1'b0)) 
    \prev_state_reg[0] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(state[0]),
        .Q(prev_state[0]));
  FDCE #(
    .INIT(1'b0)) 
    \prev_state_reg[1] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(state[1]),
        .Q(prev_state[1]));
  FDCE #(
    .INIT(1'b0)) 
    \prev_state_reg[2] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(state[2]),
        .Q(prev_state[2]));
  FDCE #(
    .INIT(1'b0)) 
    \prev_state_reg[3] 
       (.C(CLK),
        .CE(1'b1),
        .CLR(AR),
        .D(D),
        .Q(prev_state[3]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[10]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [7]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[7]),
        .I4(\FSM_sequential_state_reg[1]_2 [7]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[7]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[11]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [8]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[8]),
        .I4(\FSM_sequential_state_reg[1]_2 [8]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[8]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[12]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [9]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[9]),
        .I4(\FSM_sequential_state_reg[1]_2 [9]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[9]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[13]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [10]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[10]),
        .I4(\FSM_sequential_state_reg[1]_2 [10]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[10]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[14]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [11]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[11]),
        .I4(\FSM_sequential_state_reg[1]_2 [11]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[11]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[15]_i_9 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [12]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[12]),
        .I4(\FSM_sequential_state_reg[1]_2 [12]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[12]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[16]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [13]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[13]),
        .I4(\FSM_sequential_state_reg[1]_2 [13]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[13]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[17]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [14]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[14]),
        .I4(\FSM_sequential_state_reg[1]_2 [14]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[14]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[18]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [15]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[15]),
        .I4(\FSM_sequential_state_reg[1]_2 [15]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[15]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[19]_i_9 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [16]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[16]),
        .I4(\FSM_sequential_state_reg[1]_2 [16]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[16]));
  LUT4 #(
    .INIT(16'h0010)) 
    \res_reg[1]_i_8 
       (.I0(prev_state[3]),
        .I1(prev_state[1]),
        .I2(prev_state[2]),
        .I3(prev_state[0]),
        .O(\pc_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h0040)) 
    \res_reg[1]_i_9 
       (.I0(prev_state[3]),
        .I1(prev_state[0]),
        .I2(prev_state[1]),
        .I3(prev_state[2]),
        .O(\pc_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[20]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [17]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[17]),
        .I4(\FSM_sequential_state_reg[1]_2 [17]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[17]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[21]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [18]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[18]),
        .I4(\FSM_sequential_state_reg[1]_2 [18]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[18]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[22]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [19]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[19]),
        .I4(\FSM_sequential_state_reg[1]_2 [19]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[19]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[23]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [20]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[20]),
        .I4(\FSM_sequential_state_reg[1]_2 [20]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[20]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[24]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [21]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[21]),
        .I4(\FSM_sequential_state_reg[1]_2 [21]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[21]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[25]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [22]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[22]),
        .I4(\FSM_sequential_state_reg[1]_2 [22]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[22]));
  LUT5 #(
    .INIT(32'h00040000)) 
    \res_reg[26]_i_10 
       (.I0(\FSM_sequential_state_reg[1] ),
        .I1(\pc_reg[0]_0 ),
        .I2(Rsrc),
        .I3(\pc_reg[0] ),
        .I4(output_big__2[23]),
        .O(\res_reg[26]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h0E00)) 
    \res_reg[26]_i_11 
       (.I0(\pc_reg[0] ),
        .I1(Rsrc),
        .I2(\FSM_sequential_state_reg[1] ),
        .I3(\FSM_sequential_state_reg[0]_4 [23]),
        .O(\res_reg[26]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \res_reg[26]_i_7 
       (.I0(\pc_reg[27]_0 ),
        .I1(CO),
        .I2(\pc_reg[3] ),
        .I3(\FSM_sequential_state_reg[0]_4 [23]),
        .I4(output_big__2[23]),
        .I5(\pc_reg[3]_0 ),
        .O(op2[23]));
  LUT6 #(
    .INIT(64'h6668666666686668)) 
    \res_reg[26]_i_9 
       (.I0(\FSM_sequential_state_reg[2] ),
        .I1(op1[0]),
        .I2(\res_reg[26]_i_10_n_0 ),
        .I3(\res_reg[26]_i_11_n_0 ),
        .I4(CO),
        .I5(\pc_reg[27]_0 ),
        .O(\pc_reg[26] ));
  LUT5 #(
    .INIT(32'h00040000)) 
    \res_reg[27]_i_14 
       (.I0(\FSM_sequential_state_reg[1] ),
        .I1(\pc_reg[0]_0 ),
        .I2(Rsrc),
        .I3(\pc_reg[0] ),
        .I4(output_big__2[24]),
        .O(\res_reg[27]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h0E00)) 
    \res_reg[27]_i_15 
       (.I0(\pc_reg[0] ),
        .I1(Rsrc),
        .I2(\FSM_sequential_state_reg[1] ),
        .I3(\FSM_sequential_state_reg[0]_4 [24]),
        .O(\res_reg[27]_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \res_reg[27]_i_7 
       (.I0(\pc_reg[27]_0 ),
        .I1(CO),
        .I2(\pc_reg[3] ),
        .I3(\FSM_sequential_state_reg[0]_4 [24]),
        .I4(output_big__2[24]),
        .I5(\pc_reg[3]_0 ),
        .O(op2[24]));
  LUT6 #(
    .INIT(64'h6668666666686668)) 
    \res_reg[27]_i_9 
       (.I0(\FSM_sequential_state_reg[2] ),
        .I1(op1[1]),
        .I2(\res_reg[27]_i_14_n_0 ),
        .I3(\res_reg[27]_i_15_n_0 ),
        .I4(CO),
        .I5(\pc_reg[27]_0 ),
        .O(\pc_reg[27] ));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \res_reg[28]_i_7 
       (.I0(\pc_reg[27]_0 ),
        .I1(CO),
        .I2(\pc_reg[3] ),
        .I3(\FSM_sequential_state_reg[0]_4 [25]),
        .I4(output_big__2[25]),
        .I5(\pc_reg[3]_0 ),
        .O(op2[25]));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \res_reg[29]_i_7 
       (.I0(\pc_reg[27]_0 ),
        .I1(CO),
        .I2(\pc_reg[3] ),
        .I3(\FSM_sequential_state_reg[0]_4 [26]),
        .I4(output_big__2[26]),
        .I5(\pc_reg[3]_0 ),
        .O(op2[26]));
  LUT6 #(
    .INIT(64'hAAAAAAAAFFEFFEFF)) 
    \res_reg[2]_i_8 
       (.I0(\FSM_sequential_state_reg[1] ),
        .I1(prev_state[3]),
        .I2(prev_state[1]),
        .I3(prev_state[2]),
        .I4(prev_state[0]),
        .I5(Rsrc),
        .O(Asrc2[0]));
  LUT6 #(
    .INIT(64'h000000000000FFBF)) 
    \res_reg[2]_i_9 
       (.I0(prev_state[3]),
        .I1(prev_state[0]),
        .I2(prev_state[1]),
        .I3(prev_state[2]),
        .I4(Rsrc),
        .I5(\FSM_sequential_state_reg[1] ),
        .O(Asrc2[1]));
  LUT6 #(
    .INIT(64'hFFFFF222F222F222)) 
    \res_reg[30]_i_7 
       (.I0(\pc_reg[27]_0 ),
        .I1(CO),
        .I2(\pc_reg[3] ),
        .I3(\FSM_sequential_state_reg[0]_4 [27]),
        .I4(output_big__2[27]),
        .I5(\pc_reg[3]_0 ),
        .O(op2[27]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[3]_i_9 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [0]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[0]),
        .I4(\FSM_sequential_state_reg[1]_2 [0]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[0]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[4]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [1]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[1]),
        .I4(\FSM_sequential_state_reg[1]_2 [1]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[1]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[5]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [2]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[2]),
        .I4(\FSM_sequential_state_reg[1]_2 [2]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[2]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[6]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [3]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[3]),
        .I4(\FSM_sequential_state_reg[1]_2 [3]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[3]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[7]_i_9 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [4]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[4]),
        .I4(\FSM_sequential_state_reg[1]_2 [4]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[4]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[8]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [5]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[5]),
        .I4(\FSM_sequential_state_reg[1]_2 [5]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[5]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \res_reg[9]_i_7 
       (.I0(\pc_reg[3] ),
        .I1(\FSM_sequential_state_reg[0]_4 [6]),
        .I2(\pc_reg[3]_0 ),
        .I3(output_big__2[6]),
        .I4(\FSM_sequential_state_reg[1]_2 [6]),
        .I5(\pc_reg[27]_0 ),
        .O(op2[6]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \type_of_dt_ins_reg[0] 
       (.CLR(1'b0),
        .D(\FSM_sequential_state_reg[1]_3 [0]),
        .G(E),
        .GE(1'b1),
        .Q(Q[0]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \type_of_dt_ins_reg[1] 
       (.CLR(1'b0),
        .D(\FSM_sequential_state_reg[1]_3 [1]),
        .G(E),
        .GE(1'b1),
        .Q(Q[1]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \type_of_dt_ins_reg[2] 
       (.CLR(1'b0),
        .D(\FSM_sequential_state_reg[1]_3 [2]),
        .G(E),
        .GE(1'b1),
        .Q(Q[2]));
endmodule

module Multiplier
   (\pc_reg[0] ,
    D,
    \pc_reg[0]_0 ,
    flags_sig,
    Fset,
    Q,
    \FSM_sequential_state_reg[1] );
  output \pc_reg[0] ;
  output [31:0]D;
  output [0:0]\pc_reg[0]_0 ;
  input [0:0]flags_sig;
  input Fset;
  input [31:0]Q;
  input [31:0]\FSM_sequential_state_reg[1] ;

  wire [31:0]D;
  wire [31:0]\FSM_sequential_state_reg[1] ;
  wire Fset;
  wire [31:0]Q;
  wire Z_reg_i_17_n_0;
  wire Z_reg_i_18_n_0;
  wire Z_reg_i_19_n_0;
  wire Z_reg_i_20_n_0;
  wire Z_reg_i_35_n_0;
  wire Z_reg_i_36_n_0;
  wire Z_reg_i_38_n_0;
  wire Z_reg_i_39_n_0;
  wire Z_reg_i_40_n_0;
  wire Z_reg_i_41_n_0;
  wire Z_reg_i_42_n_0;
  wire Z_reg_i_43_n_0;
  wire Z_reg_i_44_n_0;
  wire Z_reg_i_45_n_0;
  wire Z_reg_i_47_n_0;
  wire Z_reg_i_48_n_0;
  wire Z_reg_i_49_n_0;
  wire Z_reg_i_50_n_0;
  wire Z_reg_i_51_n_0;
  wire Z_reg_i_52_n_0;
  wire Z_reg_i_53_n_0;
  wire Z_reg_i_54_n_0;
  wire Z_reg_i_55_n_0;
  wire Z_reg_i_56_n_0;
  wire Z_reg_i_57_n_0;
  wire Z_reg_i_58_n_0;
  wire Z_reg_i_59_n_0;
  wire Z_reg_i_60_n_0;
  wire Z_reg_i_61_n_0;
  wire Z_reg_i_62_n_0;
  wire Z_reg_i_63_n_0;
  wire Z_reg_i_64_n_0;
  wire Z_reg_i_65_n_0;
  wire Z_reg_i_66_n_0;
  wire Z_reg_i_67_n_0;
  wire Z_reg_i_68_n_0;
  wire Z_reg_i_69_n_0;
  wire Z_reg_i_70_n_0;
  wire Z_reg_i_71_n_0;
  wire Z_reg_i_72_n_0;
  wire Z_reg_i_73_n_0;
  wire Z_reg_i_74_n_0;
  wire Z_reg_i_75_n_0;
  wire Z_reg_i_76_n_0;
  wire Z_reg_i_77_n_0;
  wire Z_reg_i_78_n_0;
  wire Z_reg_i_79_n_0;
  wire Z_reg_i_80_n_0;
  wire Z_reg_i_81_n_0;
  wire Z_reg_i_82_n_0;
  wire Z_reg_i_83_n_0;
  wire [0:0]flags_sig;
  wire \mult_reg_reg[19]_i_1_n_0 ;
  wire \mult_reg_reg[19]_i_2_n_0 ;
  wire \mult_reg_reg[19]_i_3_n_0 ;
  wire \mult_reg_reg[19]_i_4_n_0 ;
  wire \mult_reg_reg[23]_i_1_n_0 ;
  wire \mult_reg_reg[23]_i_2_n_0 ;
  wire \mult_reg_reg[23]_i_3_n_0 ;
  wire \mult_reg_reg[23]_i_4_n_0 ;
  wire \mult_reg_reg[23]_i_5_n_0 ;
  wire \mult_reg_reg[27]_i_1_n_0 ;
  wire \mult_reg_reg[27]_i_2_n_0 ;
  wire \mult_reg_reg[27]_i_3_n_0 ;
  wire \mult_reg_reg[27]_i_4_n_0 ;
  wire \mult_reg_reg[27]_i_5_n_0 ;
  wire \mult_reg_reg[31]_i_1_n_0 ;
  wire \mult_reg_reg[31]_i_3_n_0 ;
  wire \mult_reg_reg[31]_i_4_n_0 ;
  wire \mult_reg_reg[31]_i_5_n_0 ;
  wire \mult_reg_reg[31]_i_6_n_0 ;
  wire output_big__1_n_106;
  wire output_big__1_n_107;
  wire output_big__1_n_108;
  wire output_big__1_n_109;
  wire output_big__1_n_110;
  wire output_big__1_n_111;
  wire output_big__1_n_112;
  wire output_big__1_n_113;
  wire output_big__1_n_114;
  wire output_big__1_n_115;
  wire output_big__1_n_116;
  wire output_big__1_n_117;
  wire output_big__1_n_118;
  wire output_big__1_n_119;
  wire output_big__1_n_120;
  wire output_big__1_n_121;
  wire output_big__1_n_122;
  wire output_big__1_n_123;
  wire output_big__1_n_124;
  wire output_big__1_n_125;
  wire output_big__1_n_126;
  wire output_big__1_n_127;
  wire output_big__1_n_128;
  wire output_big__1_n_129;
  wire output_big__1_n_130;
  wire output_big__1_n_131;
  wire output_big__1_n_132;
  wire output_big__1_n_133;
  wire output_big__1_n_134;
  wire output_big__1_n_135;
  wire output_big__1_n_136;
  wire output_big__1_n_137;
  wire output_big__1_n_138;
  wire output_big__1_n_139;
  wire output_big__1_n_140;
  wire output_big__1_n_141;
  wire output_big__1_n_142;
  wire output_big__1_n_143;
  wire output_big__1_n_144;
  wire output_big__1_n_145;
  wire output_big__1_n_146;
  wire output_big__1_n_147;
  wire output_big__1_n_148;
  wire output_big__1_n_149;
  wire output_big__1_n_150;
  wire output_big__1_n_151;
  wire output_big__1_n_152;
  wire output_big__1_n_153;
  wire output_big_n_106;
  wire output_big_n_107;
  wire output_big_n_108;
  wire output_big_n_109;
  wire output_big_n_110;
  wire output_big_n_111;
  wire output_big_n_112;
  wire output_big_n_113;
  wire output_big_n_114;
  wire output_big_n_115;
  wire output_big_n_116;
  wire output_big_n_117;
  wire output_big_n_118;
  wire output_big_n_119;
  wire output_big_n_120;
  wire output_big_n_121;
  wire output_big_n_122;
  wire output_big_n_123;
  wire output_big_n_124;
  wire output_big_n_125;
  wire output_big_n_126;
  wire output_big_n_127;
  wire output_big_n_128;
  wire output_big_n_129;
  wire output_big_n_130;
  wire output_big_n_131;
  wire output_big_n_132;
  wire output_big_n_133;
  wire output_big_n_134;
  wire output_big_n_135;
  wire output_big_n_136;
  wire output_big_n_137;
  wire output_big_n_138;
  wire output_big_n_139;
  wire output_big_n_140;
  wire output_big_n_141;
  wire output_big_n_142;
  wire output_big_n_143;
  wire output_big_n_144;
  wire output_big_n_145;
  wire output_big_n_146;
  wire output_big_n_147;
  wire output_big_n_148;
  wire output_big_n_149;
  wire output_big_n_150;
  wire output_big_n_151;
  wire output_big_n_152;
  wire output_big_n_153;
  wire [63:17]p_0_in;
  wire [63:16]p_1_in;
  wire \pc_reg[0] ;
  wire [0:0]\pc_reg[0]_0 ;
  wire [63:32]sel0;
  wire [3:0]NLW_Z_reg_i_37_CO_UNCONNECTED;
  wire [2:0]NLW_Z_reg_i_38_CO_UNCONNECTED;
  wire [2:0]NLW_Z_reg_i_39_CO_UNCONNECTED;
  wire [2:0]NLW_Z_reg_i_55_CO_UNCONNECTED;
  wire [2:0]NLW_Z_reg_i_60_CO_UNCONNECTED;
  wire [2:0]NLW_Z_reg_i_61_CO_UNCONNECTED;
  wire [2:0]NLW_Z_reg_i_62_CO_UNCONNECTED;
  wire [2:0]NLW_Z_reg_i_63_CO_UNCONNECTED;
  wire [2:0]\NLW_mult_reg_reg[19]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_mult_reg_reg[23]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_mult_reg_reg[27]_i_1_CO_UNCONNECTED ;
  wire [2:0]\NLW_mult_reg_reg[31]_i_1_CO_UNCONNECTED ;
  wire NLW_output_big_CARRYCASCOUT_UNCONNECTED;
  wire NLW_output_big_MULTSIGNOUT_UNCONNECTED;
  wire NLW_output_big_OVERFLOW_UNCONNECTED;
  wire NLW_output_big_PATTERNBDETECT_UNCONNECTED;
  wire NLW_output_big_PATTERNDETECT_UNCONNECTED;
  wire NLW_output_big_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_output_big_ACOUT_UNCONNECTED;
  wire [17:0]NLW_output_big_BCOUT_UNCONNECTED;
  wire [3:0]NLW_output_big_CARRYOUT_UNCONNECTED;
  wire [47:17]NLW_output_big_P_UNCONNECTED;
  wire NLW_output_big__0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_output_big__0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_output_big__0_OVERFLOW_UNCONNECTED;
  wire NLW_output_big__0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_output_big__0_PATTERNDETECT_UNCONNECTED;
  wire NLW_output_big__0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_output_big__0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_output_big__0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_output_big__0_CARRYOUT_UNCONNECTED;
  wire [47:30]NLW_output_big__0_P_UNCONNECTED;
  wire [47:0]NLW_output_big__0_PCOUT_UNCONNECTED;
  wire NLW_output_big__1_CARRYCASCOUT_UNCONNECTED;
  wire NLW_output_big__1_MULTSIGNOUT_UNCONNECTED;
  wire NLW_output_big__1_OVERFLOW_UNCONNECTED;
  wire NLW_output_big__1_PATTERNBDETECT_UNCONNECTED;
  wire NLW_output_big__1_PATTERNDETECT_UNCONNECTED;
  wire NLW_output_big__1_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_output_big__1_ACOUT_UNCONNECTED;
  wire [17:0]NLW_output_big__1_BCOUT_UNCONNECTED;
  wire [3:0]NLW_output_big__1_CARRYOUT_UNCONNECTED;
  wire [47:17]NLW_output_big__1_P_UNCONNECTED;
  wire NLW_output_big__2_CARRYCASCOUT_UNCONNECTED;
  wire NLW_output_big__2_MULTSIGNOUT_UNCONNECTED;
  wire NLW_output_big__2_OVERFLOW_UNCONNECTED;
  wire NLW_output_big__2_PATTERNBDETECT_UNCONNECTED;
  wire NLW_output_big__2_PATTERNDETECT_UNCONNECTED;
  wire NLW_output_big__2_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_output_big__2_ACOUT_UNCONNECTED;
  wire [17:0]NLW_output_big__2_BCOUT_UNCONNECTED;
  wire [3:0]NLW_output_big__2_CARRYOUT_UNCONNECTED;
  wire [47:47]NLW_output_big__2_P_UNCONNECTED;
  wire [47:0]NLW_output_big__2_PCOUT_UNCONNECTED;

  LUT3 #(
    .INIT(8'hB8)) 
    N_reg_i_1
       (.I0(flags_sig),
        .I1(Fset),
        .I2(D[31]),
        .O(\pc_reg[0] ));
  LUT6 #(
    .INIT(64'h0000000200000000)) 
    Z_reg_i_17
       (.I0(Z_reg_i_35_n_0),
        .I1(D[1]),
        .I2(D[0]),
        .I3(D[3]),
        .I4(D[2]),
        .I5(Z_reg_i_36_n_0),
        .O(Z_reg_i_17_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    Z_reg_i_18
       (.I0(sel0[60]),
        .I1(sel0[61]),
        .I2(sel0[58]),
        .I3(sel0[59]),
        .I4(sel0[63]),
        .I5(sel0[62]),
        .O(Z_reg_i_18_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    Z_reg_i_19
       (.I0(sel0[54]),
        .I1(sel0[55]),
        .I2(sel0[52]),
        .I3(sel0[53]),
        .I4(sel0[57]),
        .I5(sel0[56]),
        .O(Z_reg_i_19_n_0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    Z_reg_i_20
       (.I0(Z_reg_i_40_n_0),
        .I1(Z_reg_i_41_n_0),
        .I2(Z_reg_i_42_n_0),
        .I3(Z_reg_i_43_n_0),
        .I4(Z_reg_i_44_n_0),
        .I5(Z_reg_i_45_n_0),
        .O(Z_reg_i_20_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    Z_reg_i_35
       (.I0(D[6]),
        .I1(D[7]),
        .I2(D[4]),
        .I3(D[5]),
        .I4(D[9]),
        .I5(D[8]),
        .O(Z_reg_i_35_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    Z_reg_i_36
       (.I0(D[12]),
        .I1(D[13]),
        .I2(D[10]),
        .I3(D[11]),
        .I4(D[15]),
        .I5(D[14]),
        .O(Z_reg_i_36_n_0));
  CARRY4 Z_reg_i_37
       (.CI(Z_reg_i_38_n_0),
        .CO(NLW_Z_reg_i_37_CO_UNCONNECTED[3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,p_1_in[62:60]}),
        .O(sel0[63:60]),
        .S({Z_reg_i_47_n_0,Z_reg_i_48_n_0,Z_reg_i_49_n_0,Z_reg_i_50_n_0}));
  CARRY4 Z_reg_i_38
       (.CI(Z_reg_i_39_n_0),
        .CO({Z_reg_i_38_n_0,NLW_Z_reg_i_38_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(p_1_in[59:56]),
        .O(sel0[59:56]),
        .S({Z_reg_i_51_n_0,Z_reg_i_52_n_0,Z_reg_i_53_n_0,Z_reg_i_54_n_0}));
  CARRY4 Z_reg_i_39
       (.CI(Z_reg_i_55_n_0),
        .CO({Z_reg_i_39_n_0,NLW_Z_reg_i_39_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(p_1_in[55:52]),
        .O(sel0[55:52]),
        .S({Z_reg_i_56_n_0,Z_reg_i_57_n_0,Z_reg_i_58_n_0,Z_reg_i_59_n_0}));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    Z_reg_i_40
       (.I0(sel0[36]),
        .I1(sel0[37]),
        .I2(sel0[34]),
        .I3(sel0[35]),
        .I4(sel0[39]),
        .I5(sel0[38]),
        .O(Z_reg_i_40_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    Z_reg_i_41
       (.I0(D[30]),
        .I1(D[31]),
        .I2(D[28]),
        .I3(D[29]),
        .I4(sel0[33]),
        .I5(sel0[32]),
        .O(Z_reg_i_41_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    Z_reg_i_42
       (.I0(sel0[48]),
        .I1(sel0[49]),
        .I2(sel0[46]),
        .I3(sel0[47]),
        .I4(sel0[51]),
        .I5(sel0[50]),
        .O(Z_reg_i_42_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    Z_reg_i_43
       (.I0(sel0[42]),
        .I1(sel0[43]),
        .I2(sel0[40]),
        .I3(sel0[41]),
        .I4(sel0[45]),
        .I5(sel0[44]),
        .O(Z_reg_i_43_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    Z_reg_i_44
       (.I0(D[18]),
        .I1(D[19]),
        .I2(D[16]),
        .I3(D[17]),
        .I4(D[21]),
        .I5(D[20]),
        .O(Z_reg_i_44_n_0));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    Z_reg_i_45
       (.I0(D[24]),
        .I1(D[25]),
        .I2(D[22]),
        .I3(D[23]),
        .I4(D[27]),
        .I5(D[26]),
        .O(Z_reg_i_45_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_47
       (.I0(p_1_in[63]),
        .I1(p_0_in[63]),
        .O(Z_reg_i_47_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_48
       (.I0(p_1_in[62]),
        .I1(p_0_in[62]),
        .O(Z_reg_i_48_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_49
       (.I0(p_1_in[61]),
        .I1(p_0_in[61]),
        .O(Z_reg_i_49_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_50
       (.I0(p_1_in[60]),
        .I1(p_0_in[60]),
        .O(Z_reg_i_50_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_51
       (.I0(p_1_in[59]),
        .I1(p_0_in[59]),
        .O(Z_reg_i_51_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_52
       (.I0(p_1_in[58]),
        .I1(p_0_in[58]),
        .O(Z_reg_i_52_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_53
       (.I0(p_1_in[57]),
        .I1(p_0_in[57]),
        .O(Z_reg_i_53_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_54
       (.I0(p_1_in[56]),
        .I1(p_0_in[56]),
        .O(Z_reg_i_54_n_0));
  CARRY4 Z_reg_i_55
       (.CI(Z_reg_i_62_n_0),
        .CO({Z_reg_i_55_n_0,NLW_Z_reg_i_55_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(p_1_in[51:48]),
        .O(sel0[51:48]),
        .S({Z_reg_i_64_n_0,Z_reg_i_65_n_0,Z_reg_i_66_n_0,Z_reg_i_67_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_56
       (.I0(p_1_in[55]),
        .I1(p_0_in[55]),
        .O(Z_reg_i_56_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_57
       (.I0(p_1_in[54]),
        .I1(p_0_in[54]),
        .O(Z_reg_i_57_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_58
       (.I0(p_1_in[53]),
        .I1(p_0_in[53]),
        .O(Z_reg_i_58_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_59
       (.I0(p_1_in[52]),
        .I1(p_0_in[52]),
        .O(Z_reg_i_59_n_0));
  CARRY4 Z_reg_i_60
       (.CI(Z_reg_i_61_n_0),
        .CO({Z_reg_i_60_n_0,NLW_Z_reg_i_60_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(p_1_in[39:36]),
        .O(sel0[39:36]),
        .S({Z_reg_i_68_n_0,Z_reg_i_69_n_0,Z_reg_i_70_n_0,Z_reg_i_71_n_0}));
  CARRY4 Z_reg_i_61
       (.CI(\mult_reg_reg[31]_i_1_n_0 ),
        .CO({Z_reg_i_61_n_0,NLW_Z_reg_i_61_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(p_1_in[35:32]),
        .O(sel0[35:32]),
        .S({Z_reg_i_72_n_0,Z_reg_i_73_n_0,Z_reg_i_74_n_0,Z_reg_i_75_n_0}));
  CARRY4 Z_reg_i_62
       (.CI(Z_reg_i_63_n_0),
        .CO({Z_reg_i_62_n_0,NLW_Z_reg_i_62_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(p_1_in[47:44]),
        .O(sel0[47:44]),
        .S({Z_reg_i_76_n_0,Z_reg_i_77_n_0,Z_reg_i_78_n_0,Z_reg_i_79_n_0}));
  CARRY4 Z_reg_i_63
       (.CI(Z_reg_i_60_n_0),
        .CO({Z_reg_i_63_n_0,NLW_Z_reg_i_63_CO_UNCONNECTED[2:0]}),
        .CYINIT(1'b0),
        .DI(p_1_in[43:40]),
        .O(sel0[43:40]),
        .S({Z_reg_i_80_n_0,Z_reg_i_81_n_0,Z_reg_i_82_n_0,Z_reg_i_83_n_0}));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_64
       (.I0(p_1_in[51]),
        .I1(p_0_in[51]),
        .O(Z_reg_i_64_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_65
       (.I0(p_1_in[50]),
        .I1(p_0_in[50]),
        .O(Z_reg_i_65_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_66
       (.I0(p_1_in[49]),
        .I1(p_0_in[49]),
        .O(Z_reg_i_66_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_67
       (.I0(p_1_in[48]),
        .I1(p_0_in[48]),
        .O(Z_reg_i_67_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_68
       (.I0(p_1_in[39]),
        .I1(p_0_in[39]),
        .O(Z_reg_i_68_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_69
       (.I0(p_1_in[38]),
        .I1(p_0_in[38]),
        .O(Z_reg_i_69_n_0));
  LUT4 #(
    .INIT(16'h8000)) 
    Z_reg_i_7
       (.I0(Z_reg_i_17_n_0),
        .I1(Z_reg_i_18_n_0),
        .I2(Z_reg_i_19_n_0),
        .I3(Z_reg_i_20_n_0),
        .O(\pc_reg[0]_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_70
       (.I0(p_1_in[37]),
        .I1(p_0_in[37]),
        .O(Z_reg_i_70_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_71
       (.I0(p_1_in[36]),
        .I1(p_0_in[36]),
        .O(Z_reg_i_71_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_72
       (.I0(p_1_in[35]),
        .I1(p_0_in[35]),
        .O(Z_reg_i_72_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_73
       (.I0(p_1_in[34]),
        .I1(p_0_in[34]),
        .O(Z_reg_i_73_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_74
       (.I0(p_1_in[33]),
        .I1(p_0_in[33]),
        .O(Z_reg_i_74_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_75
       (.I0(p_1_in[32]),
        .I1(p_0_in[32]),
        .O(Z_reg_i_75_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_76
       (.I0(p_1_in[47]),
        .I1(p_0_in[47]),
        .O(Z_reg_i_76_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_77
       (.I0(p_1_in[46]),
        .I1(p_0_in[46]),
        .O(Z_reg_i_77_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_78
       (.I0(p_1_in[45]),
        .I1(p_0_in[45]),
        .O(Z_reg_i_78_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_79
       (.I0(p_1_in[44]),
        .I1(p_0_in[44]),
        .O(Z_reg_i_79_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_80
       (.I0(p_1_in[43]),
        .I1(p_0_in[43]),
        .O(Z_reg_i_80_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_81
       (.I0(p_1_in[42]),
        .I1(p_0_in[42]),
        .O(Z_reg_i_81_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_82
       (.I0(p_1_in[41]),
        .I1(p_0_in[41]),
        .O(Z_reg_i_82_n_0));
  LUT2 #(
    .INIT(4'h6)) 
    Z_reg_i_83
       (.I0(p_1_in[40]),
        .I1(p_0_in[40]),
        .O(Z_reg_i_83_n_0));
  CARRY4 \mult_reg_reg[19]_i_1 
       (.CI(1'b0),
        .CO({\mult_reg_reg[19]_i_1_n_0 ,\NLW_mult_reg_reg[19]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI({p_1_in[19:17],1'b0}),
        .O(D[19:16]),
        .S({\mult_reg_reg[19]_i_2_n_0 ,\mult_reg_reg[19]_i_3_n_0 ,\mult_reg_reg[19]_i_4_n_0 ,p_1_in[16]}));
  LUT2 #(
    .INIT(4'h6)) 
    \mult_reg_reg[19]_i_2 
       (.I0(p_1_in[19]),
        .I1(p_0_in[19]),
        .O(\mult_reg_reg[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mult_reg_reg[19]_i_3 
       (.I0(p_1_in[18]),
        .I1(p_0_in[18]),
        .O(\mult_reg_reg[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mult_reg_reg[19]_i_4 
       (.I0(p_1_in[17]),
        .I1(p_0_in[17]),
        .O(\mult_reg_reg[19]_i_4_n_0 ));
  CARRY4 \mult_reg_reg[23]_i_1 
       (.CI(\mult_reg_reg[19]_i_1_n_0 ),
        .CO({\mult_reg_reg[23]_i_1_n_0 ,\NLW_mult_reg_reg[23]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(p_1_in[23:20]),
        .O(D[23:20]),
        .S({\mult_reg_reg[23]_i_2_n_0 ,\mult_reg_reg[23]_i_3_n_0 ,\mult_reg_reg[23]_i_4_n_0 ,\mult_reg_reg[23]_i_5_n_0 }));
  LUT2 #(
    .INIT(4'h6)) 
    \mult_reg_reg[23]_i_2 
       (.I0(p_1_in[23]),
        .I1(p_0_in[23]),
        .O(\mult_reg_reg[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mult_reg_reg[23]_i_3 
       (.I0(p_1_in[22]),
        .I1(p_0_in[22]),
        .O(\mult_reg_reg[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mult_reg_reg[23]_i_4 
       (.I0(p_1_in[21]),
        .I1(p_0_in[21]),
        .O(\mult_reg_reg[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mult_reg_reg[23]_i_5 
       (.I0(p_1_in[20]),
        .I1(p_0_in[20]),
        .O(\mult_reg_reg[23]_i_5_n_0 ));
  CARRY4 \mult_reg_reg[27]_i_1 
       (.CI(\mult_reg_reg[23]_i_1_n_0 ),
        .CO({\mult_reg_reg[27]_i_1_n_0 ,\NLW_mult_reg_reg[27]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(p_1_in[27:24]),
        .O(D[27:24]),
        .S({\mult_reg_reg[27]_i_2_n_0 ,\mult_reg_reg[27]_i_3_n_0 ,\mult_reg_reg[27]_i_4_n_0 ,\mult_reg_reg[27]_i_5_n_0 }));
  LUT2 #(
    .INIT(4'h6)) 
    \mult_reg_reg[27]_i_2 
       (.I0(p_1_in[27]),
        .I1(p_0_in[27]),
        .O(\mult_reg_reg[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mult_reg_reg[27]_i_3 
       (.I0(p_1_in[26]),
        .I1(p_0_in[26]),
        .O(\mult_reg_reg[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mult_reg_reg[27]_i_4 
       (.I0(p_1_in[25]),
        .I1(p_0_in[25]),
        .O(\mult_reg_reg[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mult_reg_reg[27]_i_5 
       (.I0(p_1_in[24]),
        .I1(p_0_in[24]),
        .O(\mult_reg_reg[27]_i_5_n_0 ));
  CARRY4 \mult_reg_reg[31]_i_1 
       (.CI(\mult_reg_reg[27]_i_1_n_0 ),
        .CO({\mult_reg_reg[31]_i_1_n_0 ,\NLW_mult_reg_reg[31]_i_1_CO_UNCONNECTED [2:0]}),
        .CYINIT(1'b0),
        .DI(p_1_in[31:28]),
        .O(D[31:28]),
        .S({\mult_reg_reg[31]_i_3_n_0 ,\mult_reg_reg[31]_i_4_n_0 ,\mult_reg_reg[31]_i_5_n_0 ,\mult_reg_reg[31]_i_6_n_0 }));
  LUT2 #(
    .INIT(4'h6)) 
    \mult_reg_reg[31]_i_3 
       (.I0(p_1_in[31]),
        .I1(p_0_in[31]),
        .O(\mult_reg_reg[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mult_reg_reg[31]_i_4 
       (.I0(p_1_in[30]),
        .I1(p_0_in[30]),
        .O(\mult_reg_reg[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mult_reg_reg[31]_i_5 
       (.I0(p_1_in[29]),
        .I1(p_0_in[29]),
        .O(\mult_reg_reg[31]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \mult_reg_reg[31]_i_6 
       (.I0(p_1_in[28]),
        .I1(p_0_in[28]),
        .O(\mult_reg_reg[31]_i_6_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 15x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    output_big
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,\FSM_sequential_state_reg[1] [16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_output_big_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({Q[31],Q[31],Q[31],Q[31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_output_big_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_output_big_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_output_big_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_output_big_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_output_big_OVERFLOW_UNCONNECTED),
        .P({NLW_output_big_P_UNCONNECTED[47:17],p_0_in[33:17]}),
        .PATTERNBDETECT(NLW_output_big_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_output_big_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({output_big_n_106,output_big_n_107,output_big_n_108,output_big_n_109,output_big_n_110,output_big_n_111,output_big_n_112,output_big_n_113,output_big_n_114,output_big_n_115,output_big_n_116,output_big_n_117,output_big_n_118,output_big_n_119,output_big_n_120,output_big_n_121,output_big_n_122,output_big_n_123,output_big_n_124,output_big_n_125,output_big_n_126,output_big_n_127,output_big_n_128,output_big_n_129,output_big_n_130,output_big_n_131,output_big_n_132,output_big_n_133,output_big_n_134,output_big_n_135,output_big_n_136,output_big_n_137,output_big_n_138,output_big_n_139,output_big_n_140,output_big_n_141,output_big_n_142,output_big_n_143,output_big_n_144,output_big_n_145,output_big_n_146,output_big_n_147,output_big_n_148,output_big_n_149,output_big_n_150,output_big_n_151,output_big_n_152,output_big_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_output_big_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 15x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    output_big__0
       (.A({Q[31],Q[31],Q[31],Q[31],Q[31],Q[31],Q[31],Q[31],Q[31],Q[31],Q[31],Q[31],Q[31],Q[31],Q[31],Q[31:17]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_output_big__0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({\FSM_sequential_state_reg[1] [31],\FSM_sequential_state_reg[1] [31],\FSM_sequential_state_reg[1] [31],\FSM_sequential_state_reg[1] [31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_output_big__0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_output_big__0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_output_big__0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_output_big__0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_output_big__0_OVERFLOW_UNCONNECTED),
        .P({NLW_output_big__0_P_UNCONNECTED[47:30],p_0_in[63:34]}),
        .PATTERNBDETECT(NLW_output_big__0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_output_big__0_PATTERNDETECT_UNCONNECTED),
        .PCIN({output_big_n_106,output_big_n_107,output_big_n_108,output_big_n_109,output_big_n_110,output_big_n_111,output_big_n_112,output_big_n_113,output_big_n_114,output_big_n_115,output_big_n_116,output_big_n_117,output_big_n_118,output_big_n_119,output_big_n_120,output_big_n_121,output_big_n_122,output_big_n_123,output_big_n_124,output_big_n_125,output_big_n_126,output_big_n_127,output_big_n_128,output_big_n_129,output_big_n_130,output_big_n_131,output_big_n_132,output_big_n_133,output_big_n_134,output_big_n_135,output_big_n_136,output_big_n_137,output_big_n_138,output_big_n_139,output_big_n_140,output_big_n_141,output_big_n_142,output_big_n_143,output_big_n_144,output_big_n_145,output_big_n_146,output_big_n_147,output_big_n_148,output_big_n_149,output_big_n_150,output_big_n_151,output_big_n_152,output_big_n_153}),
        .PCOUT(NLW_output_big__0_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_output_big__0_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x18 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    output_big__1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_output_big__1_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({1'b0,\FSM_sequential_state_reg[1] [16:0]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_output_big__1_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_output_big__1_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_output_big__1_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_output_big__1_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_output_big__1_OVERFLOW_UNCONNECTED),
        .P({NLW_output_big__1_P_UNCONNECTED[47:17],p_1_in[16],D[15:0]}),
        .PATTERNBDETECT(NLW_output_big__1_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_output_big__1_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT({output_big__1_n_106,output_big__1_n_107,output_big__1_n_108,output_big__1_n_109,output_big__1_n_110,output_big__1_n_111,output_big__1_n_112,output_big__1_n_113,output_big__1_n_114,output_big__1_n_115,output_big__1_n_116,output_big__1_n_117,output_big__1_n_118,output_big__1_n_119,output_big__1_n_120,output_big__1_n_121,output_big__1_n_122,output_big__1_n_123,output_big__1_n_124,output_big__1_n_125,output_big__1_n_126,output_big__1_n_127,output_big__1_n_128,output_big__1_n_129,output_big__1_n_130,output_big__1_n_131,output_big__1_n_132,output_big__1_n_133,output_big__1_n_134,output_big__1_n_135,output_big__1_n_136,output_big__1_n_137,output_big__1_n_138,output_big__1_n_139,output_big__1_n_140,output_big__1_n_141,output_big__1_n_142,output_big__1_n_143,output_big__1_n_144,output_big__1_n_145,output_big__1_n_146,output_big__1_n_147,output_big__1_n_148,output_big__1_n_149,output_big__1_n_150,output_big__1_n_151,output_big__1_n_152,output_big__1_n_153}),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_output_big__1_UNDERFLOW_UNCONNECTED));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-10 {cell *THIS*} {string 18x15 4}}" *) 
  DSP48E1 #(
    .ACASCREG(0),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(0),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(0),
    .BREG(0),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(0),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    output_big__2
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,Q[16:0]}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_output_big__2_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({\FSM_sequential_state_reg[1] [31],\FSM_sequential_state_reg[1] [31],\FSM_sequential_state_reg[1] [31],\FSM_sequential_state_reg[1] [31:17]}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_output_big__2_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_output_big__2_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_output_big__2_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(1'b0),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(1'b0),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(1'b0),
        .CLK(1'b0),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_output_big__2_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_output_big__2_OVERFLOW_UNCONNECTED),
        .P({NLW_output_big__2_P_UNCONNECTED[47],p_1_in[63:17]}),
        .PATTERNBDETECT(NLW_output_big__2_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_output_big__2_PATTERNDETECT_UNCONNECTED),
        .PCIN({output_big__1_n_106,output_big__1_n_107,output_big__1_n_108,output_big__1_n_109,output_big__1_n_110,output_big__1_n_111,output_big__1_n_112,output_big__1_n_113,output_big__1_n_114,output_big__1_n_115,output_big__1_n_116,output_big__1_n_117,output_big__1_n_118,output_big__1_n_119,output_big__1_n_120,output_big__1_n_121,output_big__1_n_122,output_big__1_n_123,output_big__1_n_124,output_big__1_n_125,output_big__1_n_126,output_big__1_n_127,output_big__1_n_128,output_big__1_n_129,output_big__1_n_130,output_big__1_n_131,output_big__1_n_132,output_big__1_n_133,output_big__1_n_134,output_big__1_n_135,output_big__1_n_136,output_big__1_n_137,output_big__1_n_138,output_big__1_n_139,output_big__1_n_140,output_big__1_n_141,output_big__1_n_142,output_big__1_n_143,output_big__1_n_144,output_big__1_n_145,output_big__1_n_146,output_big__1_n_147,output_big__1_n_148,output_big__1_n_149,output_big__1_n_150,output_big__1_n_151,output_big__1_n_152,output_big__1_n_153}),
        .PCOUT(NLW_output_big__2_PCOUT_UNCONNECTED[47:0]),
        .RSTA(1'b0),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(1'b0),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(1'b0),
        .UNDERFLOW(NLW_output_big__2_UNDERFLOW_UNCONNECTED));
endmodule

module Register_File
   (Mult_wad,
    \pc_reg[0] ,
    leds_OBUF,
    D,
    output_big,
    out,
    Q,
    \FSM_sequential_state_reg[0] ,
    \FSM_sequential_state_reg[0]_0 ,
    \pc_reg[31] ,
    memout,
    memOrReg_IBUF,
    firstOrLast_IBUF,
    CLK,
    AR,
    RW,
    rad1,
    rad2,
    read_switches_IBUF);
  output Mult_wad;
  output \pc_reg[0] ;
  output [15:0]leds_OBUF;
  output [31:0]D;
  output [31:0]output_big;
  input [3:0]out;
  input [12:0]Q;
  input [31:0]\FSM_sequential_state_reg[0] ;
  input [31:0]\FSM_sequential_state_reg[0]_0 ;
  input [31:0]\pc_reg[31] ;
  input [31:0]memout;
  input memOrReg_IBUF;
  input firstOrLast_IBUF;
  input CLK;
  input [0:0]AR;
  input RW;
  input [3:0]rad1;
  input [3:0]rad2;
  input [3:0]read_switches_IBUF;

  wire [0:0]AR;
  wire CLK;
  wire [31:0]D;
  wire [31:0]\FSM_sequential_state_reg[0] ;
  wire [31:0]\FSM_sequential_state_reg[0]_0 ;
  wire Mult_wad;
  wire [12:0]Q;
  wire RW;
  wire \a_reg_reg[0]_i_2_n_0 ;
  wire \a_reg_reg[0]_i_3_n_0 ;
  wire \a_reg_reg[0]_i_4_n_0 ;
  wire \a_reg_reg[0]_i_5_n_0 ;
  wire \a_reg_reg[0]_i_6_n_0 ;
  wire \a_reg_reg[0]_i_7_n_0 ;
  wire \a_reg_reg[10]_i_2_n_0 ;
  wire \a_reg_reg[10]_i_3_n_0 ;
  wire \a_reg_reg[10]_i_4_n_0 ;
  wire \a_reg_reg[10]_i_5_n_0 ;
  wire \a_reg_reg[10]_i_6_n_0 ;
  wire \a_reg_reg[10]_i_7_n_0 ;
  wire \a_reg_reg[11]_i_2_n_0 ;
  wire \a_reg_reg[11]_i_3_n_0 ;
  wire \a_reg_reg[11]_i_4_n_0 ;
  wire \a_reg_reg[11]_i_5_n_0 ;
  wire \a_reg_reg[11]_i_6_n_0 ;
  wire \a_reg_reg[11]_i_7_n_0 ;
  wire \a_reg_reg[12]_i_2_n_0 ;
  wire \a_reg_reg[12]_i_3_n_0 ;
  wire \a_reg_reg[12]_i_4_n_0 ;
  wire \a_reg_reg[12]_i_5_n_0 ;
  wire \a_reg_reg[12]_i_6_n_0 ;
  wire \a_reg_reg[12]_i_7_n_0 ;
  wire \a_reg_reg[13]_i_2_n_0 ;
  wire \a_reg_reg[13]_i_3_n_0 ;
  wire \a_reg_reg[13]_i_4_n_0 ;
  wire \a_reg_reg[13]_i_5_n_0 ;
  wire \a_reg_reg[13]_i_6_n_0 ;
  wire \a_reg_reg[13]_i_7_n_0 ;
  wire \a_reg_reg[14]_i_2_n_0 ;
  wire \a_reg_reg[14]_i_3_n_0 ;
  wire \a_reg_reg[14]_i_4_n_0 ;
  wire \a_reg_reg[14]_i_5_n_0 ;
  wire \a_reg_reg[14]_i_6_n_0 ;
  wire \a_reg_reg[14]_i_7_n_0 ;
  wire \a_reg_reg[15]_i_2_n_0 ;
  wire \a_reg_reg[15]_i_3_n_0 ;
  wire \a_reg_reg[15]_i_4_n_0 ;
  wire \a_reg_reg[15]_i_5_n_0 ;
  wire \a_reg_reg[15]_i_6_n_0 ;
  wire \a_reg_reg[15]_i_7_n_0 ;
  wire \a_reg_reg[16]_i_2_n_0 ;
  wire \a_reg_reg[16]_i_3_n_0 ;
  wire \a_reg_reg[16]_i_4_n_0 ;
  wire \a_reg_reg[16]_i_5_n_0 ;
  wire \a_reg_reg[16]_i_6_n_0 ;
  wire \a_reg_reg[16]_i_7_n_0 ;
  wire \a_reg_reg[17]_i_2_n_0 ;
  wire \a_reg_reg[17]_i_3_n_0 ;
  wire \a_reg_reg[17]_i_4_n_0 ;
  wire \a_reg_reg[17]_i_5_n_0 ;
  wire \a_reg_reg[17]_i_6_n_0 ;
  wire \a_reg_reg[17]_i_7_n_0 ;
  wire \a_reg_reg[18]_i_2_n_0 ;
  wire \a_reg_reg[18]_i_3_n_0 ;
  wire \a_reg_reg[18]_i_4_n_0 ;
  wire \a_reg_reg[18]_i_5_n_0 ;
  wire \a_reg_reg[18]_i_6_n_0 ;
  wire \a_reg_reg[18]_i_7_n_0 ;
  wire \a_reg_reg[19]_i_2_n_0 ;
  wire \a_reg_reg[19]_i_3_n_0 ;
  wire \a_reg_reg[19]_i_4_n_0 ;
  wire \a_reg_reg[19]_i_5_n_0 ;
  wire \a_reg_reg[19]_i_6_n_0 ;
  wire \a_reg_reg[19]_i_7_n_0 ;
  wire \a_reg_reg[1]_i_2_n_0 ;
  wire \a_reg_reg[1]_i_3_n_0 ;
  wire \a_reg_reg[1]_i_4_n_0 ;
  wire \a_reg_reg[1]_i_5_n_0 ;
  wire \a_reg_reg[1]_i_6_n_0 ;
  wire \a_reg_reg[1]_i_7_n_0 ;
  wire \a_reg_reg[20]_i_2_n_0 ;
  wire \a_reg_reg[20]_i_3_n_0 ;
  wire \a_reg_reg[20]_i_4_n_0 ;
  wire \a_reg_reg[20]_i_5_n_0 ;
  wire \a_reg_reg[20]_i_6_n_0 ;
  wire \a_reg_reg[20]_i_7_n_0 ;
  wire \a_reg_reg[21]_i_2_n_0 ;
  wire \a_reg_reg[21]_i_3_n_0 ;
  wire \a_reg_reg[21]_i_4_n_0 ;
  wire \a_reg_reg[21]_i_5_n_0 ;
  wire \a_reg_reg[21]_i_6_n_0 ;
  wire \a_reg_reg[21]_i_7_n_0 ;
  wire \a_reg_reg[22]_i_2_n_0 ;
  wire \a_reg_reg[22]_i_3_n_0 ;
  wire \a_reg_reg[22]_i_4_n_0 ;
  wire \a_reg_reg[22]_i_5_n_0 ;
  wire \a_reg_reg[22]_i_6_n_0 ;
  wire \a_reg_reg[22]_i_7_n_0 ;
  wire \a_reg_reg[23]_i_2_n_0 ;
  wire \a_reg_reg[23]_i_3_n_0 ;
  wire \a_reg_reg[23]_i_4_n_0 ;
  wire \a_reg_reg[23]_i_5_n_0 ;
  wire \a_reg_reg[23]_i_6_n_0 ;
  wire \a_reg_reg[23]_i_7_n_0 ;
  wire \a_reg_reg[24]_i_2_n_0 ;
  wire \a_reg_reg[24]_i_3_n_0 ;
  wire \a_reg_reg[24]_i_4_n_0 ;
  wire \a_reg_reg[24]_i_5_n_0 ;
  wire \a_reg_reg[24]_i_6_n_0 ;
  wire \a_reg_reg[24]_i_7_n_0 ;
  wire \a_reg_reg[25]_i_2_n_0 ;
  wire \a_reg_reg[25]_i_3_n_0 ;
  wire \a_reg_reg[25]_i_4_n_0 ;
  wire \a_reg_reg[25]_i_5_n_0 ;
  wire \a_reg_reg[25]_i_6_n_0 ;
  wire \a_reg_reg[25]_i_7_n_0 ;
  wire \a_reg_reg[26]_i_2_n_0 ;
  wire \a_reg_reg[26]_i_3_n_0 ;
  wire \a_reg_reg[26]_i_4_n_0 ;
  wire \a_reg_reg[26]_i_5_n_0 ;
  wire \a_reg_reg[26]_i_6_n_0 ;
  wire \a_reg_reg[26]_i_7_n_0 ;
  wire \a_reg_reg[27]_i_2_n_0 ;
  wire \a_reg_reg[27]_i_3_n_0 ;
  wire \a_reg_reg[27]_i_4_n_0 ;
  wire \a_reg_reg[27]_i_5_n_0 ;
  wire \a_reg_reg[27]_i_6_n_0 ;
  wire \a_reg_reg[27]_i_7_n_0 ;
  wire \a_reg_reg[28]_i_2_n_0 ;
  wire \a_reg_reg[28]_i_3_n_0 ;
  wire \a_reg_reg[28]_i_4_n_0 ;
  wire \a_reg_reg[28]_i_5_n_0 ;
  wire \a_reg_reg[28]_i_6_n_0 ;
  wire \a_reg_reg[28]_i_7_n_0 ;
  wire \a_reg_reg[29]_i_2_n_0 ;
  wire \a_reg_reg[29]_i_3_n_0 ;
  wire \a_reg_reg[29]_i_4_n_0 ;
  wire \a_reg_reg[29]_i_5_n_0 ;
  wire \a_reg_reg[29]_i_6_n_0 ;
  wire \a_reg_reg[29]_i_7_n_0 ;
  wire \a_reg_reg[2]_i_2_n_0 ;
  wire \a_reg_reg[2]_i_3_n_0 ;
  wire \a_reg_reg[2]_i_4_n_0 ;
  wire \a_reg_reg[2]_i_5_n_0 ;
  wire \a_reg_reg[2]_i_6_n_0 ;
  wire \a_reg_reg[2]_i_7_n_0 ;
  wire \a_reg_reg[30]_i_2_n_0 ;
  wire \a_reg_reg[30]_i_3_n_0 ;
  wire \a_reg_reg[30]_i_4_n_0 ;
  wire \a_reg_reg[30]_i_5_n_0 ;
  wire \a_reg_reg[30]_i_6_n_0 ;
  wire \a_reg_reg[30]_i_7_n_0 ;
  wire \a_reg_reg[31]_i_10_n_0 ;
  wire \a_reg_reg[31]_i_11_n_0 ;
  wire \a_reg_reg[31]_i_12_n_0 ;
  wire \a_reg_reg[31]_i_13_n_0 ;
  wire \a_reg_reg[31]_i_5_n_0 ;
  wire \a_reg_reg[31]_i_6_n_0 ;
  wire \a_reg_reg[3]_i_2_n_0 ;
  wire \a_reg_reg[3]_i_3_n_0 ;
  wire \a_reg_reg[3]_i_4_n_0 ;
  wire \a_reg_reg[3]_i_5_n_0 ;
  wire \a_reg_reg[3]_i_6_n_0 ;
  wire \a_reg_reg[3]_i_7_n_0 ;
  wire \a_reg_reg[4]_i_2_n_0 ;
  wire \a_reg_reg[4]_i_3_n_0 ;
  wire \a_reg_reg[4]_i_4_n_0 ;
  wire \a_reg_reg[4]_i_5_n_0 ;
  wire \a_reg_reg[4]_i_6_n_0 ;
  wire \a_reg_reg[4]_i_7_n_0 ;
  wire \a_reg_reg[5]_i_2_n_0 ;
  wire \a_reg_reg[5]_i_3_n_0 ;
  wire \a_reg_reg[5]_i_4_n_0 ;
  wire \a_reg_reg[5]_i_5_n_0 ;
  wire \a_reg_reg[5]_i_6_n_0 ;
  wire \a_reg_reg[5]_i_7_n_0 ;
  wire \a_reg_reg[6]_i_2_n_0 ;
  wire \a_reg_reg[6]_i_3_n_0 ;
  wire \a_reg_reg[6]_i_4_n_0 ;
  wire \a_reg_reg[6]_i_5_n_0 ;
  wire \a_reg_reg[6]_i_6_n_0 ;
  wire \a_reg_reg[6]_i_7_n_0 ;
  wire \a_reg_reg[7]_i_2_n_0 ;
  wire \a_reg_reg[7]_i_3_n_0 ;
  wire \a_reg_reg[7]_i_4_n_0 ;
  wire \a_reg_reg[7]_i_5_n_0 ;
  wire \a_reg_reg[7]_i_6_n_0 ;
  wire \a_reg_reg[7]_i_7_n_0 ;
  wire \a_reg_reg[8]_i_2_n_0 ;
  wire \a_reg_reg[8]_i_3_n_0 ;
  wire \a_reg_reg[8]_i_4_n_0 ;
  wire \a_reg_reg[8]_i_5_n_0 ;
  wire \a_reg_reg[8]_i_6_n_0 ;
  wire \a_reg_reg[8]_i_7_n_0 ;
  wire \a_reg_reg[9]_i_2_n_0 ;
  wire \a_reg_reg[9]_i_3_n_0 ;
  wire \a_reg_reg[9]_i_4_n_0 ;
  wire \a_reg_reg[9]_i_5_n_0 ;
  wire \a_reg_reg[9]_i_6_n_0 ;
  wire \a_reg_reg[9]_i_7_n_0 ;
  wire \b_reg_reg[0]_i_2_n_0 ;
  wire \b_reg_reg[0]_i_3_n_0 ;
  wire \b_reg_reg[0]_i_4_n_0 ;
  wire \b_reg_reg[0]_i_5_n_0 ;
  wire \b_reg_reg[0]_i_6_n_0 ;
  wire \b_reg_reg[0]_i_7_n_0 ;
  wire \b_reg_reg[10]_i_2_n_0 ;
  wire \b_reg_reg[10]_i_3_n_0 ;
  wire \b_reg_reg[10]_i_4_n_0 ;
  wire \b_reg_reg[10]_i_5_n_0 ;
  wire \b_reg_reg[10]_i_6_n_0 ;
  wire \b_reg_reg[10]_i_7_n_0 ;
  wire \b_reg_reg[11]_i_2_n_0 ;
  wire \b_reg_reg[11]_i_3_n_0 ;
  wire \b_reg_reg[11]_i_4_n_0 ;
  wire \b_reg_reg[11]_i_5_n_0 ;
  wire \b_reg_reg[11]_i_6_n_0 ;
  wire \b_reg_reg[11]_i_7_n_0 ;
  wire \b_reg_reg[12]_i_2_n_0 ;
  wire \b_reg_reg[12]_i_3_n_0 ;
  wire \b_reg_reg[12]_i_4_n_0 ;
  wire \b_reg_reg[12]_i_5_n_0 ;
  wire \b_reg_reg[12]_i_6_n_0 ;
  wire \b_reg_reg[12]_i_7_n_0 ;
  wire \b_reg_reg[13]_i_2_n_0 ;
  wire \b_reg_reg[13]_i_3_n_0 ;
  wire \b_reg_reg[13]_i_4_n_0 ;
  wire \b_reg_reg[13]_i_5_n_0 ;
  wire \b_reg_reg[13]_i_6_n_0 ;
  wire \b_reg_reg[13]_i_7_n_0 ;
  wire \b_reg_reg[14]_i_2_n_0 ;
  wire \b_reg_reg[14]_i_3_n_0 ;
  wire \b_reg_reg[14]_i_4_n_0 ;
  wire \b_reg_reg[14]_i_5_n_0 ;
  wire \b_reg_reg[14]_i_6_n_0 ;
  wire \b_reg_reg[14]_i_7_n_0 ;
  wire \b_reg_reg[15]_i_2_n_0 ;
  wire \b_reg_reg[15]_i_3_n_0 ;
  wire \b_reg_reg[15]_i_4_n_0 ;
  wire \b_reg_reg[15]_i_5_n_0 ;
  wire \b_reg_reg[15]_i_6_n_0 ;
  wire \b_reg_reg[15]_i_7_n_0 ;
  wire \b_reg_reg[16]_i_2_n_0 ;
  wire \b_reg_reg[16]_i_3_n_0 ;
  wire \b_reg_reg[16]_i_4_n_0 ;
  wire \b_reg_reg[16]_i_5_n_0 ;
  wire \b_reg_reg[16]_i_6_n_0 ;
  wire \b_reg_reg[16]_i_7_n_0 ;
  wire \b_reg_reg[17]_i_2_n_0 ;
  wire \b_reg_reg[17]_i_3_n_0 ;
  wire \b_reg_reg[17]_i_4_n_0 ;
  wire \b_reg_reg[17]_i_5_n_0 ;
  wire \b_reg_reg[17]_i_6_n_0 ;
  wire \b_reg_reg[17]_i_7_n_0 ;
  wire \b_reg_reg[18]_i_2_n_0 ;
  wire \b_reg_reg[18]_i_3_n_0 ;
  wire \b_reg_reg[18]_i_4_n_0 ;
  wire \b_reg_reg[18]_i_5_n_0 ;
  wire \b_reg_reg[18]_i_6_n_0 ;
  wire \b_reg_reg[18]_i_7_n_0 ;
  wire \b_reg_reg[19]_i_2_n_0 ;
  wire \b_reg_reg[19]_i_3_n_0 ;
  wire \b_reg_reg[19]_i_4_n_0 ;
  wire \b_reg_reg[19]_i_5_n_0 ;
  wire \b_reg_reg[19]_i_6_n_0 ;
  wire \b_reg_reg[19]_i_7_n_0 ;
  wire \b_reg_reg[1]_i_2_n_0 ;
  wire \b_reg_reg[1]_i_3_n_0 ;
  wire \b_reg_reg[1]_i_4_n_0 ;
  wire \b_reg_reg[1]_i_5_n_0 ;
  wire \b_reg_reg[1]_i_6_n_0 ;
  wire \b_reg_reg[1]_i_7_n_0 ;
  wire \b_reg_reg[20]_i_2_n_0 ;
  wire \b_reg_reg[20]_i_3_n_0 ;
  wire \b_reg_reg[20]_i_4_n_0 ;
  wire \b_reg_reg[20]_i_5_n_0 ;
  wire \b_reg_reg[20]_i_6_n_0 ;
  wire \b_reg_reg[20]_i_7_n_0 ;
  wire \b_reg_reg[21]_i_2_n_0 ;
  wire \b_reg_reg[21]_i_3_n_0 ;
  wire \b_reg_reg[21]_i_4_n_0 ;
  wire \b_reg_reg[21]_i_5_n_0 ;
  wire \b_reg_reg[21]_i_6_n_0 ;
  wire \b_reg_reg[21]_i_7_n_0 ;
  wire \b_reg_reg[22]_i_2_n_0 ;
  wire \b_reg_reg[22]_i_3_n_0 ;
  wire \b_reg_reg[22]_i_4_n_0 ;
  wire \b_reg_reg[22]_i_5_n_0 ;
  wire \b_reg_reg[22]_i_6_n_0 ;
  wire \b_reg_reg[22]_i_7_n_0 ;
  wire \b_reg_reg[23]_i_2_n_0 ;
  wire \b_reg_reg[23]_i_3_n_0 ;
  wire \b_reg_reg[23]_i_4_n_0 ;
  wire \b_reg_reg[23]_i_5_n_0 ;
  wire \b_reg_reg[23]_i_6_n_0 ;
  wire \b_reg_reg[23]_i_7_n_0 ;
  wire \b_reg_reg[24]_i_2_n_0 ;
  wire \b_reg_reg[24]_i_3_n_0 ;
  wire \b_reg_reg[24]_i_4_n_0 ;
  wire \b_reg_reg[24]_i_5_n_0 ;
  wire \b_reg_reg[24]_i_6_n_0 ;
  wire \b_reg_reg[24]_i_7_n_0 ;
  wire \b_reg_reg[25]_i_2_n_0 ;
  wire \b_reg_reg[25]_i_3_n_0 ;
  wire \b_reg_reg[25]_i_4_n_0 ;
  wire \b_reg_reg[25]_i_5_n_0 ;
  wire \b_reg_reg[25]_i_6_n_0 ;
  wire \b_reg_reg[25]_i_7_n_0 ;
  wire \b_reg_reg[26]_i_2_n_0 ;
  wire \b_reg_reg[26]_i_3_n_0 ;
  wire \b_reg_reg[26]_i_4_n_0 ;
  wire \b_reg_reg[26]_i_5_n_0 ;
  wire \b_reg_reg[26]_i_6_n_0 ;
  wire \b_reg_reg[26]_i_7_n_0 ;
  wire \b_reg_reg[27]_i_2_n_0 ;
  wire \b_reg_reg[27]_i_3_n_0 ;
  wire \b_reg_reg[27]_i_4_n_0 ;
  wire \b_reg_reg[27]_i_5_n_0 ;
  wire \b_reg_reg[27]_i_6_n_0 ;
  wire \b_reg_reg[27]_i_7_n_0 ;
  wire \b_reg_reg[28]_i_2_n_0 ;
  wire \b_reg_reg[28]_i_3_n_0 ;
  wire \b_reg_reg[28]_i_4_n_0 ;
  wire \b_reg_reg[28]_i_5_n_0 ;
  wire \b_reg_reg[28]_i_6_n_0 ;
  wire \b_reg_reg[28]_i_7_n_0 ;
  wire \b_reg_reg[29]_i_2_n_0 ;
  wire \b_reg_reg[29]_i_3_n_0 ;
  wire \b_reg_reg[29]_i_4_n_0 ;
  wire \b_reg_reg[29]_i_5_n_0 ;
  wire \b_reg_reg[29]_i_6_n_0 ;
  wire \b_reg_reg[29]_i_7_n_0 ;
  wire \b_reg_reg[2]_i_2_n_0 ;
  wire \b_reg_reg[2]_i_3_n_0 ;
  wire \b_reg_reg[2]_i_4_n_0 ;
  wire \b_reg_reg[2]_i_5_n_0 ;
  wire \b_reg_reg[2]_i_6_n_0 ;
  wire \b_reg_reg[2]_i_7_n_0 ;
  wire \b_reg_reg[30]_i_2_n_0 ;
  wire \b_reg_reg[30]_i_3_n_0 ;
  wire \b_reg_reg[30]_i_4_n_0 ;
  wire \b_reg_reg[30]_i_5_n_0 ;
  wire \b_reg_reg[30]_i_6_n_0 ;
  wire \b_reg_reg[30]_i_7_n_0 ;
  wire \b_reg_reg[31]_i_10_n_0 ;
  wire \b_reg_reg[31]_i_11_n_0 ;
  wire \b_reg_reg[31]_i_4_n_0 ;
  wire \b_reg_reg[31]_i_5_n_0 ;
  wire \b_reg_reg[31]_i_8_n_0 ;
  wire \b_reg_reg[31]_i_9_n_0 ;
  wire \b_reg_reg[3]_i_2_n_0 ;
  wire \b_reg_reg[3]_i_3_n_0 ;
  wire \b_reg_reg[3]_i_4_n_0 ;
  wire \b_reg_reg[3]_i_5_n_0 ;
  wire \b_reg_reg[3]_i_6_n_0 ;
  wire \b_reg_reg[3]_i_7_n_0 ;
  wire \b_reg_reg[4]_i_2_n_0 ;
  wire \b_reg_reg[4]_i_3_n_0 ;
  wire \b_reg_reg[4]_i_4_n_0 ;
  wire \b_reg_reg[4]_i_5_n_0 ;
  wire \b_reg_reg[4]_i_6_n_0 ;
  wire \b_reg_reg[4]_i_7_n_0 ;
  wire \b_reg_reg[5]_i_2_n_0 ;
  wire \b_reg_reg[5]_i_3_n_0 ;
  wire \b_reg_reg[5]_i_4_n_0 ;
  wire \b_reg_reg[5]_i_5_n_0 ;
  wire \b_reg_reg[5]_i_6_n_0 ;
  wire \b_reg_reg[5]_i_7_n_0 ;
  wire \b_reg_reg[6]_i_2_n_0 ;
  wire \b_reg_reg[6]_i_3_n_0 ;
  wire \b_reg_reg[6]_i_4_n_0 ;
  wire \b_reg_reg[6]_i_5_n_0 ;
  wire \b_reg_reg[6]_i_6_n_0 ;
  wire \b_reg_reg[6]_i_7_n_0 ;
  wire \b_reg_reg[7]_i_2_n_0 ;
  wire \b_reg_reg[7]_i_3_n_0 ;
  wire \b_reg_reg[7]_i_4_n_0 ;
  wire \b_reg_reg[7]_i_5_n_0 ;
  wire \b_reg_reg[7]_i_6_n_0 ;
  wire \b_reg_reg[7]_i_7_n_0 ;
  wire \b_reg_reg[8]_i_2_n_0 ;
  wire \b_reg_reg[8]_i_3_n_0 ;
  wire \b_reg_reg[8]_i_4_n_0 ;
  wire \b_reg_reg[8]_i_5_n_0 ;
  wire \b_reg_reg[8]_i_6_n_0 ;
  wire \b_reg_reg[8]_i_7_n_0 ;
  wire \b_reg_reg[9]_i_2_n_0 ;
  wire \b_reg_reg[9]_i_3_n_0 ;
  wire \b_reg_reg[9]_i_4_n_0 ;
  wire \b_reg_reg[9]_i_5_n_0 ;
  wire \b_reg_reg[9]_i_6_n_0 ;
  wire \b_reg_reg[9]_i_7_n_0 ;
  wire firstOrLast_IBUF;
  wire [15:0]leds_OBUF;
  wire \leds_OBUF[0]_inst_i_10_n_0 ;
  wire \leds_OBUF[0]_inst_i_11_n_0 ;
  wire \leds_OBUF[0]_inst_i_14_n_0 ;
  wire \leds_OBUF[0]_inst_i_15_n_0 ;
  wire \leds_OBUF[0]_inst_i_16_n_0 ;
  wire \leds_OBUF[0]_inst_i_17_n_0 ;
  wire \leds_OBUF[0]_inst_i_18_n_0 ;
  wire \leds_OBUF[0]_inst_i_19_n_0 ;
  wire \leds_OBUF[0]_inst_i_20_n_0 ;
  wire \leds_OBUF[0]_inst_i_21_n_0 ;
  wire \leds_OBUF[0]_inst_i_6_n_0 ;
  wire \leds_OBUF[0]_inst_i_7_n_0 ;
  wire \leds_OBUF[10]_inst_i_10_n_0 ;
  wire \leds_OBUF[10]_inst_i_11_n_0 ;
  wire \leds_OBUF[10]_inst_i_14_n_0 ;
  wire \leds_OBUF[10]_inst_i_15_n_0 ;
  wire \leds_OBUF[10]_inst_i_16_n_0 ;
  wire \leds_OBUF[10]_inst_i_17_n_0 ;
  wire \leds_OBUF[10]_inst_i_18_n_0 ;
  wire \leds_OBUF[10]_inst_i_19_n_0 ;
  wire \leds_OBUF[10]_inst_i_20_n_0 ;
  wire \leds_OBUF[10]_inst_i_21_n_0 ;
  wire \leds_OBUF[10]_inst_i_6_n_0 ;
  wire \leds_OBUF[10]_inst_i_7_n_0 ;
  wire \leds_OBUF[11]_inst_i_10_n_0 ;
  wire \leds_OBUF[11]_inst_i_11_n_0 ;
  wire \leds_OBUF[11]_inst_i_14_n_0 ;
  wire \leds_OBUF[11]_inst_i_15_n_0 ;
  wire \leds_OBUF[11]_inst_i_16_n_0 ;
  wire \leds_OBUF[11]_inst_i_17_n_0 ;
  wire \leds_OBUF[11]_inst_i_18_n_0 ;
  wire \leds_OBUF[11]_inst_i_19_n_0 ;
  wire \leds_OBUF[11]_inst_i_20_n_0 ;
  wire \leds_OBUF[11]_inst_i_21_n_0 ;
  wire \leds_OBUF[11]_inst_i_6_n_0 ;
  wire \leds_OBUF[11]_inst_i_7_n_0 ;
  wire \leds_OBUF[12]_inst_i_10_n_0 ;
  wire \leds_OBUF[12]_inst_i_11_n_0 ;
  wire \leds_OBUF[12]_inst_i_14_n_0 ;
  wire \leds_OBUF[12]_inst_i_15_n_0 ;
  wire \leds_OBUF[12]_inst_i_16_n_0 ;
  wire \leds_OBUF[12]_inst_i_17_n_0 ;
  wire \leds_OBUF[12]_inst_i_18_n_0 ;
  wire \leds_OBUF[12]_inst_i_19_n_0 ;
  wire \leds_OBUF[12]_inst_i_20_n_0 ;
  wire \leds_OBUF[12]_inst_i_21_n_0 ;
  wire \leds_OBUF[12]_inst_i_6_n_0 ;
  wire \leds_OBUF[12]_inst_i_7_n_0 ;
  wire \leds_OBUF[13]_inst_i_10_n_0 ;
  wire \leds_OBUF[13]_inst_i_11_n_0 ;
  wire \leds_OBUF[13]_inst_i_14_n_0 ;
  wire \leds_OBUF[13]_inst_i_15_n_0 ;
  wire \leds_OBUF[13]_inst_i_16_n_0 ;
  wire \leds_OBUF[13]_inst_i_17_n_0 ;
  wire \leds_OBUF[13]_inst_i_18_n_0 ;
  wire \leds_OBUF[13]_inst_i_19_n_0 ;
  wire \leds_OBUF[13]_inst_i_20_n_0 ;
  wire \leds_OBUF[13]_inst_i_21_n_0 ;
  wire \leds_OBUF[13]_inst_i_6_n_0 ;
  wire \leds_OBUF[13]_inst_i_7_n_0 ;
  wire \leds_OBUF[14]_inst_i_10_n_0 ;
  wire \leds_OBUF[14]_inst_i_11_n_0 ;
  wire \leds_OBUF[14]_inst_i_14_n_0 ;
  wire \leds_OBUF[14]_inst_i_15_n_0 ;
  wire \leds_OBUF[14]_inst_i_16_n_0 ;
  wire \leds_OBUF[14]_inst_i_17_n_0 ;
  wire \leds_OBUF[14]_inst_i_18_n_0 ;
  wire \leds_OBUF[14]_inst_i_19_n_0 ;
  wire \leds_OBUF[14]_inst_i_20_n_0 ;
  wire \leds_OBUF[14]_inst_i_21_n_0 ;
  wire \leds_OBUF[14]_inst_i_6_n_0 ;
  wire \leds_OBUF[14]_inst_i_7_n_0 ;
  wire \leds_OBUF[15]_inst_i_10_n_0 ;
  wire \leds_OBUF[15]_inst_i_11_n_0 ;
  wire \leds_OBUF[15]_inst_i_14_n_0 ;
  wire \leds_OBUF[15]_inst_i_15_n_0 ;
  wire \leds_OBUF[15]_inst_i_16_n_0 ;
  wire \leds_OBUF[15]_inst_i_17_n_0 ;
  wire \leds_OBUF[15]_inst_i_18_n_0 ;
  wire \leds_OBUF[15]_inst_i_19_n_0 ;
  wire \leds_OBUF[15]_inst_i_20_n_0 ;
  wire \leds_OBUF[15]_inst_i_21_n_0 ;
  wire \leds_OBUF[15]_inst_i_6_n_0 ;
  wire \leds_OBUF[15]_inst_i_7_n_0 ;
  wire \leds_OBUF[1]_inst_i_10_n_0 ;
  wire \leds_OBUF[1]_inst_i_11_n_0 ;
  wire \leds_OBUF[1]_inst_i_14_n_0 ;
  wire \leds_OBUF[1]_inst_i_15_n_0 ;
  wire \leds_OBUF[1]_inst_i_16_n_0 ;
  wire \leds_OBUF[1]_inst_i_17_n_0 ;
  wire \leds_OBUF[1]_inst_i_18_n_0 ;
  wire \leds_OBUF[1]_inst_i_19_n_0 ;
  wire \leds_OBUF[1]_inst_i_20_n_0 ;
  wire \leds_OBUF[1]_inst_i_21_n_0 ;
  wire \leds_OBUF[1]_inst_i_6_n_0 ;
  wire \leds_OBUF[1]_inst_i_7_n_0 ;
  wire \leds_OBUF[2]_inst_i_10_n_0 ;
  wire \leds_OBUF[2]_inst_i_11_n_0 ;
  wire \leds_OBUF[2]_inst_i_14_n_0 ;
  wire \leds_OBUF[2]_inst_i_15_n_0 ;
  wire \leds_OBUF[2]_inst_i_16_n_0 ;
  wire \leds_OBUF[2]_inst_i_17_n_0 ;
  wire \leds_OBUF[2]_inst_i_18_n_0 ;
  wire \leds_OBUF[2]_inst_i_19_n_0 ;
  wire \leds_OBUF[2]_inst_i_20_n_0 ;
  wire \leds_OBUF[2]_inst_i_21_n_0 ;
  wire \leds_OBUF[2]_inst_i_6_n_0 ;
  wire \leds_OBUF[2]_inst_i_7_n_0 ;
  wire \leds_OBUF[3]_inst_i_10_n_0 ;
  wire \leds_OBUF[3]_inst_i_11_n_0 ;
  wire \leds_OBUF[3]_inst_i_14_n_0 ;
  wire \leds_OBUF[3]_inst_i_15_n_0 ;
  wire \leds_OBUF[3]_inst_i_16_n_0 ;
  wire \leds_OBUF[3]_inst_i_17_n_0 ;
  wire \leds_OBUF[3]_inst_i_18_n_0 ;
  wire \leds_OBUF[3]_inst_i_19_n_0 ;
  wire \leds_OBUF[3]_inst_i_20_n_0 ;
  wire \leds_OBUF[3]_inst_i_21_n_0 ;
  wire \leds_OBUF[3]_inst_i_6_n_0 ;
  wire \leds_OBUF[3]_inst_i_7_n_0 ;
  wire \leds_OBUF[4]_inst_i_10_n_0 ;
  wire \leds_OBUF[4]_inst_i_11_n_0 ;
  wire \leds_OBUF[4]_inst_i_14_n_0 ;
  wire \leds_OBUF[4]_inst_i_15_n_0 ;
  wire \leds_OBUF[4]_inst_i_16_n_0 ;
  wire \leds_OBUF[4]_inst_i_17_n_0 ;
  wire \leds_OBUF[4]_inst_i_18_n_0 ;
  wire \leds_OBUF[4]_inst_i_19_n_0 ;
  wire \leds_OBUF[4]_inst_i_20_n_0 ;
  wire \leds_OBUF[4]_inst_i_21_n_0 ;
  wire \leds_OBUF[4]_inst_i_6_n_0 ;
  wire \leds_OBUF[4]_inst_i_7_n_0 ;
  wire \leds_OBUF[5]_inst_i_10_n_0 ;
  wire \leds_OBUF[5]_inst_i_11_n_0 ;
  wire \leds_OBUF[5]_inst_i_14_n_0 ;
  wire \leds_OBUF[5]_inst_i_15_n_0 ;
  wire \leds_OBUF[5]_inst_i_16_n_0 ;
  wire \leds_OBUF[5]_inst_i_17_n_0 ;
  wire \leds_OBUF[5]_inst_i_18_n_0 ;
  wire \leds_OBUF[5]_inst_i_19_n_0 ;
  wire \leds_OBUF[5]_inst_i_20_n_0 ;
  wire \leds_OBUF[5]_inst_i_21_n_0 ;
  wire \leds_OBUF[5]_inst_i_6_n_0 ;
  wire \leds_OBUF[5]_inst_i_7_n_0 ;
  wire \leds_OBUF[6]_inst_i_10_n_0 ;
  wire \leds_OBUF[6]_inst_i_11_n_0 ;
  wire \leds_OBUF[6]_inst_i_14_n_0 ;
  wire \leds_OBUF[6]_inst_i_15_n_0 ;
  wire \leds_OBUF[6]_inst_i_16_n_0 ;
  wire \leds_OBUF[6]_inst_i_17_n_0 ;
  wire \leds_OBUF[6]_inst_i_18_n_0 ;
  wire \leds_OBUF[6]_inst_i_19_n_0 ;
  wire \leds_OBUF[6]_inst_i_20_n_0 ;
  wire \leds_OBUF[6]_inst_i_21_n_0 ;
  wire \leds_OBUF[6]_inst_i_6_n_0 ;
  wire \leds_OBUF[6]_inst_i_7_n_0 ;
  wire \leds_OBUF[7]_inst_i_10_n_0 ;
  wire \leds_OBUF[7]_inst_i_11_n_0 ;
  wire \leds_OBUF[7]_inst_i_14_n_0 ;
  wire \leds_OBUF[7]_inst_i_15_n_0 ;
  wire \leds_OBUF[7]_inst_i_16_n_0 ;
  wire \leds_OBUF[7]_inst_i_17_n_0 ;
  wire \leds_OBUF[7]_inst_i_18_n_0 ;
  wire \leds_OBUF[7]_inst_i_19_n_0 ;
  wire \leds_OBUF[7]_inst_i_20_n_0 ;
  wire \leds_OBUF[7]_inst_i_21_n_0 ;
  wire \leds_OBUF[7]_inst_i_6_n_0 ;
  wire \leds_OBUF[7]_inst_i_7_n_0 ;
  wire \leds_OBUF[8]_inst_i_10_n_0 ;
  wire \leds_OBUF[8]_inst_i_11_n_0 ;
  wire \leds_OBUF[8]_inst_i_14_n_0 ;
  wire \leds_OBUF[8]_inst_i_15_n_0 ;
  wire \leds_OBUF[8]_inst_i_16_n_0 ;
  wire \leds_OBUF[8]_inst_i_17_n_0 ;
  wire \leds_OBUF[8]_inst_i_18_n_0 ;
  wire \leds_OBUF[8]_inst_i_19_n_0 ;
  wire \leds_OBUF[8]_inst_i_20_n_0 ;
  wire \leds_OBUF[8]_inst_i_21_n_0 ;
  wire \leds_OBUF[8]_inst_i_6_n_0 ;
  wire \leds_OBUF[8]_inst_i_7_n_0 ;
  wire \leds_OBUF[9]_inst_i_10_n_0 ;
  wire \leds_OBUF[9]_inst_i_11_n_0 ;
  wire \leds_OBUF[9]_inst_i_14_n_0 ;
  wire \leds_OBUF[9]_inst_i_15_n_0 ;
  wire \leds_OBUF[9]_inst_i_16_n_0 ;
  wire \leds_OBUF[9]_inst_i_17_n_0 ;
  wire \leds_OBUF[9]_inst_i_18_n_0 ;
  wire \leds_OBUF[9]_inst_i_19_n_0 ;
  wire \leds_OBUF[9]_inst_i_20_n_0 ;
  wire \leds_OBUF[9]_inst_i_21_n_0 ;
  wire \leds_OBUF[9]_inst_i_6_n_0 ;
  wire \leds_OBUF[9]_inst_i_7_n_0 ;
  wire memOrReg_IBUF;
  wire [31:0]memout;
  wire [3:0]out;
  wire [31:0]output_big;
  wire [31:0]p_0_in;
  wire \pc_reg[0] ;
  wire [31:0]\pc_reg[31] ;
  wire [3:0]rad1;
  wire [3:0]rad2;
  wire [3:0]read_switches_IBUF;
  wire \register_array[0][31]_i_1_n_0 ;
  wire \register_array[10][31]_i_1_n_0 ;
  wire \register_array[11][31]_i_1_n_0 ;
  wire \register_array[12][31]_i_1_n_0 ;
  wire \register_array[13][31]_i_1_n_0 ;
  wire \register_array[14][31]_i_1_n_0 ;
  wire \register_array[14][31]_i_3_n_0 ;
  wire \register_array[14][31]_i_4_n_0 ;
  wire \register_array[14][31]_i_5_n_0 ;
  wire \register_array[1][31]_i_1_n_0 ;
  wire \register_array[2][31]_i_1_n_0 ;
  wire \register_array[3][31]_i_1_n_0 ;
  wire \register_array[4][31]_i_1_n_0 ;
  wire \register_array[5][31]_i_1_n_0 ;
  wire \register_array[6][31]_i_1_n_0 ;
  wire \register_array[7][31]_i_1_n_0 ;
  wire \register_array[8][31]_i_1_n_0 ;
  wire \register_array[9][31]_i_1_n_0 ;
  wire [31:0]\register_array_reg[0]_15 ;
  wire [31:0]\register_array_reg[10]_5 ;
  wire [31:0]\register_array_reg[11]_4 ;
  wire [31:0]\register_array_reg[12]_3 ;
  wire [31:0]\register_array_reg[13]_2 ;
  wire [31:0]\register_array_reg[14]_1 ;
  wire \register_array_reg[15]0 ;
  wire [31:0]\register_array_reg[15]_0 ;
  wire [31:0]\register_array_reg[1]_14 ;
  wire [31:0]\register_array_reg[2]_13 ;
  wire [31:0]\register_array_reg[3]_12 ;
  wire [31:0]\register_array_reg[4]_11 ;
  wire [31:0]\register_array_reg[5]_10 ;
  wire [31:0]\register_array_reg[6]_9 ;
  wire [31:0]\register_array_reg[7]_8 ;
  wire [31:0]\register_array_reg[8]_7 ;
  wire [31:0]\register_array_reg[9]_6 ;
  wire [31:0]regread;
  wire [3:0]wad;
  wire [31:0]wd;

  MUXF8 \a_reg_reg[0]_i_1 
       (.I0(\a_reg_reg[0]_i_2_n_0 ),
        .I1(\a_reg_reg[0]_i_3_n_0 ),
        .O(D[0]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[0]_i_2 
       (.I0(\a_reg_reg[0]_i_4_n_0 ),
        .I1(\a_reg_reg[0]_i_5_n_0 ),
        .O(\a_reg_reg[0]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[0]_i_3 
       (.I0(\a_reg_reg[0]_i_6_n_0 ),
        .I1(\a_reg_reg[0]_i_7_n_0 ),
        .O(\a_reg_reg[0]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[0]_i_4 
       (.I0(\register_array_reg[3]_12 [0]),
        .I1(\register_array_reg[2]_13 [0]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [0]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [0]),
        .O(\a_reg_reg[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[0]_i_5 
       (.I0(\register_array_reg[7]_8 [0]),
        .I1(\register_array_reg[6]_9 [0]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [0]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [0]),
        .O(\a_reg_reg[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[0]_i_6 
       (.I0(\register_array_reg[11]_4 [0]),
        .I1(\register_array_reg[10]_5 [0]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [0]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [0]),
        .O(\a_reg_reg[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[0]_i_7 
       (.I0(\register_array_reg[15]_0 [0]),
        .I1(\register_array_reg[14]_1 [0]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [0]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [0]),
        .O(\a_reg_reg[0]_i_7_n_0 ));
  MUXF8 \a_reg_reg[10]_i_1 
       (.I0(\a_reg_reg[10]_i_2_n_0 ),
        .I1(\a_reg_reg[10]_i_3_n_0 ),
        .O(D[10]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[10]_i_2 
       (.I0(\a_reg_reg[10]_i_4_n_0 ),
        .I1(\a_reg_reg[10]_i_5_n_0 ),
        .O(\a_reg_reg[10]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[10]_i_3 
       (.I0(\a_reg_reg[10]_i_6_n_0 ),
        .I1(\a_reg_reg[10]_i_7_n_0 ),
        .O(\a_reg_reg[10]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[10]_i_4 
       (.I0(\register_array_reg[3]_12 [10]),
        .I1(\register_array_reg[2]_13 [10]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [10]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [10]),
        .O(\a_reg_reg[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[10]_i_5 
       (.I0(\register_array_reg[7]_8 [10]),
        .I1(\register_array_reg[6]_9 [10]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [10]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [10]),
        .O(\a_reg_reg[10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[10]_i_6 
       (.I0(\register_array_reg[11]_4 [10]),
        .I1(\register_array_reg[10]_5 [10]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [10]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [10]),
        .O(\a_reg_reg[10]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[10]_i_7 
       (.I0(\register_array_reg[15]_0 [10]),
        .I1(\register_array_reg[14]_1 [10]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [10]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [10]),
        .O(\a_reg_reg[10]_i_7_n_0 ));
  MUXF8 \a_reg_reg[11]_i_1 
       (.I0(\a_reg_reg[11]_i_2_n_0 ),
        .I1(\a_reg_reg[11]_i_3_n_0 ),
        .O(D[11]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[11]_i_2 
       (.I0(\a_reg_reg[11]_i_4_n_0 ),
        .I1(\a_reg_reg[11]_i_5_n_0 ),
        .O(\a_reg_reg[11]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[11]_i_3 
       (.I0(\a_reg_reg[11]_i_6_n_0 ),
        .I1(\a_reg_reg[11]_i_7_n_0 ),
        .O(\a_reg_reg[11]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[11]_i_4 
       (.I0(\register_array_reg[3]_12 [11]),
        .I1(\register_array_reg[2]_13 [11]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [11]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [11]),
        .O(\a_reg_reg[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[11]_i_5 
       (.I0(\register_array_reg[7]_8 [11]),
        .I1(\register_array_reg[6]_9 [11]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [11]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [11]),
        .O(\a_reg_reg[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[11]_i_6 
       (.I0(\register_array_reg[11]_4 [11]),
        .I1(\register_array_reg[10]_5 [11]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [11]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [11]),
        .O(\a_reg_reg[11]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[11]_i_7 
       (.I0(\register_array_reg[15]_0 [11]),
        .I1(\register_array_reg[14]_1 [11]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [11]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [11]),
        .O(\a_reg_reg[11]_i_7_n_0 ));
  MUXF8 \a_reg_reg[12]_i_1 
       (.I0(\a_reg_reg[12]_i_2_n_0 ),
        .I1(\a_reg_reg[12]_i_3_n_0 ),
        .O(D[12]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[12]_i_2 
       (.I0(\a_reg_reg[12]_i_4_n_0 ),
        .I1(\a_reg_reg[12]_i_5_n_0 ),
        .O(\a_reg_reg[12]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[12]_i_3 
       (.I0(\a_reg_reg[12]_i_6_n_0 ),
        .I1(\a_reg_reg[12]_i_7_n_0 ),
        .O(\a_reg_reg[12]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[12]_i_4 
       (.I0(\register_array_reg[3]_12 [12]),
        .I1(\register_array_reg[2]_13 [12]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [12]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [12]),
        .O(\a_reg_reg[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[12]_i_5 
       (.I0(\register_array_reg[7]_8 [12]),
        .I1(\register_array_reg[6]_9 [12]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [12]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [12]),
        .O(\a_reg_reg[12]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[12]_i_6 
       (.I0(\register_array_reg[11]_4 [12]),
        .I1(\register_array_reg[10]_5 [12]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [12]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [12]),
        .O(\a_reg_reg[12]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[12]_i_7 
       (.I0(\register_array_reg[15]_0 [12]),
        .I1(\register_array_reg[14]_1 [12]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [12]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [12]),
        .O(\a_reg_reg[12]_i_7_n_0 ));
  MUXF8 \a_reg_reg[13]_i_1 
       (.I0(\a_reg_reg[13]_i_2_n_0 ),
        .I1(\a_reg_reg[13]_i_3_n_0 ),
        .O(D[13]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[13]_i_2 
       (.I0(\a_reg_reg[13]_i_4_n_0 ),
        .I1(\a_reg_reg[13]_i_5_n_0 ),
        .O(\a_reg_reg[13]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[13]_i_3 
       (.I0(\a_reg_reg[13]_i_6_n_0 ),
        .I1(\a_reg_reg[13]_i_7_n_0 ),
        .O(\a_reg_reg[13]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[13]_i_4 
       (.I0(\register_array_reg[3]_12 [13]),
        .I1(\register_array_reg[2]_13 [13]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [13]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [13]),
        .O(\a_reg_reg[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[13]_i_5 
       (.I0(\register_array_reg[7]_8 [13]),
        .I1(\register_array_reg[6]_9 [13]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [13]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [13]),
        .O(\a_reg_reg[13]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[13]_i_6 
       (.I0(\register_array_reg[11]_4 [13]),
        .I1(\register_array_reg[10]_5 [13]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [13]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [13]),
        .O(\a_reg_reg[13]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[13]_i_7 
       (.I0(\register_array_reg[15]_0 [13]),
        .I1(\register_array_reg[14]_1 [13]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [13]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [13]),
        .O(\a_reg_reg[13]_i_7_n_0 ));
  MUXF8 \a_reg_reg[14]_i_1 
       (.I0(\a_reg_reg[14]_i_2_n_0 ),
        .I1(\a_reg_reg[14]_i_3_n_0 ),
        .O(D[14]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[14]_i_2 
       (.I0(\a_reg_reg[14]_i_4_n_0 ),
        .I1(\a_reg_reg[14]_i_5_n_0 ),
        .O(\a_reg_reg[14]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[14]_i_3 
       (.I0(\a_reg_reg[14]_i_6_n_0 ),
        .I1(\a_reg_reg[14]_i_7_n_0 ),
        .O(\a_reg_reg[14]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[14]_i_4 
       (.I0(\register_array_reg[3]_12 [14]),
        .I1(\register_array_reg[2]_13 [14]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [14]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [14]),
        .O(\a_reg_reg[14]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[14]_i_5 
       (.I0(\register_array_reg[7]_8 [14]),
        .I1(\register_array_reg[6]_9 [14]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [14]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [14]),
        .O(\a_reg_reg[14]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[14]_i_6 
       (.I0(\register_array_reg[11]_4 [14]),
        .I1(\register_array_reg[10]_5 [14]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [14]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [14]),
        .O(\a_reg_reg[14]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[14]_i_7 
       (.I0(\register_array_reg[15]_0 [14]),
        .I1(\register_array_reg[14]_1 [14]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [14]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [14]),
        .O(\a_reg_reg[14]_i_7_n_0 ));
  MUXF8 \a_reg_reg[15]_i_1 
       (.I0(\a_reg_reg[15]_i_2_n_0 ),
        .I1(\a_reg_reg[15]_i_3_n_0 ),
        .O(D[15]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[15]_i_2 
       (.I0(\a_reg_reg[15]_i_4_n_0 ),
        .I1(\a_reg_reg[15]_i_5_n_0 ),
        .O(\a_reg_reg[15]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[15]_i_3 
       (.I0(\a_reg_reg[15]_i_6_n_0 ),
        .I1(\a_reg_reg[15]_i_7_n_0 ),
        .O(\a_reg_reg[15]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[15]_i_4 
       (.I0(\register_array_reg[3]_12 [15]),
        .I1(\register_array_reg[2]_13 [15]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [15]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [15]),
        .O(\a_reg_reg[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[15]_i_5 
       (.I0(\register_array_reg[7]_8 [15]),
        .I1(\register_array_reg[6]_9 [15]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [15]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [15]),
        .O(\a_reg_reg[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[15]_i_6 
       (.I0(\register_array_reg[11]_4 [15]),
        .I1(\register_array_reg[10]_5 [15]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [15]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [15]),
        .O(\a_reg_reg[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[15]_i_7 
       (.I0(\register_array_reg[15]_0 [15]),
        .I1(\register_array_reg[14]_1 [15]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [15]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [15]),
        .O(\a_reg_reg[15]_i_7_n_0 ));
  MUXF8 \a_reg_reg[16]_i_1 
       (.I0(\a_reg_reg[16]_i_2_n_0 ),
        .I1(\a_reg_reg[16]_i_3_n_0 ),
        .O(D[16]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[16]_i_2 
       (.I0(\a_reg_reg[16]_i_4_n_0 ),
        .I1(\a_reg_reg[16]_i_5_n_0 ),
        .O(\a_reg_reg[16]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[16]_i_3 
       (.I0(\a_reg_reg[16]_i_6_n_0 ),
        .I1(\a_reg_reg[16]_i_7_n_0 ),
        .O(\a_reg_reg[16]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[16]_i_4 
       (.I0(\register_array_reg[3]_12 [16]),
        .I1(\register_array_reg[2]_13 [16]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [16]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [16]),
        .O(\a_reg_reg[16]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[16]_i_5 
       (.I0(\register_array_reg[7]_8 [16]),
        .I1(\register_array_reg[6]_9 [16]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [16]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [16]),
        .O(\a_reg_reg[16]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[16]_i_6 
       (.I0(\register_array_reg[11]_4 [16]),
        .I1(\register_array_reg[10]_5 [16]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [16]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [16]),
        .O(\a_reg_reg[16]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[16]_i_7 
       (.I0(\register_array_reg[15]_0 [16]),
        .I1(\register_array_reg[14]_1 [16]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [16]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [16]),
        .O(\a_reg_reg[16]_i_7_n_0 ));
  MUXF8 \a_reg_reg[17]_i_1 
       (.I0(\a_reg_reg[17]_i_2_n_0 ),
        .I1(\a_reg_reg[17]_i_3_n_0 ),
        .O(D[17]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[17]_i_2 
       (.I0(\a_reg_reg[17]_i_4_n_0 ),
        .I1(\a_reg_reg[17]_i_5_n_0 ),
        .O(\a_reg_reg[17]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[17]_i_3 
       (.I0(\a_reg_reg[17]_i_6_n_0 ),
        .I1(\a_reg_reg[17]_i_7_n_0 ),
        .O(\a_reg_reg[17]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[17]_i_4 
       (.I0(\register_array_reg[3]_12 [17]),
        .I1(\register_array_reg[2]_13 [17]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [17]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [17]),
        .O(\a_reg_reg[17]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[17]_i_5 
       (.I0(\register_array_reg[7]_8 [17]),
        .I1(\register_array_reg[6]_9 [17]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [17]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [17]),
        .O(\a_reg_reg[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[17]_i_6 
       (.I0(\register_array_reg[11]_4 [17]),
        .I1(\register_array_reg[10]_5 [17]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [17]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [17]),
        .O(\a_reg_reg[17]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[17]_i_7 
       (.I0(\register_array_reg[15]_0 [17]),
        .I1(\register_array_reg[14]_1 [17]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [17]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [17]),
        .O(\a_reg_reg[17]_i_7_n_0 ));
  MUXF8 \a_reg_reg[18]_i_1 
       (.I0(\a_reg_reg[18]_i_2_n_0 ),
        .I1(\a_reg_reg[18]_i_3_n_0 ),
        .O(D[18]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[18]_i_2 
       (.I0(\a_reg_reg[18]_i_4_n_0 ),
        .I1(\a_reg_reg[18]_i_5_n_0 ),
        .O(\a_reg_reg[18]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[18]_i_3 
       (.I0(\a_reg_reg[18]_i_6_n_0 ),
        .I1(\a_reg_reg[18]_i_7_n_0 ),
        .O(\a_reg_reg[18]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[18]_i_4 
       (.I0(\register_array_reg[3]_12 [18]),
        .I1(\register_array_reg[2]_13 [18]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [18]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [18]),
        .O(\a_reg_reg[18]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[18]_i_5 
       (.I0(\register_array_reg[7]_8 [18]),
        .I1(\register_array_reg[6]_9 [18]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [18]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [18]),
        .O(\a_reg_reg[18]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[18]_i_6 
       (.I0(\register_array_reg[11]_4 [18]),
        .I1(\register_array_reg[10]_5 [18]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [18]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [18]),
        .O(\a_reg_reg[18]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[18]_i_7 
       (.I0(\register_array_reg[15]_0 [18]),
        .I1(\register_array_reg[14]_1 [18]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [18]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [18]),
        .O(\a_reg_reg[18]_i_7_n_0 ));
  MUXF8 \a_reg_reg[19]_i_1 
       (.I0(\a_reg_reg[19]_i_2_n_0 ),
        .I1(\a_reg_reg[19]_i_3_n_0 ),
        .O(D[19]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[19]_i_2 
       (.I0(\a_reg_reg[19]_i_4_n_0 ),
        .I1(\a_reg_reg[19]_i_5_n_0 ),
        .O(\a_reg_reg[19]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[19]_i_3 
       (.I0(\a_reg_reg[19]_i_6_n_0 ),
        .I1(\a_reg_reg[19]_i_7_n_0 ),
        .O(\a_reg_reg[19]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[19]_i_4 
       (.I0(\register_array_reg[3]_12 [19]),
        .I1(\register_array_reg[2]_13 [19]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [19]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [19]),
        .O(\a_reg_reg[19]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[19]_i_5 
       (.I0(\register_array_reg[7]_8 [19]),
        .I1(\register_array_reg[6]_9 [19]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [19]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [19]),
        .O(\a_reg_reg[19]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[19]_i_6 
       (.I0(\register_array_reg[11]_4 [19]),
        .I1(\register_array_reg[10]_5 [19]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [19]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [19]),
        .O(\a_reg_reg[19]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[19]_i_7 
       (.I0(\register_array_reg[15]_0 [19]),
        .I1(\register_array_reg[14]_1 [19]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [19]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [19]),
        .O(\a_reg_reg[19]_i_7_n_0 ));
  MUXF8 \a_reg_reg[1]_i_1 
       (.I0(\a_reg_reg[1]_i_2_n_0 ),
        .I1(\a_reg_reg[1]_i_3_n_0 ),
        .O(D[1]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[1]_i_2 
       (.I0(\a_reg_reg[1]_i_4_n_0 ),
        .I1(\a_reg_reg[1]_i_5_n_0 ),
        .O(\a_reg_reg[1]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[1]_i_3 
       (.I0(\a_reg_reg[1]_i_6_n_0 ),
        .I1(\a_reg_reg[1]_i_7_n_0 ),
        .O(\a_reg_reg[1]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[1]_i_4 
       (.I0(\register_array_reg[3]_12 [1]),
        .I1(\register_array_reg[2]_13 [1]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [1]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [1]),
        .O(\a_reg_reg[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[1]_i_5 
       (.I0(\register_array_reg[7]_8 [1]),
        .I1(\register_array_reg[6]_9 [1]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [1]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [1]),
        .O(\a_reg_reg[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[1]_i_6 
       (.I0(\register_array_reg[11]_4 [1]),
        .I1(\register_array_reg[10]_5 [1]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [1]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [1]),
        .O(\a_reg_reg[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[1]_i_7 
       (.I0(\register_array_reg[15]_0 [1]),
        .I1(\register_array_reg[14]_1 [1]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [1]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [1]),
        .O(\a_reg_reg[1]_i_7_n_0 ));
  MUXF8 \a_reg_reg[20]_i_1 
       (.I0(\a_reg_reg[20]_i_2_n_0 ),
        .I1(\a_reg_reg[20]_i_3_n_0 ),
        .O(D[20]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[20]_i_2 
       (.I0(\a_reg_reg[20]_i_4_n_0 ),
        .I1(\a_reg_reg[20]_i_5_n_0 ),
        .O(\a_reg_reg[20]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[20]_i_3 
       (.I0(\a_reg_reg[20]_i_6_n_0 ),
        .I1(\a_reg_reg[20]_i_7_n_0 ),
        .O(\a_reg_reg[20]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[20]_i_4 
       (.I0(\register_array_reg[3]_12 [20]),
        .I1(\register_array_reg[2]_13 [20]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [20]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [20]),
        .O(\a_reg_reg[20]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[20]_i_5 
       (.I0(\register_array_reg[7]_8 [20]),
        .I1(\register_array_reg[6]_9 [20]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [20]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [20]),
        .O(\a_reg_reg[20]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[20]_i_6 
       (.I0(\register_array_reg[11]_4 [20]),
        .I1(\register_array_reg[10]_5 [20]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [20]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [20]),
        .O(\a_reg_reg[20]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[20]_i_7 
       (.I0(\register_array_reg[15]_0 [20]),
        .I1(\register_array_reg[14]_1 [20]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [20]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [20]),
        .O(\a_reg_reg[20]_i_7_n_0 ));
  MUXF8 \a_reg_reg[21]_i_1 
       (.I0(\a_reg_reg[21]_i_2_n_0 ),
        .I1(\a_reg_reg[21]_i_3_n_0 ),
        .O(D[21]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[21]_i_2 
       (.I0(\a_reg_reg[21]_i_4_n_0 ),
        .I1(\a_reg_reg[21]_i_5_n_0 ),
        .O(\a_reg_reg[21]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[21]_i_3 
       (.I0(\a_reg_reg[21]_i_6_n_0 ),
        .I1(\a_reg_reg[21]_i_7_n_0 ),
        .O(\a_reg_reg[21]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[21]_i_4 
       (.I0(\register_array_reg[3]_12 [21]),
        .I1(\register_array_reg[2]_13 [21]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [21]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [21]),
        .O(\a_reg_reg[21]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[21]_i_5 
       (.I0(\register_array_reg[7]_8 [21]),
        .I1(\register_array_reg[6]_9 [21]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [21]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [21]),
        .O(\a_reg_reg[21]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[21]_i_6 
       (.I0(\register_array_reg[11]_4 [21]),
        .I1(\register_array_reg[10]_5 [21]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [21]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [21]),
        .O(\a_reg_reg[21]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[21]_i_7 
       (.I0(\register_array_reg[15]_0 [21]),
        .I1(\register_array_reg[14]_1 [21]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [21]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [21]),
        .O(\a_reg_reg[21]_i_7_n_0 ));
  MUXF8 \a_reg_reg[22]_i_1 
       (.I0(\a_reg_reg[22]_i_2_n_0 ),
        .I1(\a_reg_reg[22]_i_3_n_0 ),
        .O(D[22]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[22]_i_2 
       (.I0(\a_reg_reg[22]_i_4_n_0 ),
        .I1(\a_reg_reg[22]_i_5_n_0 ),
        .O(\a_reg_reg[22]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[22]_i_3 
       (.I0(\a_reg_reg[22]_i_6_n_0 ),
        .I1(\a_reg_reg[22]_i_7_n_0 ),
        .O(\a_reg_reg[22]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[22]_i_4 
       (.I0(\register_array_reg[3]_12 [22]),
        .I1(\register_array_reg[2]_13 [22]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [22]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [22]),
        .O(\a_reg_reg[22]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[22]_i_5 
       (.I0(\register_array_reg[7]_8 [22]),
        .I1(\register_array_reg[6]_9 [22]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [22]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [22]),
        .O(\a_reg_reg[22]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[22]_i_6 
       (.I0(\register_array_reg[11]_4 [22]),
        .I1(\register_array_reg[10]_5 [22]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [22]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [22]),
        .O(\a_reg_reg[22]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[22]_i_7 
       (.I0(\register_array_reg[15]_0 [22]),
        .I1(\register_array_reg[14]_1 [22]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [22]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [22]),
        .O(\a_reg_reg[22]_i_7_n_0 ));
  MUXF8 \a_reg_reg[23]_i_1 
       (.I0(\a_reg_reg[23]_i_2_n_0 ),
        .I1(\a_reg_reg[23]_i_3_n_0 ),
        .O(D[23]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[23]_i_2 
       (.I0(\a_reg_reg[23]_i_4_n_0 ),
        .I1(\a_reg_reg[23]_i_5_n_0 ),
        .O(\a_reg_reg[23]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[23]_i_3 
       (.I0(\a_reg_reg[23]_i_6_n_0 ),
        .I1(\a_reg_reg[23]_i_7_n_0 ),
        .O(\a_reg_reg[23]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[23]_i_4 
       (.I0(\register_array_reg[3]_12 [23]),
        .I1(\register_array_reg[2]_13 [23]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [23]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [23]),
        .O(\a_reg_reg[23]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[23]_i_5 
       (.I0(\register_array_reg[7]_8 [23]),
        .I1(\register_array_reg[6]_9 [23]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [23]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [23]),
        .O(\a_reg_reg[23]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[23]_i_6 
       (.I0(\register_array_reg[11]_4 [23]),
        .I1(\register_array_reg[10]_5 [23]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [23]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [23]),
        .O(\a_reg_reg[23]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[23]_i_7 
       (.I0(\register_array_reg[15]_0 [23]),
        .I1(\register_array_reg[14]_1 [23]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [23]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [23]),
        .O(\a_reg_reg[23]_i_7_n_0 ));
  MUXF8 \a_reg_reg[24]_i_1 
       (.I0(\a_reg_reg[24]_i_2_n_0 ),
        .I1(\a_reg_reg[24]_i_3_n_0 ),
        .O(D[24]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[24]_i_2 
       (.I0(\a_reg_reg[24]_i_4_n_0 ),
        .I1(\a_reg_reg[24]_i_5_n_0 ),
        .O(\a_reg_reg[24]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[24]_i_3 
       (.I0(\a_reg_reg[24]_i_6_n_0 ),
        .I1(\a_reg_reg[24]_i_7_n_0 ),
        .O(\a_reg_reg[24]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[24]_i_4 
       (.I0(\register_array_reg[3]_12 [24]),
        .I1(\register_array_reg[2]_13 [24]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [24]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [24]),
        .O(\a_reg_reg[24]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[24]_i_5 
       (.I0(\register_array_reg[7]_8 [24]),
        .I1(\register_array_reg[6]_9 [24]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [24]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [24]),
        .O(\a_reg_reg[24]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[24]_i_6 
       (.I0(\register_array_reg[11]_4 [24]),
        .I1(\register_array_reg[10]_5 [24]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [24]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [24]),
        .O(\a_reg_reg[24]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[24]_i_7 
       (.I0(\register_array_reg[15]_0 [24]),
        .I1(\register_array_reg[14]_1 [24]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [24]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [24]),
        .O(\a_reg_reg[24]_i_7_n_0 ));
  MUXF8 \a_reg_reg[25]_i_1 
       (.I0(\a_reg_reg[25]_i_2_n_0 ),
        .I1(\a_reg_reg[25]_i_3_n_0 ),
        .O(D[25]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[25]_i_2 
       (.I0(\a_reg_reg[25]_i_4_n_0 ),
        .I1(\a_reg_reg[25]_i_5_n_0 ),
        .O(\a_reg_reg[25]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[25]_i_3 
       (.I0(\a_reg_reg[25]_i_6_n_0 ),
        .I1(\a_reg_reg[25]_i_7_n_0 ),
        .O(\a_reg_reg[25]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[25]_i_4 
       (.I0(\register_array_reg[3]_12 [25]),
        .I1(\register_array_reg[2]_13 [25]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [25]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [25]),
        .O(\a_reg_reg[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[25]_i_5 
       (.I0(\register_array_reg[7]_8 [25]),
        .I1(\register_array_reg[6]_9 [25]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [25]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [25]),
        .O(\a_reg_reg[25]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[25]_i_6 
       (.I0(\register_array_reg[11]_4 [25]),
        .I1(\register_array_reg[10]_5 [25]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [25]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [25]),
        .O(\a_reg_reg[25]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[25]_i_7 
       (.I0(\register_array_reg[15]_0 [25]),
        .I1(\register_array_reg[14]_1 [25]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [25]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [25]),
        .O(\a_reg_reg[25]_i_7_n_0 ));
  MUXF8 \a_reg_reg[26]_i_1 
       (.I0(\a_reg_reg[26]_i_2_n_0 ),
        .I1(\a_reg_reg[26]_i_3_n_0 ),
        .O(D[26]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[26]_i_2 
       (.I0(\a_reg_reg[26]_i_4_n_0 ),
        .I1(\a_reg_reg[26]_i_5_n_0 ),
        .O(\a_reg_reg[26]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[26]_i_3 
       (.I0(\a_reg_reg[26]_i_6_n_0 ),
        .I1(\a_reg_reg[26]_i_7_n_0 ),
        .O(\a_reg_reg[26]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[26]_i_4 
       (.I0(\register_array_reg[3]_12 [26]),
        .I1(\register_array_reg[2]_13 [26]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [26]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [26]),
        .O(\a_reg_reg[26]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[26]_i_5 
       (.I0(\register_array_reg[7]_8 [26]),
        .I1(\register_array_reg[6]_9 [26]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [26]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [26]),
        .O(\a_reg_reg[26]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[26]_i_6 
       (.I0(\register_array_reg[11]_4 [26]),
        .I1(\register_array_reg[10]_5 [26]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [26]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [26]),
        .O(\a_reg_reg[26]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[26]_i_7 
       (.I0(\register_array_reg[15]_0 [26]),
        .I1(\register_array_reg[14]_1 [26]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [26]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [26]),
        .O(\a_reg_reg[26]_i_7_n_0 ));
  MUXF8 \a_reg_reg[27]_i_1 
       (.I0(\a_reg_reg[27]_i_2_n_0 ),
        .I1(\a_reg_reg[27]_i_3_n_0 ),
        .O(D[27]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[27]_i_2 
       (.I0(\a_reg_reg[27]_i_4_n_0 ),
        .I1(\a_reg_reg[27]_i_5_n_0 ),
        .O(\a_reg_reg[27]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[27]_i_3 
       (.I0(\a_reg_reg[27]_i_6_n_0 ),
        .I1(\a_reg_reg[27]_i_7_n_0 ),
        .O(\a_reg_reg[27]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[27]_i_4 
       (.I0(\register_array_reg[3]_12 [27]),
        .I1(\register_array_reg[2]_13 [27]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [27]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [27]),
        .O(\a_reg_reg[27]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[27]_i_5 
       (.I0(\register_array_reg[7]_8 [27]),
        .I1(\register_array_reg[6]_9 [27]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [27]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [27]),
        .O(\a_reg_reg[27]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[27]_i_6 
       (.I0(\register_array_reg[11]_4 [27]),
        .I1(\register_array_reg[10]_5 [27]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [27]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [27]),
        .O(\a_reg_reg[27]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[27]_i_7 
       (.I0(\register_array_reg[15]_0 [27]),
        .I1(\register_array_reg[14]_1 [27]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [27]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [27]),
        .O(\a_reg_reg[27]_i_7_n_0 ));
  MUXF8 \a_reg_reg[28]_i_1 
       (.I0(\a_reg_reg[28]_i_2_n_0 ),
        .I1(\a_reg_reg[28]_i_3_n_0 ),
        .O(D[28]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[28]_i_2 
       (.I0(\a_reg_reg[28]_i_4_n_0 ),
        .I1(\a_reg_reg[28]_i_5_n_0 ),
        .O(\a_reg_reg[28]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[28]_i_3 
       (.I0(\a_reg_reg[28]_i_6_n_0 ),
        .I1(\a_reg_reg[28]_i_7_n_0 ),
        .O(\a_reg_reg[28]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[28]_i_4 
       (.I0(\register_array_reg[3]_12 [28]),
        .I1(\register_array_reg[2]_13 [28]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [28]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [28]),
        .O(\a_reg_reg[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[28]_i_5 
       (.I0(\register_array_reg[7]_8 [28]),
        .I1(\register_array_reg[6]_9 [28]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [28]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [28]),
        .O(\a_reg_reg[28]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[28]_i_6 
       (.I0(\register_array_reg[11]_4 [28]),
        .I1(\register_array_reg[10]_5 [28]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [28]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [28]),
        .O(\a_reg_reg[28]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[28]_i_7 
       (.I0(\register_array_reg[15]_0 [28]),
        .I1(\register_array_reg[14]_1 [28]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [28]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [28]),
        .O(\a_reg_reg[28]_i_7_n_0 ));
  MUXF8 \a_reg_reg[29]_i_1 
       (.I0(\a_reg_reg[29]_i_2_n_0 ),
        .I1(\a_reg_reg[29]_i_3_n_0 ),
        .O(D[29]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[29]_i_2 
       (.I0(\a_reg_reg[29]_i_4_n_0 ),
        .I1(\a_reg_reg[29]_i_5_n_0 ),
        .O(\a_reg_reg[29]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[29]_i_3 
       (.I0(\a_reg_reg[29]_i_6_n_0 ),
        .I1(\a_reg_reg[29]_i_7_n_0 ),
        .O(\a_reg_reg[29]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[29]_i_4 
       (.I0(\register_array_reg[3]_12 [29]),
        .I1(\register_array_reg[2]_13 [29]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [29]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [29]),
        .O(\a_reg_reg[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[29]_i_5 
       (.I0(\register_array_reg[7]_8 [29]),
        .I1(\register_array_reg[6]_9 [29]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [29]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [29]),
        .O(\a_reg_reg[29]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[29]_i_6 
       (.I0(\register_array_reg[11]_4 [29]),
        .I1(\register_array_reg[10]_5 [29]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [29]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [29]),
        .O(\a_reg_reg[29]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[29]_i_7 
       (.I0(\register_array_reg[15]_0 [29]),
        .I1(\register_array_reg[14]_1 [29]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [29]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [29]),
        .O(\a_reg_reg[29]_i_7_n_0 ));
  MUXF8 \a_reg_reg[2]_i_1 
       (.I0(\a_reg_reg[2]_i_2_n_0 ),
        .I1(\a_reg_reg[2]_i_3_n_0 ),
        .O(D[2]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[2]_i_2 
       (.I0(\a_reg_reg[2]_i_4_n_0 ),
        .I1(\a_reg_reg[2]_i_5_n_0 ),
        .O(\a_reg_reg[2]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[2]_i_3 
       (.I0(\a_reg_reg[2]_i_6_n_0 ),
        .I1(\a_reg_reg[2]_i_7_n_0 ),
        .O(\a_reg_reg[2]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[2]_i_4 
       (.I0(\register_array_reg[3]_12 [2]),
        .I1(\register_array_reg[2]_13 [2]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [2]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [2]),
        .O(\a_reg_reg[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[2]_i_5 
       (.I0(\register_array_reg[7]_8 [2]),
        .I1(\register_array_reg[6]_9 [2]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [2]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [2]),
        .O(\a_reg_reg[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[2]_i_6 
       (.I0(\register_array_reg[11]_4 [2]),
        .I1(\register_array_reg[10]_5 [2]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [2]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [2]),
        .O(\a_reg_reg[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[2]_i_7 
       (.I0(\register_array_reg[15]_0 [2]),
        .I1(\register_array_reg[14]_1 [2]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [2]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [2]),
        .O(\a_reg_reg[2]_i_7_n_0 ));
  MUXF8 \a_reg_reg[30]_i_1 
       (.I0(\a_reg_reg[30]_i_2_n_0 ),
        .I1(\a_reg_reg[30]_i_3_n_0 ),
        .O(D[30]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[30]_i_2 
       (.I0(\a_reg_reg[30]_i_4_n_0 ),
        .I1(\a_reg_reg[30]_i_5_n_0 ),
        .O(\a_reg_reg[30]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[30]_i_3 
       (.I0(\a_reg_reg[30]_i_6_n_0 ),
        .I1(\a_reg_reg[30]_i_7_n_0 ),
        .O(\a_reg_reg[30]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[30]_i_4 
       (.I0(\register_array_reg[3]_12 [30]),
        .I1(\register_array_reg[2]_13 [30]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [30]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [30]),
        .O(\a_reg_reg[30]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[30]_i_5 
       (.I0(\register_array_reg[7]_8 [30]),
        .I1(\register_array_reg[6]_9 [30]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [30]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [30]),
        .O(\a_reg_reg[30]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[30]_i_6 
       (.I0(\register_array_reg[11]_4 [30]),
        .I1(\register_array_reg[10]_5 [30]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [30]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [30]),
        .O(\a_reg_reg[30]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[30]_i_7 
       (.I0(\register_array_reg[15]_0 [30]),
        .I1(\register_array_reg[14]_1 [30]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [30]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [30]),
        .O(\a_reg_reg[30]_i_7_n_0 ));
  MUXF8 \a_reg_reg[31]_i_1 
       (.I0(\a_reg_reg[31]_i_5_n_0 ),
        .I1(\a_reg_reg[31]_i_6_n_0 ),
        .O(D[31]),
        .S(rad1[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[31]_i_10 
       (.I0(\register_array_reg[3]_12 [31]),
        .I1(\register_array_reg[2]_13 [31]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [31]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [31]),
        .O(\a_reg_reg[31]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[31]_i_11 
       (.I0(\register_array_reg[7]_8 [31]),
        .I1(\register_array_reg[6]_9 [31]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [31]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [31]),
        .O(\a_reg_reg[31]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[31]_i_12 
       (.I0(\register_array_reg[11]_4 [31]),
        .I1(\register_array_reg[10]_5 [31]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [31]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [31]),
        .O(\a_reg_reg[31]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[31]_i_13 
       (.I0(\register_array_reg[15]_0 [31]),
        .I1(\register_array_reg[14]_1 [31]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [31]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [31]),
        .O(\a_reg_reg[31]_i_13_n_0 ));
  MUXF7 \a_reg_reg[31]_i_5 
       (.I0(\a_reg_reg[31]_i_10_n_0 ),
        .I1(\a_reg_reg[31]_i_11_n_0 ),
        .O(\a_reg_reg[31]_i_5_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[31]_i_6 
       (.I0(\a_reg_reg[31]_i_12_n_0 ),
        .I1(\a_reg_reg[31]_i_13_n_0 ),
        .O(\a_reg_reg[31]_i_6_n_0 ),
        .S(rad1[2]));
  MUXF8 \a_reg_reg[3]_i_1 
       (.I0(\a_reg_reg[3]_i_2_n_0 ),
        .I1(\a_reg_reg[3]_i_3_n_0 ),
        .O(D[3]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[3]_i_2 
       (.I0(\a_reg_reg[3]_i_4_n_0 ),
        .I1(\a_reg_reg[3]_i_5_n_0 ),
        .O(\a_reg_reg[3]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[3]_i_3 
       (.I0(\a_reg_reg[3]_i_6_n_0 ),
        .I1(\a_reg_reg[3]_i_7_n_0 ),
        .O(\a_reg_reg[3]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[3]_i_4 
       (.I0(\register_array_reg[3]_12 [3]),
        .I1(\register_array_reg[2]_13 [3]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [3]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [3]),
        .O(\a_reg_reg[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[3]_i_5 
       (.I0(\register_array_reg[7]_8 [3]),
        .I1(\register_array_reg[6]_9 [3]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [3]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [3]),
        .O(\a_reg_reg[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[3]_i_6 
       (.I0(\register_array_reg[11]_4 [3]),
        .I1(\register_array_reg[10]_5 [3]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [3]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [3]),
        .O(\a_reg_reg[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[3]_i_7 
       (.I0(\register_array_reg[15]_0 [3]),
        .I1(\register_array_reg[14]_1 [3]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [3]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [3]),
        .O(\a_reg_reg[3]_i_7_n_0 ));
  MUXF8 \a_reg_reg[4]_i_1 
       (.I0(\a_reg_reg[4]_i_2_n_0 ),
        .I1(\a_reg_reg[4]_i_3_n_0 ),
        .O(D[4]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[4]_i_2 
       (.I0(\a_reg_reg[4]_i_4_n_0 ),
        .I1(\a_reg_reg[4]_i_5_n_0 ),
        .O(\a_reg_reg[4]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[4]_i_3 
       (.I0(\a_reg_reg[4]_i_6_n_0 ),
        .I1(\a_reg_reg[4]_i_7_n_0 ),
        .O(\a_reg_reg[4]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[4]_i_4 
       (.I0(\register_array_reg[3]_12 [4]),
        .I1(\register_array_reg[2]_13 [4]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [4]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [4]),
        .O(\a_reg_reg[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[4]_i_5 
       (.I0(\register_array_reg[7]_8 [4]),
        .I1(\register_array_reg[6]_9 [4]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [4]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [4]),
        .O(\a_reg_reg[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[4]_i_6 
       (.I0(\register_array_reg[11]_4 [4]),
        .I1(\register_array_reg[10]_5 [4]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [4]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [4]),
        .O(\a_reg_reg[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[4]_i_7 
       (.I0(\register_array_reg[15]_0 [4]),
        .I1(\register_array_reg[14]_1 [4]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [4]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [4]),
        .O(\a_reg_reg[4]_i_7_n_0 ));
  MUXF8 \a_reg_reg[5]_i_1 
       (.I0(\a_reg_reg[5]_i_2_n_0 ),
        .I1(\a_reg_reg[5]_i_3_n_0 ),
        .O(D[5]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[5]_i_2 
       (.I0(\a_reg_reg[5]_i_4_n_0 ),
        .I1(\a_reg_reg[5]_i_5_n_0 ),
        .O(\a_reg_reg[5]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[5]_i_3 
       (.I0(\a_reg_reg[5]_i_6_n_0 ),
        .I1(\a_reg_reg[5]_i_7_n_0 ),
        .O(\a_reg_reg[5]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[5]_i_4 
       (.I0(\register_array_reg[3]_12 [5]),
        .I1(\register_array_reg[2]_13 [5]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [5]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [5]),
        .O(\a_reg_reg[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[5]_i_5 
       (.I0(\register_array_reg[7]_8 [5]),
        .I1(\register_array_reg[6]_9 [5]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [5]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [5]),
        .O(\a_reg_reg[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[5]_i_6 
       (.I0(\register_array_reg[11]_4 [5]),
        .I1(\register_array_reg[10]_5 [5]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [5]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [5]),
        .O(\a_reg_reg[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[5]_i_7 
       (.I0(\register_array_reg[15]_0 [5]),
        .I1(\register_array_reg[14]_1 [5]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [5]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [5]),
        .O(\a_reg_reg[5]_i_7_n_0 ));
  MUXF8 \a_reg_reg[6]_i_1 
       (.I0(\a_reg_reg[6]_i_2_n_0 ),
        .I1(\a_reg_reg[6]_i_3_n_0 ),
        .O(D[6]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[6]_i_2 
       (.I0(\a_reg_reg[6]_i_4_n_0 ),
        .I1(\a_reg_reg[6]_i_5_n_0 ),
        .O(\a_reg_reg[6]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[6]_i_3 
       (.I0(\a_reg_reg[6]_i_6_n_0 ),
        .I1(\a_reg_reg[6]_i_7_n_0 ),
        .O(\a_reg_reg[6]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[6]_i_4 
       (.I0(\register_array_reg[3]_12 [6]),
        .I1(\register_array_reg[2]_13 [6]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [6]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [6]),
        .O(\a_reg_reg[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[6]_i_5 
       (.I0(\register_array_reg[7]_8 [6]),
        .I1(\register_array_reg[6]_9 [6]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [6]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [6]),
        .O(\a_reg_reg[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[6]_i_6 
       (.I0(\register_array_reg[11]_4 [6]),
        .I1(\register_array_reg[10]_5 [6]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [6]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [6]),
        .O(\a_reg_reg[6]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[6]_i_7 
       (.I0(\register_array_reg[15]_0 [6]),
        .I1(\register_array_reg[14]_1 [6]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [6]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [6]),
        .O(\a_reg_reg[6]_i_7_n_0 ));
  MUXF8 \a_reg_reg[7]_i_1 
       (.I0(\a_reg_reg[7]_i_2_n_0 ),
        .I1(\a_reg_reg[7]_i_3_n_0 ),
        .O(D[7]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[7]_i_2 
       (.I0(\a_reg_reg[7]_i_4_n_0 ),
        .I1(\a_reg_reg[7]_i_5_n_0 ),
        .O(\a_reg_reg[7]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[7]_i_3 
       (.I0(\a_reg_reg[7]_i_6_n_0 ),
        .I1(\a_reg_reg[7]_i_7_n_0 ),
        .O(\a_reg_reg[7]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[7]_i_4 
       (.I0(\register_array_reg[3]_12 [7]),
        .I1(\register_array_reg[2]_13 [7]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [7]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [7]),
        .O(\a_reg_reg[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[7]_i_5 
       (.I0(\register_array_reg[7]_8 [7]),
        .I1(\register_array_reg[6]_9 [7]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [7]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [7]),
        .O(\a_reg_reg[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[7]_i_6 
       (.I0(\register_array_reg[11]_4 [7]),
        .I1(\register_array_reg[10]_5 [7]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [7]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [7]),
        .O(\a_reg_reg[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[7]_i_7 
       (.I0(\register_array_reg[15]_0 [7]),
        .I1(\register_array_reg[14]_1 [7]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [7]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [7]),
        .O(\a_reg_reg[7]_i_7_n_0 ));
  MUXF8 \a_reg_reg[8]_i_1 
       (.I0(\a_reg_reg[8]_i_2_n_0 ),
        .I1(\a_reg_reg[8]_i_3_n_0 ),
        .O(D[8]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[8]_i_2 
       (.I0(\a_reg_reg[8]_i_4_n_0 ),
        .I1(\a_reg_reg[8]_i_5_n_0 ),
        .O(\a_reg_reg[8]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[8]_i_3 
       (.I0(\a_reg_reg[8]_i_6_n_0 ),
        .I1(\a_reg_reg[8]_i_7_n_0 ),
        .O(\a_reg_reg[8]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[8]_i_4 
       (.I0(\register_array_reg[3]_12 [8]),
        .I1(\register_array_reg[2]_13 [8]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [8]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [8]),
        .O(\a_reg_reg[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[8]_i_5 
       (.I0(\register_array_reg[7]_8 [8]),
        .I1(\register_array_reg[6]_9 [8]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [8]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [8]),
        .O(\a_reg_reg[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[8]_i_6 
       (.I0(\register_array_reg[11]_4 [8]),
        .I1(\register_array_reg[10]_5 [8]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [8]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [8]),
        .O(\a_reg_reg[8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[8]_i_7 
       (.I0(\register_array_reg[15]_0 [8]),
        .I1(\register_array_reg[14]_1 [8]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [8]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [8]),
        .O(\a_reg_reg[8]_i_7_n_0 ));
  MUXF8 \a_reg_reg[9]_i_1 
       (.I0(\a_reg_reg[9]_i_2_n_0 ),
        .I1(\a_reg_reg[9]_i_3_n_0 ),
        .O(D[9]),
        .S(rad1[3]));
  MUXF7 \a_reg_reg[9]_i_2 
       (.I0(\a_reg_reg[9]_i_4_n_0 ),
        .I1(\a_reg_reg[9]_i_5_n_0 ),
        .O(\a_reg_reg[9]_i_2_n_0 ),
        .S(rad1[2]));
  MUXF7 \a_reg_reg[9]_i_3 
       (.I0(\a_reg_reg[9]_i_6_n_0 ),
        .I1(\a_reg_reg[9]_i_7_n_0 ),
        .O(\a_reg_reg[9]_i_3_n_0 ),
        .S(rad1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[9]_i_4 
       (.I0(\register_array_reg[3]_12 [9]),
        .I1(\register_array_reg[2]_13 [9]),
        .I2(rad1[1]),
        .I3(\register_array_reg[1]_14 [9]),
        .I4(rad1[0]),
        .I5(\register_array_reg[0]_15 [9]),
        .O(\a_reg_reg[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[9]_i_5 
       (.I0(\register_array_reg[7]_8 [9]),
        .I1(\register_array_reg[6]_9 [9]),
        .I2(rad1[1]),
        .I3(\register_array_reg[5]_10 [9]),
        .I4(rad1[0]),
        .I5(\register_array_reg[4]_11 [9]),
        .O(\a_reg_reg[9]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[9]_i_6 
       (.I0(\register_array_reg[11]_4 [9]),
        .I1(\register_array_reg[10]_5 [9]),
        .I2(rad1[1]),
        .I3(\register_array_reg[9]_6 [9]),
        .I4(rad1[0]),
        .I5(\register_array_reg[8]_7 [9]),
        .O(\a_reg_reg[9]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \a_reg_reg[9]_i_7 
       (.I0(\register_array_reg[15]_0 [9]),
        .I1(\register_array_reg[14]_1 [9]),
        .I2(rad1[1]),
        .I3(\register_array_reg[13]_2 [9]),
        .I4(rad1[0]),
        .I5(\register_array_reg[12]_3 [9]),
        .O(\a_reg_reg[9]_i_7_n_0 ));
  MUXF8 \b_reg_reg[0]_i_1 
       (.I0(\b_reg_reg[0]_i_2_n_0 ),
        .I1(\b_reg_reg[0]_i_3_n_0 ),
        .O(output_big[0]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[0]_i_2 
       (.I0(\b_reg_reg[0]_i_4_n_0 ),
        .I1(\b_reg_reg[0]_i_5_n_0 ),
        .O(\b_reg_reg[0]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[0]_i_3 
       (.I0(\b_reg_reg[0]_i_6_n_0 ),
        .I1(\b_reg_reg[0]_i_7_n_0 ),
        .O(\b_reg_reg[0]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[0]_i_4 
       (.I0(\register_array_reg[3]_12 [0]),
        .I1(\register_array_reg[2]_13 [0]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [0]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [0]),
        .O(\b_reg_reg[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[0]_i_5 
       (.I0(\register_array_reg[7]_8 [0]),
        .I1(\register_array_reg[6]_9 [0]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [0]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [0]),
        .O(\b_reg_reg[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[0]_i_6 
       (.I0(\register_array_reg[11]_4 [0]),
        .I1(\register_array_reg[10]_5 [0]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [0]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [0]),
        .O(\b_reg_reg[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[0]_i_7 
       (.I0(\register_array_reg[15]_0 [0]),
        .I1(\register_array_reg[14]_1 [0]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [0]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [0]),
        .O(\b_reg_reg[0]_i_7_n_0 ));
  MUXF8 \b_reg_reg[10]_i_1 
       (.I0(\b_reg_reg[10]_i_2_n_0 ),
        .I1(\b_reg_reg[10]_i_3_n_0 ),
        .O(output_big[10]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[10]_i_2 
       (.I0(\b_reg_reg[10]_i_4_n_0 ),
        .I1(\b_reg_reg[10]_i_5_n_0 ),
        .O(\b_reg_reg[10]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[10]_i_3 
       (.I0(\b_reg_reg[10]_i_6_n_0 ),
        .I1(\b_reg_reg[10]_i_7_n_0 ),
        .O(\b_reg_reg[10]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[10]_i_4 
       (.I0(\register_array_reg[3]_12 [10]),
        .I1(\register_array_reg[2]_13 [10]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [10]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [10]),
        .O(\b_reg_reg[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[10]_i_5 
       (.I0(\register_array_reg[7]_8 [10]),
        .I1(\register_array_reg[6]_9 [10]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [10]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [10]),
        .O(\b_reg_reg[10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[10]_i_6 
       (.I0(\register_array_reg[11]_4 [10]),
        .I1(\register_array_reg[10]_5 [10]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [10]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [10]),
        .O(\b_reg_reg[10]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[10]_i_7 
       (.I0(\register_array_reg[15]_0 [10]),
        .I1(\register_array_reg[14]_1 [10]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [10]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [10]),
        .O(\b_reg_reg[10]_i_7_n_0 ));
  MUXF8 \b_reg_reg[11]_i_1 
       (.I0(\b_reg_reg[11]_i_2_n_0 ),
        .I1(\b_reg_reg[11]_i_3_n_0 ),
        .O(output_big[11]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[11]_i_2 
       (.I0(\b_reg_reg[11]_i_4_n_0 ),
        .I1(\b_reg_reg[11]_i_5_n_0 ),
        .O(\b_reg_reg[11]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[11]_i_3 
       (.I0(\b_reg_reg[11]_i_6_n_0 ),
        .I1(\b_reg_reg[11]_i_7_n_0 ),
        .O(\b_reg_reg[11]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[11]_i_4 
       (.I0(\register_array_reg[3]_12 [11]),
        .I1(\register_array_reg[2]_13 [11]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [11]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [11]),
        .O(\b_reg_reg[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[11]_i_5 
       (.I0(\register_array_reg[7]_8 [11]),
        .I1(\register_array_reg[6]_9 [11]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [11]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [11]),
        .O(\b_reg_reg[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[11]_i_6 
       (.I0(\register_array_reg[11]_4 [11]),
        .I1(\register_array_reg[10]_5 [11]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [11]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [11]),
        .O(\b_reg_reg[11]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[11]_i_7 
       (.I0(\register_array_reg[15]_0 [11]),
        .I1(\register_array_reg[14]_1 [11]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [11]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [11]),
        .O(\b_reg_reg[11]_i_7_n_0 ));
  MUXF8 \b_reg_reg[12]_i_1 
       (.I0(\b_reg_reg[12]_i_2_n_0 ),
        .I1(\b_reg_reg[12]_i_3_n_0 ),
        .O(output_big[12]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[12]_i_2 
       (.I0(\b_reg_reg[12]_i_4_n_0 ),
        .I1(\b_reg_reg[12]_i_5_n_0 ),
        .O(\b_reg_reg[12]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[12]_i_3 
       (.I0(\b_reg_reg[12]_i_6_n_0 ),
        .I1(\b_reg_reg[12]_i_7_n_0 ),
        .O(\b_reg_reg[12]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[12]_i_4 
       (.I0(\register_array_reg[3]_12 [12]),
        .I1(\register_array_reg[2]_13 [12]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [12]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [12]),
        .O(\b_reg_reg[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[12]_i_5 
       (.I0(\register_array_reg[7]_8 [12]),
        .I1(\register_array_reg[6]_9 [12]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [12]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [12]),
        .O(\b_reg_reg[12]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[12]_i_6 
       (.I0(\register_array_reg[11]_4 [12]),
        .I1(\register_array_reg[10]_5 [12]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [12]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [12]),
        .O(\b_reg_reg[12]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[12]_i_7 
       (.I0(\register_array_reg[15]_0 [12]),
        .I1(\register_array_reg[14]_1 [12]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [12]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [12]),
        .O(\b_reg_reg[12]_i_7_n_0 ));
  MUXF8 \b_reg_reg[13]_i_1 
       (.I0(\b_reg_reg[13]_i_2_n_0 ),
        .I1(\b_reg_reg[13]_i_3_n_0 ),
        .O(output_big[13]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[13]_i_2 
       (.I0(\b_reg_reg[13]_i_4_n_0 ),
        .I1(\b_reg_reg[13]_i_5_n_0 ),
        .O(\b_reg_reg[13]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[13]_i_3 
       (.I0(\b_reg_reg[13]_i_6_n_0 ),
        .I1(\b_reg_reg[13]_i_7_n_0 ),
        .O(\b_reg_reg[13]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[13]_i_4 
       (.I0(\register_array_reg[3]_12 [13]),
        .I1(\register_array_reg[2]_13 [13]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [13]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [13]),
        .O(\b_reg_reg[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[13]_i_5 
       (.I0(\register_array_reg[7]_8 [13]),
        .I1(\register_array_reg[6]_9 [13]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [13]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [13]),
        .O(\b_reg_reg[13]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[13]_i_6 
       (.I0(\register_array_reg[11]_4 [13]),
        .I1(\register_array_reg[10]_5 [13]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [13]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [13]),
        .O(\b_reg_reg[13]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[13]_i_7 
       (.I0(\register_array_reg[15]_0 [13]),
        .I1(\register_array_reg[14]_1 [13]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [13]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [13]),
        .O(\b_reg_reg[13]_i_7_n_0 ));
  MUXF8 \b_reg_reg[14]_i_1 
       (.I0(\b_reg_reg[14]_i_2_n_0 ),
        .I1(\b_reg_reg[14]_i_3_n_0 ),
        .O(output_big[14]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[14]_i_2 
       (.I0(\b_reg_reg[14]_i_4_n_0 ),
        .I1(\b_reg_reg[14]_i_5_n_0 ),
        .O(\b_reg_reg[14]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[14]_i_3 
       (.I0(\b_reg_reg[14]_i_6_n_0 ),
        .I1(\b_reg_reg[14]_i_7_n_0 ),
        .O(\b_reg_reg[14]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[14]_i_4 
       (.I0(\register_array_reg[3]_12 [14]),
        .I1(\register_array_reg[2]_13 [14]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [14]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [14]),
        .O(\b_reg_reg[14]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[14]_i_5 
       (.I0(\register_array_reg[7]_8 [14]),
        .I1(\register_array_reg[6]_9 [14]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [14]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [14]),
        .O(\b_reg_reg[14]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[14]_i_6 
       (.I0(\register_array_reg[11]_4 [14]),
        .I1(\register_array_reg[10]_5 [14]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [14]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [14]),
        .O(\b_reg_reg[14]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[14]_i_7 
       (.I0(\register_array_reg[15]_0 [14]),
        .I1(\register_array_reg[14]_1 [14]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [14]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [14]),
        .O(\b_reg_reg[14]_i_7_n_0 ));
  MUXF8 \b_reg_reg[15]_i_1 
       (.I0(\b_reg_reg[15]_i_2_n_0 ),
        .I1(\b_reg_reg[15]_i_3_n_0 ),
        .O(output_big[15]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[15]_i_2 
       (.I0(\b_reg_reg[15]_i_4_n_0 ),
        .I1(\b_reg_reg[15]_i_5_n_0 ),
        .O(\b_reg_reg[15]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[15]_i_3 
       (.I0(\b_reg_reg[15]_i_6_n_0 ),
        .I1(\b_reg_reg[15]_i_7_n_0 ),
        .O(\b_reg_reg[15]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[15]_i_4 
       (.I0(\register_array_reg[3]_12 [15]),
        .I1(\register_array_reg[2]_13 [15]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [15]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [15]),
        .O(\b_reg_reg[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[15]_i_5 
       (.I0(\register_array_reg[7]_8 [15]),
        .I1(\register_array_reg[6]_9 [15]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [15]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [15]),
        .O(\b_reg_reg[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[15]_i_6 
       (.I0(\register_array_reg[11]_4 [15]),
        .I1(\register_array_reg[10]_5 [15]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [15]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [15]),
        .O(\b_reg_reg[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[15]_i_7 
       (.I0(\register_array_reg[15]_0 [15]),
        .I1(\register_array_reg[14]_1 [15]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [15]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [15]),
        .O(\b_reg_reg[15]_i_7_n_0 ));
  MUXF8 \b_reg_reg[16]_i_1 
       (.I0(\b_reg_reg[16]_i_2_n_0 ),
        .I1(\b_reg_reg[16]_i_3_n_0 ),
        .O(output_big[16]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[16]_i_2 
       (.I0(\b_reg_reg[16]_i_4_n_0 ),
        .I1(\b_reg_reg[16]_i_5_n_0 ),
        .O(\b_reg_reg[16]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[16]_i_3 
       (.I0(\b_reg_reg[16]_i_6_n_0 ),
        .I1(\b_reg_reg[16]_i_7_n_0 ),
        .O(\b_reg_reg[16]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[16]_i_4 
       (.I0(\register_array_reg[3]_12 [16]),
        .I1(\register_array_reg[2]_13 [16]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [16]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [16]),
        .O(\b_reg_reg[16]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[16]_i_5 
       (.I0(\register_array_reg[7]_8 [16]),
        .I1(\register_array_reg[6]_9 [16]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [16]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [16]),
        .O(\b_reg_reg[16]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[16]_i_6 
       (.I0(\register_array_reg[11]_4 [16]),
        .I1(\register_array_reg[10]_5 [16]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [16]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [16]),
        .O(\b_reg_reg[16]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[16]_i_7 
       (.I0(\register_array_reg[15]_0 [16]),
        .I1(\register_array_reg[14]_1 [16]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [16]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [16]),
        .O(\b_reg_reg[16]_i_7_n_0 ));
  MUXF8 \b_reg_reg[17]_i_1 
       (.I0(\b_reg_reg[17]_i_2_n_0 ),
        .I1(\b_reg_reg[17]_i_3_n_0 ),
        .O(output_big[17]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[17]_i_2 
       (.I0(\b_reg_reg[17]_i_4_n_0 ),
        .I1(\b_reg_reg[17]_i_5_n_0 ),
        .O(\b_reg_reg[17]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[17]_i_3 
       (.I0(\b_reg_reg[17]_i_6_n_0 ),
        .I1(\b_reg_reg[17]_i_7_n_0 ),
        .O(\b_reg_reg[17]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[17]_i_4 
       (.I0(\register_array_reg[3]_12 [17]),
        .I1(\register_array_reg[2]_13 [17]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [17]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [17]),
        .O(\b_reg_reg[17]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[17]_i_5 
       (.I0(\register_array_reg[7]_8 [17]),
        .I1(\register_array_reg[6]_9 [17]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [17]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [17]),
        .O(\b_reg_reg[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[17]_i_6 
       (.I0(\register_array_reg[11]_4 [17]),
        .I1(\register_array_reg[10]_5 [17]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [17]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [17]),
        .O(\b_reg_reg[17]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[17]_i_7 
       (.I0(\register_array_reg[15]_0 [17]),
        .I1(\register_array_reg[14]_1 [17]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [17]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [17]),
        .O(\b_reg_reg[17]_i_7_n_0 ));
  MUXF8 \b_reg_reg[18]_i_1 
       (.I0(\b_reg_reg[18]_i_2_n_0 ),
        .I1(\b_reg_reg[18]_i_3_n_0 ),
        .O(output_big[18]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[18]_i_2 
       (.I0(\b_reg_reg[18]_i_4_n_0 ),
        .I1(\b_reg_reg[18]_i_5_n_0 ),
        .O(\b_reg_reg[18]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[18]_i_3 
       (.I0(\b_reg_reg[18]_i_6_n_0 ),
        .I1(\b_reg_reg[18]_i_7_n_0 ),
        .O(\b_reg_reg[18]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[18]_i_4 
       (.I0(\register_array_reg[3]_12 [18]),
        .I1(\register_array_reg[2]_13 [18]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [18]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [18]),
        .O(\b_reg_reg[18]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[18]_i_5 
       (.I0(\register_array_reg[7]_8 [18]),
        .I1(\register_array_reg[6]_9 [18]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [18]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [18]),
        .O(\b_reg_reg[18]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[18]_i_6 
       (.I0(\register_array_reg[11]_4 [18]),
        .I1(\register_array_reg[10]_5 [18]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [18]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [18]),
        .O(\b_reg_reg[18]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[18]_i_7 
       (.I0(\register_array_reg[15]_0 [18]),
        .I1(\register_array_reg[14]_1 [18]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [18]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [18]),
        .O(\b_reg_reg[18]_i_7_n_0 ));
  MUXF8 \b_reg_reg[19]_i_1 
       (.I0(\b_reg_reg[19]_i_2_n_0 ),
        .I1(\b_reg_reg[19]_i_3_n_0 ),
        .O(output_big[19]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[19]_i_2 
       (.I0(\b_reg_reg[19]_i_4_n_0 ),
        .I1(\b_reg_reg[19]_i_5_n_0 ),
        .O(\b_reg_reg[19]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[19]_i_3 
       (.I0(\b_reg_reg[19]_i_6_n_0 ),
        .I1(\b_reg_reg[19]_i_7_n_0 ),
        .O(\b_reg_reg[19]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[19]_i_4 
       (.I0(\register_array_reg[3]_12 [19]),
        .I1(\register_array_reg[2]_13 [19]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [19]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [19]),
        .O(\b_reg_reg[19]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[19]_i_5 
       (.I0(\register_array_reg[7]_8 [19]),
        .I1(\register_array_reg[6]_9 [19]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [19]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [19]),
        .O(\b_reg_reg[19]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[19]_i_6 
       (.I0(\register_array_reg[11]_4 [19]),
        .I1(\register_array_reg[10]_5 [19]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [19]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [19]),
        .O(\b_reg_reg[19]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[19]_i_7 
       (.I0(\register_array_reg[15]_0 [19]),
        .I1(\register_array_reg[14]_1 [19]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [19]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [19]),
        .O(\b_reg_reg[19]_i_7_n_0 ));
  MUXF8 \b_reg_reg[1]_i_1 
       (.I0(\b_reg_reg[1]_i_2_n_0 ),
        .I1(\b_reg_reg[1]_i_3_n_0 ),
        .O(output_big[1]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[1]_i_2 
       (.I0(\b_reg_reg[1]_i_4_n_0 ),
        .I1(\b_reg_reg[1]_i_5_n_0 ),
        .O(\b_reg_reg[1]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[1]_i_3 
       (.I0(\b_reg_reg[1]_i_6_n_0 ),
        .I1(\b_reg_reg[1]_i_7_n_0 ),
        .O(\b_reg_reg[1]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[1]_i_4 
       (.I0(\register_array_reg[3]_12 [1]),
        .I1(\register_array_reg[2]_13 [1]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [1]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [1]),
        .O(\b_reg_reg[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[1]_i_5 
       (.I0(\register_array_reg[7]_8 [1]),
        .I1(\register_array_reg[6]_9 [1]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [1]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [1]),
        .O(\b_reg_reg[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[1]_i_6 
       (.I0(\register_array_reg[11]_4 [1]),
        .I1(\register_array_reg[10]_5 [1]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [1]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [1]),
        .O(\b_reg_reg[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[1]_i_7 
       (.I0(\register_array_reg[15]_0 [1]),
        .I1(\register_array_reg[14]_1 [1]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [1]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [1]),
        .O(\b_reg_reg[1]_i_7_n_0 ));
  MUXF8 \b_reg_reg[20]_i_1 
       (.I0(\b_reg_reg[20]_i_2_n_0 ),
        .I1(\b_reg_reg[20]_i_3_n_0 ),
        .O(output_big[20]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[20]_i_2 
       (.I0(\b_reg_reg[20]_i_4_n_0 ),
        .I1(\b_reg_reg[20]_i_5_n_0 ),
        .O(\b_reg_reg[20]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[20]_i_3 
       (.I0(\b_reg_reg[20]_i_6_n_0 ),
        .I1(\b_reg_reg[20]_i_7_n_0 ),
        .O(\b_reg_reg[20]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[20]_i_4 
       (.I0(\register_array_reg[3]_12 [20]),
        .I1(\register_array_reg[2]_13 [20]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [20]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [20]),
        .O(\b_reg_reg[20]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[20]_i_5 
       (.I0(\register_array_reg[7]_8 [20]),
        .I1(\register_array_reg[6]_9 [20]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [20]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [20]),
        .O(\b_reg_reg[20]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[20]_i_6 
       (.I0(\register_array_reg[11]_4 [20]),
        .I1(\register_array_reg[10]_5 [20]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [20]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [20]),
        .O(\b_reg_reg[20]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[20]_i_7 
       (.I0(\register_array_reg[15]_0 [20]),
        .I1(\register_array_reg[14]_1 [20]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [20]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [20]),
        .O(\b_reg_reg[20]_i_7_n_0 ));
  MUXF8 \b_reg_reg[21]_i_1 
       (.I0(\b_reg_reg[21]_i_2_n_0 ),
        .I1(\b_reg_reg[21]_i_3_n_0 ),
        .O(output_big[21]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[21]_i_2 
       (.I0(\b_reg_reg[21]_i_4_n_0 ),
        .I1(\b_reg_reg[21]_i_5_n_0 ),
        .O(\b_reg_reg[21]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[21]_i_3 
       (.I0(\b_reg_reg[21]_i_6_n_0 ),
        .I1(\b_reg_reg[21]_i_7_n_0 ),
        .O(\b_reg_reg[21]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[21]_i_4 
       (.I0(\register_array_reg[3]_12 [21]),
        .I1(\register_array_reg[2]_13 [21]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [21]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [21]),
        .O(\b_reg_reg[21]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[21]_i_5 
       (.I0(\register_array_reg[7]_8 [21]),
        .I1(\register_array_reg[6]_9 [21]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [21]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [21]),
        .O(\b_reg_reg[21]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[21]_i_6 
       (.I0(\register_array_reg[11]_4 [21]),
        .I1(\register_array_reg[10]_5 [21]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [21]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [21]),
        .O(\b_reg_reg[21]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[21]_i_7 
       (.I0(\register_array_reg[15]_0 [21]),
        .I1(\register_array_reg[14]_1 [21]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [21]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [21]),
        .O(\b_reg_reg[21]_i_7_n_0 ));
  MUXF8 \b_reg_reg[22]_i_1 
       (.I0(\b_reg_reg[22]_i_2_n_0 ),
        .I1(\b_reg_reg[22]_i_3_n_0 ),
        .O(output_big[22]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[22]_i_2 
       (.I0(\b_reg_reg[22]_i_4_n_0 ),
        .I1(\b_reg_reg[22]_i_5_n_0 ),
        .O(\b_reg_reg[22]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[22]_i_3 
       (.I0(\b_reg_reg[22]_i_6_n_0 ),
        .I1(\b_reg_reg[22]_i_7_n_0 ),
        .O(\b_reg_reg[22]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[22]_i_4 
       (.I0(\register_array_reg[3]_12 [22]),
        .I1(\register_array_reg[2]_13 [22]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [22]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [22]),
        .O(\b_reg_reg[22]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[22]_i_5 
       (.I0(\register_array_reg[7]_8 [22]),
        .I1(\register_array_reg[6]_9 [22]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [22]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [22]),
        .O(\b_reg_reg[22]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[22]_i_6 
       (.I0(\register_array_reg[11]_4 [22]),
        .I1(\register_array_reg[10]_5 [22]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [22]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [22]),
        .O(\b_reg_reg[22]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[22]_i_7 
       (.I0(\register_array_reg[15]_0 [22]),
        .I1(\register_array_reg[14]_1 [22]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [22]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [22]),
        .O(\b_reg_reg[22]_i_7_n_0 ));
  MUXF8 \b_reg_reg[23]_i_1 
       (.I0(\b_reg_reg[23]_i_2_n_0 ),
        .I1(\b_reg_reg[23]_i_3_n_0 ),
        .O(output_big[23]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[23]_i_2 
       (.I0(\b_reg_reg[23]_i_4_n_0 ),
        .I1(\b_reg_reg[23]_i_5_n_0 ),
        .O(\b_reg_reg[23]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[23]_i_3 
       (.I0(\b_reg_reg[23]_i_6_n_0 ),
        .I1(\b_reg_reg[23]_i_7_n_0 ),
        .O(\b_reg_reg[23]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[23]_i_4 
       (.I0(\register_array_reg[3]_12 [23]),
        .I1(\register_array_reg[2]_13 [23]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [23]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [23]),
        .O(\b_reg_reg[23]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[23]_i_5 
       (.I0(\register_array_reg[7]_8 [23]),
        .I1(\register_array_reg[6]_9 [23]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [23]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [23]),
        .O(\b_reg_reg[23]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[23]_i_6 
       (.I0(\register_array_reg[11]_4 [23]),
        .I1(\register_array_reg[10]_5 [23]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [23]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [23]),
        .O(\b_reg_reg[23]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[23]_i_7 
       (.I0(\register_array_reg[15]_0 [23]),
        .I1(\register_array_reg[14]_1 [23]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [23]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [23]),
        .O(\b_reg_reg[23]_i_7_n_0 ));
  MUXF8 \b_reg_reg[24]_i_1 
       (.I0(\b_reg_reg[24]_i_2_n_0 ),
        .I1(\b_reg_reg[24]_i_3_n_0 ),
        .O(output_big[24]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[24]_i_2 
       (.I0(\b_reg_reg[24]_i_4_n_0 ),
        .I1(\b_reg_reg[24]_i_5_n_0 ),
        .O(\b_reg_reg[24]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[24]_i_3 
       (.I0(\b_reg_reg[24]_i_6_n_0 ),
        .I1(\b_reg_reg[24]_i_7_n_0 ),
        .O(\b_reg_reg[24]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[24]_i_4 
       (.I0(\register_array_reg[3]_12 [24]),
        .I1(\register_array_reg[2]_13 [24]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [24]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [24]),
        .O(\b_reg_reg[24]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[24]_i_5 
       (.I0(\register_array_reg[7]_8 [24]),
        .I1(\register_array_reg[6]_9 [24]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [24]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [24]),
        .O(\b_reg_reg[24]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[24]_i_6 
       (.I0(\register_array_reg[11]_4 [24]),
        .I1(\register_array_reg[10]_5 [24]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [24]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [24]),
        .O(\b_reg_reg[24]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[24]_i_7 
       (.I0(\register_array_reg[15]_0 [24]),
        .I1(\register_array_reg[14]_1 [24]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [24]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [24]),
        .O(\b_reg_reg[24]_i_7_n_0 ));
  MUXF8 \b_reg_reg[25]_i_1 
       (.I0(\b_reg_reg[25]_i_2_n_0 ),
        .I1(\b_reg_reg[25]_i_3_n_0 ),
        .O(output_big[25]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[25]_i_2 
       (.I0(\b_reg_reg[25]_i_4_n_0 ),
        .I1(\b_reg_reg[25]_i_5_n_0 ),
        .O(\b_reg_reg[25]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[25]_i_3 
       (.I0(\b_reg_reg[25]_i_6_n_0 ),
        .I1(\b_reg_reg[25]_i_7_n_0 ),
        .O(\b_reg_reg[25]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[25]_i_4 
       (.I0(\register_array_reg[3]_12 [25]),
        .I1(\register_array_reg[2]_13 [25]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [25]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [25]),
        .O(\b_reg_reg[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[25]_i_5 
       (.I0(\register_array_reg[7]_8 [25]),
        .I1(\register_array_reg[6]_9 [25]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [25]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [25]),
        .O(\b_reg_reg[25]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[25]_i_6 
       (.I0(\register_array_reg[11]_4 [25]),
        .I1(\register_array_reg[10]_5 [25]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [25]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [25]),
        .O(\b_reg_reg[25]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[25]_i_7 
       (.I0(\register_array_reg[15]_0 [25]),
        .I1(\register_array_reg[14]_1 [25]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [25]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [25]),
        .O(\b_reg_reg[25]_i_7_n_0 ));
  MUXF8 \b_reg_reg[26]_i_1 
       (.I0(\b_reg_reg[26]_i_2_n_0 ),
        .I1(\b_reg_reg[26]_i_3_n_0 ),
        .O(output_big[26]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[26]_i_2 
       (.I0(\b_reg_reg[26]_i_4_n_0 ),
        .I1(\b_reg_reg[26]_i_5_n_0 ),
        .O(\b_reg_reg[26]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[26]_i_3 
       (.I0(\b_reg_reg[26]_i_6_n_0 ),
        .I1(\b_reg_reg[26]_i_7_n_0 ),
        .O(\b_reg_reg[26]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[26]_i_4 
       (.I0(\register_array_reg[3]_12 [26]),
        .I1(\register_array_reg[2]_13 [26]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [26]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [26]),
        .O(\b_reg_reg[26]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[26]_i_5 
       (.I0(\register_array_reg[7]_8 [26]),
        .I1(\register_array_reg[6]_9 [26]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [26]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [26]),
        .O(\b_reg_reg[26]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[26]_i_6 
       (.I0(\register_array_reg[11]_4 [26]),
        .I1(\register_array_reg[10]_5 [26]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [26]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [26]),
        .O(\b_reg_reg[26]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[26]_i_7 
       (.I0(\register_array_reg[15]_0 [26]),
        .I1(\register_array_reg[14]_1 [26]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [26]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [26]),
        .O(\b_reg_reg[26]_i_7_n_0 ));
  MUXF8 \b_reg_reg[27]_i_1 
       (.I0(\b_reg_reg[27]_i_2_n_0 ),
        .I1(\b_reg_reg[27]_i_3_n_0 ),
        .O(output_big[27]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[27]_i_2 
       (.I0(\b_reg_reg[27]_i_4_n_0 ),
        .I1(\b_reg_reg[27]_i_5_n_0 ),
        .O(\b_reg_reg[27]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[27]_i_3 
       (.I0(\b_reg_reg[27]_i_6_n_0 ),
        .I1(\b_reg_reg[27]_i_7_n_0 ),
        .O(\b_reg_reg[27]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[27]_i_4 
       (.I0(\register_array_reg[3]_12 [27]),
        .I1(\register_array_reg[2]_13 [27]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [27]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [27]),
        .O(\b_reg_reg[27]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[27]_i_5 
       (.I0(\register_array_reg[7]_8 [27]),
        .I1(\register_array_reg[6]_9 [27]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [27]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [27]),
        .O(\b_reg_reg[27]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[27]_i_6 
       (.I0(\register_array_reg[11]_4 [27]),
        .I1(\register_array_reg[10]_5 [27]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [27]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [27]),
        .O(\b_reg_reg[27]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[27]_i_7 
       (.I0(\register_array_reg[15]_0 [27]),
        .I1(\register_array_reg[14]_1 [27]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [27]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [27]),
        .O(\b_reg_reg[27]_i_7_n_0 ));
  MUXF8 \b_reg_reg[28]_i_1 
       (.I0(\b_reg_reg[28]_i_2_n_0 ),
        .I1(\b_reg_reg[28]_i_3_n_0 ),
        .O(output_big[28]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[28]_i_2 
       (.I0(\b_reg_reg[28]_i_4_n_0 ),
        .I1(\b_reg_reg[28]_i_5_n_0 ),
        .O(\b_reg_reg[28]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[28]_i_3 
       (.I0(\b_reg_reg[28]_i_6_n_0 ),
        .I1(\b_reg_reg[28]_i_7_n_0 ),
        .O(\b_reg_reg[28]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[28]_i_4 
       (.I0(\register_array_reg[3]_12 [28]),
        .I1(\register_array_reg[2]_13 [28]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [28]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [28]),
        .O(\b_reg_reg[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[28]_i_5 
       (.I0(\register_array_reg[7]_8 [28]),
        .I1(\register_array_reg[6]_9 [28]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [28]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [28]),
        .O(\b_reg_reg[28]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[28]_i_6 
       (.I0(\register_array_reg[11]_4 [28]),
        .I1(\register_array_reg[10]_5 [28]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [28]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [28]),
        .O(\b_reg_reg[28]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[28]_i_7 
       (.I0(\register_array_reg[15]_0 [28]),
        .I1(\register_array_reg[14]_1 [28]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [28]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [28]),
        .O(\b_reg_reg[28]_i_7_n_0 ));
  MUXF8 \b_reg_reg[29]_i_1 
       (.I0(\b_reg_reg[29]_i_2_n_0 ),
        .I1(\b_reg_reg[29]_i_3_n_0 ),
        .O(output_big[29]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[29]_i_2 
       (.I0(\b_reg_reg[29]_i_4_n_0 ),
        .I1(\b_reg_reg[29]_i_5_n_0 ),
        .O(\b_reg_reg[29]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[29]_i_3 
       (.I0(\b_reg_reg[29]_i_6_n_0 ),
        .I1(\b_reg_reg[29]_i_7_n_0 ),
        .O(\b_reg_reg[29]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[29]_i_4 
       (.I0(\register_array_reg[3]_12 [29]),
        .I1(\register_array_reg[2]_13 [29]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [29]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [29]),
        .O(\b_reg_reg[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[29]_i_5 
       (.I0(\register_array_reg[7]_8 [29]),
        .I1(\register_array_reg[6]_9 [29]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [29]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [29]),
        .O(\b_reg_reg[29]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[29]_i_6 
       (.I0(\register_array_reg[11]_4 [29]),
        .I1(\register_array_reg[10]_5 [29]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [29]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [29]),
        .O(\b_reg_reg[29]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[29]_i_7 
       (.I0(\register_array_reg[15]_0 [29]),
        .I1(\register_array_reg[14]_1 [29]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [29]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [29]),
        .O(\b_reg_reg[29]_i_7_n_0 ));
  MUXF8 \b_reg_reg[2]_i_1 
       (.I0(\b_reg_reg[2]_i_2_n_0 ),
        .I1(\b_reg_reg[2]_i_3_n_0 ),
        .O(output_big[2]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[2]_i_2 
       (.I0(\b_reg_reg[2]_i_4_n_0 ),
        .I1(\b_reg_reg[2]_i_5_n_0 ),
        .O(\b_reg_reg[2]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[2]_i_3 
       (.I0(\b_reg_reg[2]_i_6_n_0 ),
        .I1(\b_reg_reg[2]_i_7_n_0 ),
        .O(\b_reg_reg[2]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[2]_i_4 
       (.I0(\register_array_reg[3]_12 [2]),
        .I1(\register_array_reg[2]_13 [2]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [2]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [2]),
        .O(\b_reg_reg[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[2]_i_5 
       (.I0(\register_array_reg[7]_8 [2]),
        .I1(\register_array_reg[6]_9 [2]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [2]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [2]),
        .O(\b_reg_reg[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[2]_i_6 
       (.I0(\register_array_reg[11]_4 [2]),
        .I1(\register_array_reg[10]_5 [2]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [2]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [2]),
        .O(\b_reg_reg[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[2]_i_7 
       (.I0(\register_array_reg[15]_0 [2]),
        .I1(\register_array_reg[14]_1 [2]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [2]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [2]),
        .O(\b_reg_reg[2]_i_7_n_0 ));
  MUXF8 \b_reg_reg[30]_i_1 
       (.I0(\b_reg_reg[30]_i_2_n_0 ),
        .I1(\b_reg_reg[30]_i_3_n_0 ),
        .O(output_big[30]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[30]_i_2 
       (.I0(\b_reg_reg[30]_i_4_n_0 ),
        .I1(\b_reg_reg[30]_i_5_n_0 ),
        .O(\b_reg_reg[30]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[30]_i_3 
       (.I0(\b_reg_reg[30]_i_6_n_0 ),
        .I1(\b_reg_reg[30]_i_7_n_0 ),
        .O(\b_reg_reg[30]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[30]_i_4 
       (.I0(\register_array_reg[3]_12 [30]),
        .I1(\register_array_reg[2]_13 [30]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [30]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [30]),
        .O(\b_reg_reg[30]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[30]_i_5 
       (.I0(\register_array_reg[7]_8 [30]),
        .I1(\register_array_reg[6]_9 [30]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [30]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [30]),
        .O(\b_reg_reg[30]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[30]_i_6 
       (.I0(\register_array_reg[11]_4 [30]),
        .I1(\register_array_reg[10]_5 [30]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [30]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [30]),
        .O(\b_reg_reg[30]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[30]_i_7 
       (.I0(\register_array_reg[15]_0 [30]),
        .I1(\register_array_reg[14]_1 [30]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [30]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [30]),
        .O(\b_reg_reg[30]_i_7_n_0 ));
  MUXF8 \b_reg_reg[31]_i_1 
       (.I0(\b_reg_reg[31]_i_4_n_0 ),
        .I1(\b_reg_reg[31]_i_5_n_0 ),
        .O(output_big[31]),
        .S(rad2[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[31]_i_10 
       (.I0(\register_array_reg[11]_4 [31]),
        .I1(\register_array_reg[10]_5 [31]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [31]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [31]),
        .O(\b_reg_reg[31]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[31]_i_11 
       (.I0(\register_array_reg[15]_0 [31]),
        .I1(\register_array_reg[14]_1 [31]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [31]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [31]),
        .O(\b_reg_reg[31]_i_11_n_0 ));
  MUXF7 \b_reg_reg[31]_i_4 
       (.I0(\b_reg_reg[31]_i_8_n_0 ),
        .I1(\b_reg_reg[31]_i_9_n_0 ),
        .O(\b_reg_reg[31]_i_4_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[31]_i_5 
       (.I0(\b_reg_reg[31]_i_10_n_0 ),
        .I1(\b_reg_reg[31]_i_11_n_0 ),
        .O(\b_reg_reg[31]_i_5_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[31]_i_8 
       (.I0(\register_array_reg[3]_12 [31]),
        .I1(\register_array_reg[2]_13 [31]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [31]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [31]),
        .O(\b_reg_reg[31]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[31]_i_9 
       (.I0(\register_array_reg[7]_8 [31]),
        .I1(\register_array_reg[6]_9 [31]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [31]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [31]),
        .O(\b_reg_reg[31]_i_9_n_0 ));
  MUXF8 \b_reg_reg[3]_i_1 
       (.I0(\b_reg_reg[3]_i_2_n_0 ),
        .I1(\b_reg_reg[3]_i_3_n_0 ),
        .O(output_big[3]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[3]_i_2 
       (.I0(\b_reg_reg[3]_i_4_n_0 ),
        .I1(\b_reg_reg[3]_i_5_n_0 ),
        .O(\b_reg_reg[3]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[3]_i_3 
       (.I0(\b_reg_reg[3]_i_6_n_0 ),
        .I1(\b_reg_reg[3]_i_7_n_0 ),
        .O(\b_reg_reg[3]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[3]_i_4 
       (.I0(\register_array_reg[3]_12 [3]),
        .I1(\register_array_reg[2]_13 [3]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [3]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [3]),
        .O(\b_reg_reg[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[3]_i_5 
       (.I0(\register_array_reg[7]_8 [3]),
        .I1(\register_array_reg[6]_9 [3]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [3]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [3]),
        .O(\b_reg_reg[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[3]_i_6 
       (.I0(\register_array_reg[11]_4 [3]),
        .I1(\register_array_reg[10]_5 [3]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [3]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [3]),
        .O(\b_reg_reg[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[3]_i_7 
       (.I0(\register_array_reg[15]_0 [3]),
        .I1(\register_array_reg[14]_1 [3]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [3]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [3]),
        .O(\b_reg_reg[3]_i_7_n_0 ));
  MUXF8 \b_reg_reg[4]_i_1 
       (.I0(\b_reg_reg[4]_i_2_n_0 ),
        .I1(\b_reg_reg[4]_i_3_n_0 ),
        .O(output_big[4]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[4]_i_2 
       (.I0(\b_reg_reg[4]_i_4_n_0 ),
        .I1(\b_reg_reg[4]_i_5_n_0 ),
        .O(\b_reg_reg[4]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[4]_i_3 
       (.I0(\b_reg_reg[4]_i_6_n_0 ),
        .I1(\b_reg_reg[4]_i_7_n_0 ),
        .O(\b_reg_reg[4]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[4]_i_4 
       (.I0(\register_array_reg[3]_12 [4]),
        .I1(\register_array_reg[2]_13 [4]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [4]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [4]),
        .O(\b_reg_reg[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[4]_i_5 
       (.I0(\register_array_reg[7]_8 [4]),
        .I1(\register_array_reg[6]_9 [4]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [4]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [4]),
        .O(\b_reg_reg[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[4]_i_6 
       (.I0(\register_array_reg[11]_4 [4]),
        .I1(\register_array_reg[10]_5 [4]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [4]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [4]),
        .O(\b_reg_reg[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[4]_i_7 
       (.I0(\register_array_reg[15]_0 [4]),
        .I1(\register_array_reg[14]_1 [4]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [4]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [4]),
        .O(\b_reg_reg[4]_i_7_n_0 ));
  MUXF8 \b_reg_reg[5]_i_1 
       (.I0(\b_reg_reg[5]_i_2_n_0 ),
        .I1(\b_reg_reg[5]_i_3_n_0 ),
        .O(output_big[5]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[5]_i_2 
       (.I0(\b_reg_reg[5]_i_4_n_0 ),
        .I1(\b_reg_reg[5]_i_5_n_0 ),
        .O(\b_reg_reg[5]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[5]_i_3 
       (.I0(\b_reg_reg[5]_i_6_n_0 ),
        .I1(\b_reg_reg[5]_i_7_n_0 ),
        .O(\b_reg_reg[5]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[5]_i_4 
       (.I0(\register_array_reg[3]_12 [5]),
        .I1(\register_array_reg[2]_13 [5]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [5]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [5]),
        .O(\b_reg_reg[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[5]_i_5 
       (.I0(\register_array_reg[7]_8 [5]),
        .I1(\register_array_reg[6]_9 [5]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [5]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [5]),
        .O(\b_reg_reg[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[5]_i_6 
       (.I0(\register_array_reg[11]_4 [5]),
        .I1(\register_array_reg[10]_5 [5]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [5]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [5]),
        .O(\b_reg_reg[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[5]_i_7 
       (.I0(\register_array_reg[15]_0 [5]),
        .I1(\register_array_reg[14]_1 [5]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [5]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [5]),
        .O(\b_reg_reg[5]_i_7_n_0 ));
  MUXF8 \b_reg_reg[6]_i_1 
       (.I0(\b_reg_reg[6]_i_2_n_0 ),
        .I1(\b_reg_reg[6]_i_3_n_0 ),
        .O(output_big[6]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[6]_i_2 
       (.I0(\b_reg_reg[6]_i_4_n_0 ),
        .I1(\b_reg_reg[6]_i_5_n_0 ),
        .O(\b_reg_reg[6]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[6]_i_3 
       (.I0(\b_reg_reg[6]_i_6_n_0 ),
        .I1(\b_reg_reg[6]_i_7_n_0 ),
        .O(\b_reg_reg[6]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[6]_i_4 
       (.I0(\register_array_reg[3]_12 [6]),
        .I1(\register_array_reg[2]_13 [6]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [6]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [6]),
        .O(\b_reg_reg[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[6]_i_5 
       (.I0(\register_array_reg[7]_8 [6]),
        .I1(\register_array_reg[6]_9 [6]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [6]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [6]),
        .O(\b_reg_reg[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[6]_i_6 
       (.I0(\register_array_reg[11]_4 [6]),
        .I1(\register_array_reg[10]_5 [6]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [6]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [6]),
        .O(\b_reg_reg[6]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[6]_i_7 
       (.I0(\register_array_reg[15]_0 [6]),
        .I1(\register_array_reg[14]_1 [6]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [6]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [6]),
        .O(\b_reg_reg[6]_i_7_n_0 ));
  MUXF8 \b_reg_reg[7]_i_1 
       (.I0(\b_reg_reg[7]_i_2_n_0 ),
        .I1(\b_reg_reg[7]_i_3_n_0 ),
        .O(output_big[7]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[7]_i_2 
       (.I0(\b_reg_reg[7]_i_4_n_0 ),
        .I1(\b_reg_reg[7]_i_5_n_0 ),
        .O(\b_reg_reg[7]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[7]_i_3 
       (.I0(\b_reg_reg[7]_i_6_n_0 ),
        .I1(\b_reg_reg[7]_i_7_n_0 ),
        .O(\b_reg_reg[7]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[7]_i_4 
       (.I0(\register_array_reg[3]_12 [7]),
        .I1(\register_array_reg[2]_13 [7]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [7]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [7]),
        .O(\b_reg_reg[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[7]_i_5 
       (.I0(\register_array_reg[7]_8 [7]),
        .I1(\register_array_reg[6]_9 [7]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [7]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [7]),
        .O(\b_reg_reg[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[7]_i_6 
       (.I0(\register_array_reg[11]_4 [7]),
        .I1(\register_array_reg[10]_5 [7]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [7]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [7]),
        .O(\b_reg_reg[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[7]_i_7 
       (.I0(\register_array_reg[15]_0 [7]),
        .I1(\register_array_reg[14]_1 [7]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [7]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [7]),
        .O(\b_reg_reg[7]_i_7_n_0 ));
  MUXF8 \b_reg_reg[8]_i_1 
       (.I0(\b_reg_reg[8]_i_2_n_0 ),
        .I1(\b_reg_reg[8]_i_3_n_0 ),
        .O(output_big[8]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[8]_i_2 
       (.I0(\b_reg_reg[8]_i_4_n_0 ),
        .I1(\b_reg_reg[8]_i_5_n_0 ),
        .O(\b_reg_reg[8]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[8]_i_3 
       (.I0(\b_reg_reg[8]_i_6_n_0 ),
        .I1(\b_reg_reg[8]_i_7_n_0 ),
        .O(\b_reg_reg[8]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[8]_i_4 
       (.I0(\register_array_reg[3]_12 [8]),
        .I1(\register_array_reg[2]_13 [8]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [8]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [8]),
        .O(\b_reg_reg[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[8]_i_5 
       (.I0(\register_array_reg[7]_8 [8]),
        .I1(\register_array_reg[6]_9 [8]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [8]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [8]),
        .O(\b_reg_reg[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[8]_i_6 
       (.I0(\register_array_reg[11]_4 [8]),
        .I1(\register_array_reg[10]_5 [8]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [8]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [8]),
        .O(\b_reg_reg[8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[8]_i_7 
       (.I0(\register_array_reg[15]_0 [8]),
        .I1(\register_array_reg[14]_1 [8]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [8]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [8]),
        .O(\b_reg_reg[8]_i_7_n_0 ));
  MUXF8 \b_reg_reg[9]_i_1 
       (.I0(\b_reg_reg[9]_i_2_n_0 ),
        .I1(\b_reg_reg[9]_i_3_n_0 ),
        .O(output_big[9]),
        .S(rad2[3]));
  MUXF7 \b_reg_reg[9]_i_2 
       (.I0(\b_reg_reg[9]_i_4_n_0 ),
        .I1(\b_reg_reg[9]_i_5_n_0 ),
        .O(\b_reg_reg[9]_i_2_n_0 ),
        .S(rad2[2]));
  MUXF7 \b_reg_reg[9]_i_3 
       (.I0(\b_reg_reg[9]_i_6_n_0 ),
        .I1(\b_reg_reg[9]_i_7_n_0 ),
        .O(\b_reg_reg[9]_i_3_n_0 ),
        .S(rad2[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[9]_i_4 
       (.I0(\register_array_reg[3]_12 [9]),
        .I1(\register_array_reg[2]_13 [9]),
        .I2(rad2[1]),
        .I3(\register_array_reg[1]_14 [9]),
        .I4(rad2[0]),
        .I5(\register_array_reg[0]_15 [9]),
        .O(\b_reg_reg[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[9]_i_5 
       (.I0(\register_array_reg[7]_8 [9]),
        .I1(\register_array_reg[6]_9 [9]),
        .I2(rad2[1]),
        .I3(\register_array_reg[5]_10 [9]),
        .I4(rad2[0]),
        .I5(\register_array_reg[4]_11 [9]),
        .O(\b_reg_reg[9]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[9]_i_6 
       (.I0(\register_array_reg[11]_4 [9]),
        .I1(\register_array_reg[10]_5 [9]),
        .I2(rad2[1]),
        .I3(\register_array_reg[9]_6 [9]),
        .I4(rad2[0]),
        .I5(\register_array_reg[8]_7 [9]),
        .O(\b_reg_reg[9]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \b_reg_reg[9]_i_7 
       (.I0(\register_array_reg[15]_0 [9]),
        .I1(\register_array_reg[14]_1 [9]),
        .I2(rad2[1]),
        .I3(\register_array_reg[13]_2 [9]),
        .I4(rad2[0]),
        .I5(\register_array_reg[12]_3 [9]),
        .O(\b_reg_reg[9]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAAAACCCCF0F0FF00)) 
    \leds_OBUF[0]_inst_i_1 
       (.I0(regread[16]),
        .I1(memout[16]),
        .I2(regread[0]),
        .I3(memout[0]),
        .I4(memOrReg_IBUF),
        .I5(firstOrLast_IBUF),
        .O(leds_OBUF[0]));
  MUXF7 \leds_OBUF[0]_inst_i_10 
       (.I0(\leds_OBUF[0]_inst_i_18_n_0 ),
        .I1(\leds_OBUF[0]_inst_i_19_n_0 ),
        .O(\leds_OBUF[0]_inst_i_10_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[0]_inst_i_11 
       (.I0(\leds_OBUF[0]_inst_i_20_n_0 ),
        .I1(\leds_OBUF[0]_inst_i_21_n_0 ),
        .O(\leds_OBUF[0]_inst_i_11_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[0]_inst_i_14 
       (.I0(\register_array_reg[3]_12 [16]),
        .I1(\register_array_reg[2]_13 [16]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [16]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [16]),
        .O(\leds_OBUF[0]_inst_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[0]_inst_i_15 
       (.I0(\register_array_reg[7]_8 [16]),
        .I1(\register_array_reg[6]_9 [16]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [16]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [16]),
        .O(\leds_OBUF[0]_inst_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[0]_inst_i_16 
       (.I0(\register_array_reg[11]_4 [16]),
        .I1(\register_array_reg[10]_5 [16]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [16]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [16]),
        .O(\leds_OBUF[0]_inst_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[0]_inst_i_17 
       (.I0(\register_array_reg[15]_0 [16]),
        .I1(\register_array_reg[14]_1 [16]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [16]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [16]),
        .O(\leds_OBUF[0]_inst_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[0]_inst_i_18 
       (.I0(\register_array_reg[3]_12 [0]),
        .I1(\register_array_reg[2]_13 [0]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [0]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [0]),
        .O(\leds_OBUF[0]_inst_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[0]_inst_i_19 
       (.I0(\register_array_reg[7]_8 [0]),
        .I1(\register_array_reg[6]_9 [0]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [0]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [0]),
        .O(\leds_OBUF[0]_inst_i_19_n_0 ));
  MUXF8 \leds_OBUF[0]_inst_i_2 
       (.I0(\leds_OBUF[0]_inst_i_6_n_0 ),
        .I1(\leds_OBUF[0]_inst_i_7_n_0 ),
        .O(regread[16]),
        .S(read_switches_IBUF[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[0]_inst_i_20 
       (.I0(\register_array_reg[11]_4 [0]),
        .I1(\register_array_reg[10]_5 [0]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [0]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [0]),
        .O(\leds_OBUF[0]_inst_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[0]_inst_i_21 
       (.I0(\register_array_reg[15]_0 [0]),
        .I1(\register_array_reg[14]_1 [0]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [0]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [0]),
        .O(\leds_OBUF[0]_inst_i_21_n_0 ));
  MUXF8 \leds_OBUF[0]_inst_i_4 
       (.I0(\leds_OBUF[0]_inst_i_10_n_0 ),
        .I1(\leds_OBUF[0]_inst_i_11_n_0 ),
        .O(regread[0]),
        .S(read_switches_IBUF[3]));
  MUXF7 \leds_OBUF[0]_inst_i_6 
       (.I0(\leds_OBUF[0]_inst_i_14_n_0 ),
        .I1(\leds_OBUF[0]_inst_i_15_n_0 ),
        .O(\leds_OBUF[0]_inst_i_6_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[0]_inst_i_7 
       (.I0(\leds_OBUF[0]_inst_i_16_n_0 ),
        .I1(\leds_OBUF[0]_inst_i_17_n_0 ),
        .O(\leds_OBUF[0]_inst_i_7_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAAAACCCCF0F0FF00)) 
    \leds_OBUF[10]_inst_i_1 
       (.I0(regread[26]),
        .I1(memout[26]),
        .I2(regread[10]),
        .I3(memout[10]),
        .I4(memOrReg_IBUF),
        .I5(firstOrLast_IBUF),
        .O(leds_OBUF[10]));
  MUXF7 \leds_OBUF[10]_inst_i_10 
       (.I0(\leds_OBUF[10]_inst_i_18_n_0 ),
        .I1(\leds_OBUF[10]_inst_i_19_n_0 ),
        .O(\leds_OBUF[10]_inst_i_10_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[10]_inst_i_11 
       (.I0(\leds_OBUF[10]_inst_i_20_n_0 ),
        .I1(\leds_OBUF[10]_inst_i_21_n_0 ),
        .O(\leds_OBUF[10]_inst_i_11_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[10]_inst_i_14 
       (.I0(\register_array_reg[3]_12 [26]),
        .I1(\register_array_reg[2]_13 [26]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [26]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [26]),
        .O(\leds_OBUF[10]_inst_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[10]_inst_i_15 
       (.I0(\register_array_reg[7]_8 [26]),
        .I1(\register_array_reg[6]_9 [26]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [26]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [26]),
        .O(\leds_OBUF[10]_inst_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[10]_inst_i_16 
       (.I0(\register_array_reg[11]_4 [26]),
        .I1(\register_array_reg[10]_5 [26]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [26]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [26]),
        .O(\leds_OBUF[10]_inst_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[10]_inst_i_17 
       (.I0(\register_array_reg[15]_0 [26]),
        .I1(\register_array_reg[14]_1 [26]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [26]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [26]),
        .O(\leds_OBUF[10]_inst_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[10]_inst_i_18 
       (.I0(\register_array_reg[3]_12 [10]),
        .I1(\register_array_reg[2]_13 [10]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [10]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [10]),
        .O(\leds_OBUF[10]_inst_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[10]_inst_i_19 
       (.I0(\register_array_reg[7]_8 [10]),
        .I1(\register_array_reg[6]_9 [10]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [10]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [10]),
        .O(\leds_OBUF[10]_inst_i_19_n_0 ));
  MUXF8 \leds_OBUF[10]_inst_i_2 
       (.I0(\leds_OBUF[10]_inst_i_6_n_0 ),
        .I1(\leds_OBUF[10]_inst_i_7_n_0 ),
        .O(regread[26]),
        .S(read_switches_IBUF[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[10]_inst_i_20 
       (.I0(\register_array_reg[11]_4 [10]),
        .I1(\register_array_reg[10]_5 [10]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [10]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [10]),
        .O(\leds_OBUF[10]_inst_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[10]_inst_i_21 
       (.I0(\register_array_reg[15]_0 [10]),
        .I1(\register_array_reg[14]_1 [10]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [10]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [10]),
        .O(\leds_OBUF[10]_inst_i_21_n_0 ));
  MUXF8 \leds_OBUF[10]_inst_i_4 
       (.I0(\leds_OBUF[10]_inst_i_10_n_0 ),
        .I1(\leds_OBUF[10]_inst_i_11_n_0 ),
        .O(regread[10]),
        .S(read_switches_IBUF[3]));
  MUXF7 \leds_OBUF[10]_inst_i_6 
       (.I0(\leds_OBUF[10]_inst_i_14_n_0 ),
        .I1(\leds_OBUF[10]_inst_i_15_n_0 ),
        .O(\leds_OBUF[10]_inst_i_6_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[10]_inst_i_7 
       (.I0(\leds_OBUF[10]_inst_i_16_n_0 ),
        .I1(\leds_OBUF[10]_inst_i_17_n_0 ),
        .O(\leds_OBUF[10]_inst_i_7_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAAAACCCCF0F0FF00)) 
    \leds_OBUF[11]_inst_i_1 
       (.I0(regread[27]),
        .I1(memout[27]),
        .I2(regread[11]),
        .I3(memout[11]),
        .I4(memOrReg_IBUF),
        .I5(firstOrLast_IBUF),
        .O(leds_OBUF[11]));
  MUXF7 \leds_OBUF[11]_inst_i_10 
       (.I0(\leds_OBUF[11]_inst_i_18_n_0 ),
        .I1(\leds_OBUF[11]_inst_i_19_n_0 ),
        .O(\leds_OBUF[11]_inst_i_10_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[11]_inst_i_11 
       (.I0(\leds_OBUF[11]_inst_i_20_n_0 ),
        .I1(\leds_OBUF[11]_inst_i_21_n_0 ),
        .O(\leds_OBUF[11]_inst_i_11_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[11]_inst_i_14 
       (.I0(\register_array_reg[3]_12 [27]),
        .I1(\register_array_reg[2]_13 [27]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [27]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [27]),
        .O(\leds_OBUF[11]_inst_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[11]_inst_i_15 
       (.I0(\register_array_reg[7]_8 [27]),
        .I1(\register_array_reg[6]_9 [27]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [27]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [27]),
        .O(\leds_OBUF[11]_inst_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[11]_inst_i_16 
       (.I0(\register_array_reg[11]_4 [27]),
        .I1(\register_array_reg[10]_5 [27]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [27]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [27]),
        .O(\leds_OBUF[11]_inst_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[11]_inst_i_17 
       (.I0(\register_array_reg[15]_0 [27]),
        .I1(\register_array_reg[14]_1 [27]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [27]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [27]),
        .O(\leds_OBUF[11]_inst_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[11]_inst_i_18 
       (.I0(\register_array_reg[3]_12 [11]),
        .I1(\register_array_reg[2]_13 [11]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [11]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [11]),
        .O(\leds_OBUF[11]_inst_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[11]_inst_i_19 
       (.I0(\register_array_reg[7]_8 [11]),
        .I1(\register_array_reg[6]_9 [11]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [11]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [11]),
        .O(\leds_OBUF[11]_inst_i_19_n_0 ));
  MUXF8 \leds_OBUF[11]_inst_i_2 
       (.I0(\leds_OBUF[11]_inst_i_6_n_0 ),
        .I1(\leds_OBUF[11]_inst_i_7_n_0 ),
        .O(regread[27]),
        .S(read_switches_IBUF[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[11]_inst_i_20 
       (.I0(\register_array_reg[11]_4 [11]),
        .I1(\register_array_reg[10]_5 [11]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [11]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [11]),
        .O(\leds_OBUF[11]_inst_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[11]_inst_i_21 
       (.I0(\register_array_reg[15]_0 [11]),
        .I1(\register_array_reg[14]_1 [11]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [11]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [11]),
        .O(\leds_OBUF[11]_inst_i_21_n_0 ));
  MUXF8 \leds_OBUF[11]_inst_i_4 
       (.I0(\leds_OBUF[11]_inst_i_10_n_0 ),
        .I1(\leds_OBUF[11]_inst_i_11_n_0 ),
        .O(regread[11]),
        .S(read_switches_IBUF[3]));
  MUXF7 \leds_OBUF[11]_inst_i_6 
       (.I0(\leds_OBUF[11]_inst_i_14_n_0 ),
        .I1(\leds_OBUF[11]_inst_i_15_n_0 ),
        .O(\leds_OBUF[11]_inst_i_6_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[11]_inst_i_7 
       (.I0(\leds_OBUF[11]_inst_i_16_n_0 ),
        .I1(\leds_OBUF[11]_inst_i_17_n_0 ),
        .O(\leds_OBUF[11]_inst_i_7_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAAAACCCCF0F0FF00)) 
    \leds_OBUF[12]_inst_i_1 
       (.I0(regread[28]),
        .I1(memout[28]),
        .I2(regread[12]),
        .I3(memout[12]),
        .I4(memOrReg_IBUF),
        .I5(firstOrLast_IBUF),
        .O(leds_OBUF[12]));
  MUXF7 \leds_OBUF[12]_inst_i_10 
       (.I0(\leds_OBUF[12]_inst_i_18_n_0 ),
        .I1(\leds_OBUF[12]_inst_i_19_n_0 ),
        .O(\leds_OBUF[12]_inst_i_10_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[12]_inst_i_11 
       (.I0(\leds_OBUF[12]_inst_i_20_n_0 ),
        .I1(\leds_OBUF[12]_inst_i_21_n_0 ),
        .O(\leds_OBUF[12]_inst_i_11_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[12]_inst_i_14 
       (.I0(\register_array_reg[3]_12 [28]),
        .I1(\register_array_reg[2]_13 [28]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [28]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [28]),
        .O(\leds_OBUF[12]_inst_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[12]_inst_i_15 
       (.I0(\register_array_reg[7]_8 [28]),
        .I1(\register_array_reg[6]_9 [28]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [28]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [28]),
        .O(\leds_OBUF[12]_inst_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[12]_inst_i_16 
       (.I0(\register_array_reg[11]_4 [28]),
        .I1(\register_array_reg[10]_5 [28]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [28]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [28]),
        .O(\leds_OBUF[12]_inst_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[12]_inst_i_17 
       (.I0(\register_array_reg[15]_0 [28]),
        .I1(\register_array_reg[14]_1 [28]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [28]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [28]),
        .O(\leds_OBUF[12]_inst_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[12]_inst_i_18 
       (.I0(\register_array_reg[3]_12 [12]),
        .I1(\register_array_reg[2]_13 [12]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [12]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [12]),
        .O(\leds_OBUF[12]_inst_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[12]_inst_i_19 
       (.I0(\register_array_reg[7]_8 [12]),
        .I1(\register_array_reg[6]_9 [12]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [12]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [12]),
        .O(\leds_OBUF[12]_inst_i_19_n_0 ));
  MUXF8 \leds_OBUF[12]_inst_i_2 
       (.I0(\leds_OBUF[12]_inst_i_6_n_0 ),
        .I1(\leds_OBUF[12]_inst_i_7_n_0 ),
        .O(regread[28]),
        .S(read_switches_IBUF[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[12]_inst_i_20 
       (.I0(\register_array_reg[11]_4 [12]),
        .I1(\register_array_reg[10]_5 [12]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [12]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [12]),
        .O(\leds_OBUF[12]_inst_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[12]_inst_i_21 
       (.I0(\register_array_reg[15]_0 [12]),
        .I1(\register_array_reg[14]_1 [12]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [12]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [12]),
        .O(\leds_OBUF[12]_inst_i_21_n_0 ));
  MUXF8 \leds_OBUF[12]_inst_i_4 
       (.I0(\leds_OBUF[12]_inst_i_10_n_0 ),
        .I1(\leds_OBUF[12]_inst_i_11_n_0 ),
        .O(regread[12]),
        .S(read_switches_IBUF[3]));
  MUXF7 \leds_OBUF[12]_inst_i_6 
       (.I0(\leds_OBUF[12]_inst_i_14_n_0 ),
        .I1(\leds_OBUF[12]_inst_i_15_n_0 ),
        .O(\leds_OBUF[12]_inst_i_6_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[12]_inst_i_7 
       (.I0(\leds_OBUF[12]_inst_i_16_n_0 ),
        .I1(\leds_OBUF[12]_inst_i_17_n_0 ),
        .O(\leds_OBUF[12]_inst_i_7_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAAAACCCCF0F0FF00)) 
    \leds_OBUF[13]_inst_i_1 
       (.I0(regread[29]),
        .I1(memout[29]),
        .I2(regread[13]),
        .I3(memout[13]),
        .I4(memOrReg_IBUF),
        .I5(firstOrLast_IBUF),
        .O(leds_OBUF[13]));
  MUXF7 \leds_OBUF[13]_inst_i_10 
       (.I0(\leds_OBUF[13]_inst_i_18_n_0 ),
        .I1(\leds_OBUF[13]_inst_i_19_n_0 ),
        .O(\leds_OBUF[13]_inst_i_10_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[13]_inst_i_11 
       (.I0(\leds_OBUF[13]_inst_i_20_n_0 ),
        .I1(\leds_OBUF[13]_inst_i_21_n_0 ),
        .O(\leds_OBUF[13]_inst_i_11_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[13]_inst_i_14 
       (.I0(\register_array_reg[3]_12 [29]),
        .I1(\register_array_reg[2]_13 [29]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [29]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [29]),
        .O(\leds_OBUF[13]_inst_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[13]_inst_i_15 
       (.I0(\register_array_reg[7]_8 [29]),
        .I1(\register_array_reg[6]_9 [29]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [29]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [29]),
        .O(\leds_OBUF[13]_inst_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[13]_inst_i_16 
       (.I0(\register_array_reg[11]_4 [29]),
        .I1(\register_array_reg[10]_5 [29]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [29]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [29]),
        .O(\leds_OBUF[13]_inst_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[13]_inst_i_17 
       (.I0(\register_array_reg[15]_0 [29]),
        .I1(\register_array_reg[14]_1 [29]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [29]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [29]),
        .O(\leds_OBUF[13]_inst_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[13]_inst_i_18 
       (.I0(\register_array_reg[3]_12 [13]),
        .I1(\register_array_reg[2]_13 [13]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [13]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [13]),
        .O(\leds_OBUF[13]_inst_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[13]_inst_i_19 
       (.I0(\register_array_reg[7]_8 [13]),
        .I1(\register_array_reg[6]_9 [13]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [13]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [13]),
        .O(\leds_OBUF[13]_inst_i_19_n_0 ));
  MUXF8 \leds_OBUF[13]_inst_i_2 
       (.I0(\leds_OBUF[13]_inst_i_6_n_0 ),
        .I1(\leds_OBUF[13]_inst_i_7_n_0 ),
        .O(regread[29]),
        .S(read_switches_IBUF[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[13]_inst_i_20 
       (.I0(\register_array_reg[11]_4 [13]),
        .I1(\register_array_reg[10]_5 [13]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [13]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [13]),
        .O(\leds_OBUF[13]_inst_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[13]_inst_i_21 
       (.I0(\register_array_reg[15]_0 [13]),
        .I1(\register_array_reg[14]_1 [13]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [13]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [13]),
        .O(\leds_OBUF[13]_inst_i_21_n_0 ));
  MUXF8 \leds_OBUF[13]_inst_i_4 
       (.I0(\leds_OBUF[13]_inst_i_10_n_0 ),
        .I1(\leds_OBUF[13]_inst_i_11_n_0 ),
        .O(regread[13]),
        .S(read_switches_IBUF[3]));
  MUXF7 \leds_OBUF[13]_inst_i_6 
       (.I0(\leds_OBUF[13]_inst_i_14_n_0 ),
        .I1(\leds_OBUF[13]_inst_i_15_n_0 ),
        .O(\leds_OBUF[13]_inst_i_6_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[13]_inst_i_7 
       (.I0(\leds_OBUF[13]_inst_i_16_n_0 ),
        .I1(\leds_OBUF[13]_inst_i_17_n_0 ),
        .O(\leds_OBUF[13]_inst_i_7_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAAAACCCCF0F0FF00)) 
    \leds_OBUF[14]_inst_i_1 
       (.I0(regread[30]),
        .I1(memout[30]),
        .I2(regread[14]),
        .I3(memout[14]),
        .I4(memOrReg_IBUF),
        .I5(firstOrLast_IBUF),
        .O(leds_OBUF[14]));
  MUXF7 \leds_OBUF[14]_inst_i_10 
       (.I0(\leds_OBUF[14]_inst_i_18_n_0 ),
        .I1(\leds_OBUF[14]_inst_i_19_n_0 ),
        .O(\leds_OBUF[14]_inst_i_10_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[14]_inst_i_11 
       (.I0(\leds_OBUF[14]_inst_i_20_n_0 ),
        .I1(\leds_OBUF[14]_inst_i_21_n_0 ),
        .O(\leds_OBUF[14]_inst_i_11_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[14]_inst_i_14 
       (.I0(\register_array_reg[3]_12 [30]),
        .I1(\register_array_reg[2]_13 [30]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [30]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [30]),
        .O(\leds_OBUF[14]_inst_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[14]_inst_i_15 
       (.I0(\register_array_reg[7]_8 [30]),
        .I1(\register_array_reg[6]_9 [30]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [30]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [30]),
        .O(\leds_OBUF[14]_inst_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[14]_inst_i_16 
       (.I0(\register_array_reg[11]_4 [30]),
        .I1(\register_array_reg[10]_5 [30]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [30]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [30]),
        .O(\leds_OBUF[14]_inst_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[14]_inst_i_17 
       (.I0(\register_array_reg[15]_0 [30]),
        .I1(\register_array_reg[14]_1 [30]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [30]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [30]),
        .O(\leds_OBUF[14]_inst_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[14]_inst_i_18 
       (.I0(\register_array_reg[3]_12 [14]),
        .I1(\register_array_reg[2]_13 [14]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [14]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [14]),
        .O(\leds_OBUF[14]_inst_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[14]_inst_i_19 
       (.I0(\register_array_reg[7]_8 [14]),
        .I1(\register_array_reg[6]_9 [14]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [14]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [14]),
        .O(\leds_OBUF[14]_inst_i_19_n_0 ));
  MUXF8 \leds_OBUF[14]_inst_i_2 
       (.I0(\leds_OBUF[14]_inst_i_6_n_0 ),
        .I1(\leds_OBUF[14]_inst_i_7_n_0 ),
        .O(regread[30]),
        .S(read_switches_IBUF[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[14]_inst_i_20 
       (.I0(\register_array_reg[11]_4 [14]),
        .I1(\register_array_reg[10]_5 [14]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [14]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [14]),
        .O(\leds_OBUF[14]_inst_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[14]_inst_i_21 
       (.I0(\register_array_reg[15]_0 [14]),
        .I1(\register_array_reg[14]_1 [14]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [14]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [14]),
        .O(\leds_OBUF[14]_inst_i_21_n_0 ));
  MUXF8 \leds_OBUF[14]_inst_i_4 
       (.I0(\leds_OBUF[14]_inst_i_10_n_0 ),
        .I1(\leds_OBUF[14]_inst_i_11_n_0 ),
        .O(regread[14]),
        .S(read_switches_IBUF[3]));
  MUXF7 \leds_OBUF[14]_inst_i_6 
       (.I0(\leds_OBUF[14]_inst_i_14_n_0 ),
        .I1(\leds_OBUF[14]_inst_i_15_n_0 ),
        .O(\leds_OBUF[14]_inst_i_6_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[14]_inst_i_7 
       (.I0(\leds_OBUF[14]_inst_i_16_n_0 ),
        .I1(\leds_OBUF[14]_inst_i_17_n_0 ),
        .O(\leds_OBUF[14]_inst_i_7_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAAAACCCCF0F0FF00)) 
    \leds_OBUF[15]_inst_i_1 
       (.I0(regread[31]),
        .I1(memout[31]),
        .I2(regread[15]),
        .I3(memout[15]),
        .I4(memOrReg_IBUF),
        .I5(firstOrLast_IBUF),
        .O(leds_OBUF[15]));
  MUXF7 \leds_OBUF[15]_inst_i_10 
       (.I0(\leds_OBUF[15]_inst_i_18_n_0 ),
        .I1(\leds_OBUF[15]_inst_i_19_n_0 ),
        .O(\leds_OBUF[15]_inst_i_10_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[15]_inst_i_11 
       (.I0(\leds_OBUF[15]_inst_i_20_n_0 ),
        .I1(\leds_OBUF[15]_inst_i_21_n_0 ),
        .O(\leds_OBUF[15]_inst_i_11_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[15]_inst_i_14 
       (.I0(\register_array_reg[3]_12 [31]),
        .I1(\register_array_reg[2]_13 [31]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [31]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [31]),
        .O(\leds_OBUF[15]_inst_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[15]_inst_i_15 
       (.I0(\register_array_reg[7]_8 [31]),
        .I1(\register_array_reg[6]_9 [31]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [31]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [31]),
        .O(\leds_OBUF[15]_inst_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[15]_inst_i_16 
       (.I0(\register_array_reg[11]_4 [31]),
        .I1(\register_array_reg[10]_5 [31]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [31]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [31]),
        .O(\leds_OBUF[15]_inst_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[15]_inst_i_17 
       (.I0(\register_array_reg[15]_0 [31]),
        .I1(\register_array_reg[14]_1 [31]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [31]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [31]),
        .O(\leds_OBUF[15]_inst_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[15]_inst_i_18 
       (.I0(\register_array_reg[3]_12 [15]),
        .I1(\register_array_reg[2]_13 [15]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [15]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [15]),
        .O(\leds_OBUF[15]_inst_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[15]_inst_i_19 
       (.I0(\register_array_reg[7]_8 [15]),
        .I1(\register_array_reg[6]_9 [15]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [15]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [15]),
        .O(\leds_OBUF[15]_inst_i_19_n_0 ));
  MUXF8 \leds_OBUF[15]_inst_i_2 
       (.I0(\leds_OBUF[15]_inst_i_6_n_0 ),
        .I1(\leds_OBUF[15]_inst_i_7_n_0 ),
        .O(regread[31]),
        .S(read_switches_IBUF[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[15]_inst_i_20 
       (.I0(\register_array_reg[11]_4 [15]),
        .I1(\register_array_reg[10]_5 [15]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [15]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [15]),
        .O(\leds_OBUF[15]_inst_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[15]_inst_i_21 
       (.I0(\register_array_reg[15]_0 [15]),
        .I1(\register_array_reg[14]_1 [15]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [15]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [15]),
        .O(\leds_OBUF[15]_inst_i_21_n_0 ));
  MUXF8 \leds_OBUF[15]_inst_i_4 
       (.I0(\leds_OBUF[15]_inst_i_10_n_0 ),
        .I1(\leds_OBUF[15]_inst_i_11_n_0 ),
        .O(regread[15]),
        .S(read_switches_IBUF[3]));
  MUXF7 \leds_OBUF[15]_inst_i_6 
       (.I0(\leds_OBUF[15]_inst_i_14_n_0 ),
        .I1(\leds_OBUF[15]_inst_i_15_n_0 ),
        .O(\leds_OBUF[15]_inst_i_6_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[15]_inst_i_7 
       (.I0(\leds_OBUF[15]_inst_i_16_n_0 ),
        .I1(\leds_OBUF[15]_inst_i_17_n_0 ),
        .O(\leds_OBUF[15]_inst_i_7_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAAAACCCCF0F0FF00)) 
    \leds_OBUF[1]_inst_i_1 
       (.I0(regread[17]),
        .I1(memout[17]),
        .I2(regread[1]),
        .I3(memout[1]),
        .I4(memOrReg_IBUF),
        .I5(firstOrLast_IBUF),
        .O(leds_OBUF[1]));
  MUXF7 \leds_OBUF[1]_inst_i_10 
       (.I0(\leds_OBUF[1]_inst_i_18_n_0 ),
        .I1(\leds_OBUF[1]_inst_i_19_n_0 ),
        .O(\leds_OBUF[1]_inst_i_10_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[1]_inst_i_11 
       (.I0(\leds_OBUF[1]_inst_i_20_n_0 ),
        .I1(\leds_OBUF[1]_inst_i_21_n_0 ),
        .O(\leds_OBUF[1]_inst_i_11_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[1]_inst_i_14 
       (.I0(\register_array_reg[3]_12 [17]),
        .I1(\register_array_reg[2]_13 [17]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [17]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [17]),
        .O(\leds_OBUF[1]_inst_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[1]_inst_i_15 
       (.I0(\register_array_reg[7]_8 [17]),
        .I1(\register_array_reg[6]_9 [17]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [17]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [17]),
        .O(\leds_OBUF[1]_inst_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[1]_inst_i_16 
       (.I0(\register_array_reg[11]_4 [17]),
        .I1(\register_array_reg[10]_5 [17]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [17]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [17]),
        .O(\leds_OBUF[1]_inst_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[1]_inst_i_17 
       (.I0(\register_array_reg[15]_0 [17]),
        .I1(\register_array_reg[14]_1 [17]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [17]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [17]),
        .O(\leds_OBUF[1]_inst_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[1]_inst_i_18 
       (.I0(\register_array_reg[3]_12 [1]),
        .I1(\register_array_reg[2]_13 [1]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [1]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [1]),
        .O(\leds_OBUF[1]_inst_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[1]_inst_i_19 
       (.I0(\register_array_reg[7]_8 [1]),
        .I1(\register_array_reg[6]_9 [1]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [1]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [1]),
        .O(\leds_OBUF[1]_inst_i_19_n_0 ));
  MUXF8 \leds_OBUF[1]_inst_i_2 
       (.I0(\leds_OBUF[1]_inst_i_6_n_0 ),
        .I1(\leds_OBUF[1]_inst_i_7_n_0 ),
        .O(regread[17]),
        .S(read_switches_IBUF[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[1]_inst_i_20 
       (.I0(\register_array_reg[11]_4 [1]),
        .I1(\register_array_reg[10]_5 [1]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [1]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [1]),
        .O(\leds_OBUF[1]_inst_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[1]_inst_i_21 
       (.I0(\register_array_reg[15]_0 [1]),
        .I1(\register_array_reg[14]_1 [1]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [1]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [1]),
        .O(\leds_OBUF[1]_inst_i_21_n_0 ));
  MUXF8 \leds_OBUF[1]_inst_i_4 
       (.I0(\leds_OBUF[1]_inst_i_10_n_0 ),
        .I1(\leds_OBUF[1]_inst_i_11_n_0 ),
        .O(regread[1]),
        .S(read_switches_IBUF[3]));
  MUXF7 \leds_OBUF[1]_inst_i_6 
       (.I0(\leds_OBUF[1]_inst_i_14_n_0 ),
        .I1(\leds_OBUF[1]_inst_i_15_n_0 ),
        .O(\leds_OBUF[1]_inst_i_6_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[1]_inst_i_7 
       (.I0(\leds_OBUF[1]_inst_i_16_n_0 ),
        .I1(\leds_OBUF[1]_inst_i_17_n_0 ),
        .O(\leds_OBUF[1]_inst_i_7_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAAAACCCCF0F0FF00)) 
    \leds_OBUF[2]_inst_i_1 
       (.I0(regread[18]),
        .I1(memout[18]),
        .I2(regread[2]),
        .I3(memout[2]),
        .I4(memOrReg_IBUF),
        .I5(firstOrLast_IBUF),
        .O(leds_OBUF[2]));
  MUXF7 \leds_OBUF[2]_inst_i_10 
       (.I0(\leds_OBUF[2]_inst_i_18_n_0 ),
        .I1(\leds_OBUF[2]_inst_i_19_n_0 ),
        .O(\leds_OBUF[2]_inst_i_10_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[2]_inst_i_11 
       (.I0(\leds_OBUF[2]_inst_i_20_n_0 ),
        .I1(\leds_OBUF[2]_inst_i_21_n_0 ),
        .O(\leds_OBUF[2]_inst_i_11_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[2]_inst_i_14 
       (.I0(\register_array_reg[3]_12 [18]),
        .I1(\register_array_reg[2]_13 [18]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [18]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [18]),
        .O(\leds_OBUF[2]_inst_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[2]_inst_i_15 
       (.I0(\register_array_reg[7]_8 [18]),
        .I1(\register_array_reg[6]_9 [18]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [18]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [18]),
        .O(\leds_OBUF[2]_inst_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[2]_inst_i_16 
       (.I0(\register_array_reg[11]_4 [18]),
        .I1(\register_array_reg[10]_5 [18]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [18]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [18]),
        .O(\leds_OBUF[2]_inst_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[2]_inst_i_17 
       (.I0(\register_array_reg[15]_0 [18]),
        .I1(\register_array_reg[14]_1 [18]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [18]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [18]),
        .O(\leds_OBUF[2]_inst_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[2]_inst_i_18 
       (.I0(\register_array_reg[3]_12 [2]),
        .I1(\register_array_reg[2]_13 [2]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [2]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [2]),
        .O(\leds_OBUF[2]_inst_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[2]_inst_i_19 
       (.I0(\register_array_reg[7]_8 [2]),
        .I1(\register_array_reg[6]_9 [2]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [2]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [2]),
        .O(\leds_OBUF[2]_inst_i_19_n_0 ));
  MUXF8 \leds_OBUF[2]_inst_i_2 
       (.I0(\leds_OBUF[2]_inst_i_6_n_0 ),
        .I1(\leds_OBUF[2]_inst_i_7_n_0 ),
        .O(regread[18]),
        .S(read_switches_IBUF[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[2]_inst_i_20 
       (.I0(\register_array_reg[11]_4 [2]),
        .I1(\register_array_reg[10]_5 [2]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [2]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [2]),
        .O(\leds_OBUF[2]_inst_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[2]_inst_i_21 
       (.I0(\register_array_reg[15]_0 [2]),
        .I1(\register_array_reg[14]_1 [2]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [2]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [2]),
        .O(\leds_OBUF[2]_inst_i_21_n_0 ));
  MUXF8 \leds_OBUF[2]_inst_i_4 
       (.I0(\leds_OBUF[2]_inst_i_10_n_0 ),
        .I1(\leds_OBUF[2]_inst_i_11_n_0 ),
        .O(regread[2]),
        .S(read_switches_IBUF[3]));
  MUXF7 \leds_OBUF[2]_inst_i_6 
       (.I0(\leds_OBUF[2]_inst_i_14_n_0 ),
        .I1(\leds_OBUF[2]_inst_i_15_n_0 ),
        .O(\leds_OBUF[2]_inst_i_6_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[2]_inst_i_7 
       (.I0(\leds_OBUF[2]_inst_i_16_n_0 ),
        .I1(\leds_OBUF[2]_inst_i_17_n_0 ),
        .O(\leds_OBUF[2]_inst_i_7_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAAAACCCCF0F0FF00)) 
    \leds_OBUF[3]_inst_i_1 
       (.I0(regread[19]),
        .I1(memout[19]),
        .I2(regread[3]),
        .I3(memout[3]),
        .I4(memOrReg_IBUF),
        .I5(firstOrLast_IBUF),
        .O(leds_OBUF[3]));
  MUXF7 \leds_OBUF[3]_inst_i_10 
       (.I0(\leds_OBUF[3]_inst_i_18_n_0 ),
        .I1(\leds_OBUF[3]_inst_i_19_n_0 ),
        .O(\leds_OBUF[3]_inst_i_10_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[3]_inst_i_11 
       (.I0(\leds_OBUF[3]_inst_i_20_n_0 ),
        .I1(\leds_OBUF[3]_inst_i_21_n_0 ),
        .O(\leds_OBUF[3]_inst_i_11_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[3]_inst_i_14 
       (.I0(\register_array_reg[3]_12 [19]),
        .I1(\register_array_reg[2]_13 [19]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [19]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [19]),
        .O(\leds_OBUF[3]_inst_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[3]_inst_i_15 
       (.I0(\register_array_reg[7]_8 [19]),
        .I1(\register_array_reg[6]_9 [19]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [19]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [19]),
        .O(\leds_OBUF[3]_inst_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[3]_inst_i_16 
       (.I0(\register_array_reg[11]_4 [19]),
        .I1(\register_array_reg[10]_5 [19]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [19]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [19]),
        .O(\leds_OBUF[3]_inst_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[3]_inst_i_17 
       (.I0(\register_array_reg[15]_0 [19]),
        .I1(\register_array_reg[14]_1 [19]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [19]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [19]),
        .O(\leds_OBUF[3]_inst_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[3]_inst_i_18 
       (.I0(\register_array_reg[3]_12 [3]),
        .I1(\register_array_reg[2]_13 [3]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [3]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [3]),
        .O(\leds_OBUF[3]_inst_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[3]_inst_i_19 
       (.I0(\register_array_reg[7]_8 [3]),
        .I1(\register_array_reg[6]_9 [3]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [3]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [3]),
        .O(\leds_OBUF[3]_inst_i_19_n_0 ));
  MUXF8 \leds_OBUF[3]_inst_i_2 
       (.I0(\leds_OBUF[3]_inst_i_6_n_0 ),
        .I1(\leds_OBUF[3]_inst_i_7_n_0 ),
        .O(regread[19]),
        .S(read_switches_IBUF[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[3]_inst_i_20 
       (.I0(\register_array_reg[11]_4 [3]),
        .I1(\register_array_reg[10]_5 [3]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [3]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [3]),
        .O(\leds_OBUF[3]_inst_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[3]_inst_i_21 
       (.I0(\register_array_reg[15]_0 [3]),
        .I1(\register_array_reg[14]_1 [3]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [3]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [3]),
        .O(\leds_OBUF[3]_inst_i_21_n_0 ));
  MUXF8 \leds_OBUF[3]_inst_i_4 
       (.I0(\leds_OBUF[3]_inst_i_10_n_0 ),
        .I1(\leds_OBUF[3]_inst_i_11_n_0 ),
        .O(regread[3]),
        .S(read_switches_IBUF[3]));
  MUXF7 \leds_OBUF[3]_inst_i_6 
       (.I0(\leds_OBUF[3]_inst_i_14_n_0 ),
        .I1(\leds_OBUF[3]_inst_i_15_n_0 ),
        .O(\leds_OBUF[3]_inst_i_6_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[3]_inst_i_7 
       (.I0(\leds_OBUF[3]_inst_i_16_n_0 ),
        .I1(\leds_OBUF[3]_inst_i_17_n_0 ),
        .O(\leds_OBUF[3]_inst_i_7_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAAAACCCCF0F0FF00)) 
    \leds_OBUF[4]_inst_i_1 
       (.I0(regread[20]),
        .I1(memout[20]),
        .I2(regread[4]),
        .I3(memout[4]),
        .I4(memOrReg_IBUF),
        .I5(firstOrLast_IBUF),
        .O(leds_OBUF[4]));
  MUXF7 \leds_OBUF[4]_inst_i_10 
       (.I0(\leds_OBUF[4]_inst_i_18_n_0 ),
        .I1(\leds_OBUF[4]_inst_i_19_n_0 ),
        .O(\leds_OBUF[4]_inst_i_10_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[4]_inst_i_11 
       (.I0(\leds_OBUF[4]_inst_i_20_n_0 ),
        .I1(\leds_OBUF[4]_inst_i_21_n_0 ),
        .O(\leds_OBUF[4]_inst_i_11_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[4]_inst_i_14 
       (.I0(\register_array_reg[3]_12 [20]),
        .I1(\register_array_reg[2]_13 [20]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [20]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [20]),
        .O(\leds_OBUF[4]_inst_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[4]_inst_i_15 
       (.I0(\register_array_reg[7]_8 [20]),
        .I1(\register_array_reg[6]_9 [20]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [20]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [20]),
        .O(\leds_OBUF[4]_inst_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[4]_inst_i_16 
       (.I0(\register_array_reg[11]_4 [20]),
        .I1(\register_array_reg[10]_5 [20]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [20]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [20]),
        .O(\leds_OBUF[4]_inst_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[4]_inst_i_17 
       (.I0(\register_array_reg[15]_0 [20]),
        .I1(\register_array_reg[14]_1 [20]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [20]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [20]),
        .O(\leds_OBUF[4]_inst_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[4]_inst_i_18 
       (.I0(\register_array_reg[3]_12 [4]),
        .I1(\register_array_reg[2]_13 [4]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [4]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [4]),
        .O(\leds_OBUF[4]_inst_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[4]_inst_i_19 
       (.I0(\register_array_reg[7]_8 [4]),
        .I1(\register_array_reg[6]_9 [4]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [4]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [4]),
        .O(\leds_OBUF[4]_inst_i_19_n_0 ));
  MUXF8 \leds_OBUF[4]_inst_i_2 
       (.I0(\leds_OBUF[4]_inst_i_6_n_0 ),
        .I1(\leds_OBUF[4]_inst_i_7_n_0 ),
        .O(regread[20]),
        .S(read_switches_IBUF[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[4]_inst_i_20 
       (.I0(\register_array_reg[11]_4 [4]),
        .I1(\register_array_reg[10]_5 [4]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [4]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [4]),
        .O(\leds_OBUF[4]_inst_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[4]_inst_i_21 
       (.I0(\register_array_reg[15]_0 [4]),
        .I1(\register_array_reg[14]_1 [4]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [4]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [4]),
        .O(\leds_OBUF[4]_inst_i_21_n_0 ));
  MUXF8 \leds_OBUF[4]_inst_i_4 
       (.I0(\leds_OBUF[4]_inst_i_10_n_0 ),
        .I1(\leds_OBUF[4]_inst_i_11_n_0 ),
        .O(regread[4]),
        .S(read_switches_IBUF[3]));
  MUXF7 \leds_OBUF[4]_inst_i_6 
       (.I0(\leds_OBUF[4]_inst_i_14_n_0 ),
        .I1(\leds_OBUF[4]_inst_i_15_n_0 ),
        .O(\leds_OBUF[4]_inst_i_6_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[4]_inst_i_7 
       (.I0(\leds_OBUF[4]_inst_i_16_n_0 ),
        .I1(\leds_OBUF[4]_inst_i_17_n_0 ),
        .O(\leds_OBUF[4]_inst_i_7_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAAAACCCCF0F0FF00)) 
    \leds_OBUF[5]_inst_i_1 
       (.I0(regread[21]),
        .I1(memout[21]),
        .I2(regread[5]),
        .I3(memout[5]),
        .I4(memOrReg_IBUF),
        .I5(firstOrLast_IBUF),
        .O(leds_OBUF[5]));
  MUXF7 \leds_OBUF[5]_inst_i_10 
       (.I0(\leds_OBUF[5]_inst_i_18_n_0 ),
        .I1(\leds_OBUF[5]_inst_i_19_n_0 ),
        .O(\leds_OBUF[5]_inst_i_10_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[5]_inst_i_11 
       (.I0(\leds_OBUF[5]_inst_i_20_n_0 ),
        .I1(\leds_OBUF[5]_inst_i_21_n_0 ),
        .O(\leds_OBUF[5]_inst_i_11_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[5]_inst_i_14 
       (.I0(\register_array_reg[3]_12 [21]),
        .I1(\register_array_reg[2]_13 [21]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [21]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [21]),
        .O(\leds_OBUF[5]_inst_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[5]_inst_i_15 
       (.I0(\register_array_reg[7]_8 [21]),
        .I1(\register_array_reg[6]_9 [21]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [21]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [21]),
        .O(\leds_OBUF[5]_inst_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[5]_inst_i_16 
       (.I0(\register_array_reg[11]_4 [21]),
        .I1(\register_array_reg[10]_5 [21]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [21]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [21]),
        .O(\leds_OBUF[5]_inst_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[5]_inst_i_17 
       (.I0(\register_array_reg[15]_0 [21]),
        .I1(\register_array_reg[14]_1 [21]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [21]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [21]),
        .O(\leds_OBUF[5]_inst_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[5]_inst_i_18 
       (.I0(\register_array_reg[3]_12 [5]),
        .I1(\register_array_reg[2]_13 [5]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [5]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [5]),
        .O(\leds_OBUF[5]_inst_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[5]_inst_i_19 
       (.I0(\register_array_reg[7]_8 [5]),
        .I1(\register_array_reg[6]_9 [5]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [5]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [5]),
        .O(\leds_OBUF[5]_inst_i_19_n_0 ));
  MUXF8 \leds_OBUF[5]_inst_i_2 
       (.I0(\leds_OBUF[5]_inst_i_6_n_0 ),
        .I1(\leds_OBUF[5]_inst_i_7_n_0 ),
        .O(regread[21]),
        .S(read_switches_IBUF[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[5]_inst_i_20 
       (.I0(\register_array_reg[11]_4 [5]),
        .I1(\register_array_reg[10]_5 [5]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [5]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [5]),
        .O(\leds_OBUF[5]_inst_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[5]_inst_i_21 
       (.I0(\register_array_reg[15]_0 [5]),
        .I1(\register_array_reg[14]_1 [5]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [5]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [5]),
        .O(\leds_OBUF[5]_inst_i_21_n_0 ));
  MUXF8 \leds_OBUF[5]_inst_i_4 
       (.I0(\leds_OBUF[5]_inst_i_10_n_0 ),
        .I1(\leds_OBUF[5]_inst_i_11_n_0 ),
        .O(regread[5]),
        .S(read_switches_IBUF[3]));
  MUXF7 \leds_OBUF[5]_inst_i_6 
       (.I0(\leds_OBUF[5]_inst_i_14_n_0 ),
        .I1(\leds_OBUF[5]_inst_i_15_n_0 ),
        .O(\leds_OBUF[5]_inst_i_6_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[5]_inst_i_7 
       (.I0(\leds_OBUF[5]_inst_i_16_n_0 ),
        .I1(\leds_OBUF[5]_inst_i_17_n_0 ),
        .O(\leds_OBUF[5]_inst_i_7_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAAAACCCCF0F0FF00)) 
    \leds_OBUF[6]_inst_i_1 
       (.I0(regread[22]),
        .I1(memout[22]),
        .I2(regread[6]),
        .I3(memout[6]),
        .I4(memOrReg_IBUF),
        .I5(firstOrLast_IBUF),
        .O(leds_OBUF[6]));
  MUXF7 \leds_OBUF[6]_inst_i_10 
       (.I0(\leds_OBUF[6]_inst_i_18_n_0 ),
        .I1(\leds_OBUF[6]_inst_i_19_n_0 ),
        .O(\leds_OBUF[6]_inst_i_10_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[6]_inst_i_11 
       (.I0(\leds_OBUF[6]_inst_i_20_n_0 ),
        .I1(\leds_OBUF[6]_inst_i_21_n_0 ),
        .O(\leds_OBUF[6]_inst_i_11_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[6]_inst_i_14 
       (.I0(\register_array_reg[3]_12 [22]),
        .I1(\register_array_reg[2]_13 [22]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [22]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [22]),
        .O(\leds_OBUF[6]_inst_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[6]_inst_i_15 
       (.I0(\register_array_reg[7]_8 [22]),
        .I1(\register_array_reg[6]_9 [22]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [22]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [22]),
        .O(\leds_OBUF[6]_inst_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[6]_inst_i_16 
       (.I0(\register_array_reg[11]_4 [22]),
        .I1(\register_array_reg[10]_5 [22]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [22]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [22]),
        .O(\leds_OBUF[6]_inst_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[6]_inst_i_17 
       (.I0(\register_array_reg[15]_0 [22]),
        .I1(\register_array_reg[14]_1 [22]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [22]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [22]),
        .O(\leds_OBUF[6]_inst_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[6]_inst_i_18 
       (.I0(\register_array_reg[3]_12 [6]),
        .I1(\register_array_reg[2]_13 [6]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [6]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [6]),
        .O(\leds_OBUF[6]_inst_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[6]_inst_i_19 
       (.I0(\register_array_reg[7]_8 [6]),
        .I1(\register_array_reg[6]_9 [6]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [6]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [6]),
        .O(\leds_OBUF[6]_inst_i_19_n_0 ));
  MUXF8 \leds_OBUF[6]_inst_i_2 
       (.I0(\leds_OBUF[6]_inst_i_6_n_0 ),
        .I1(\leds_OBUF[6]_inst_i_7_n_0 ),
        .O(regread[22]),
        .S(read_switches_IBUF[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[6]_inst_i_20 
       (.I0(\register_array_reg[11]_4 [6]),
        .I1(\register_array_reg[10]_5 [6]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [6]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [6]),
        .O(\leds_OBUF[6]_inst_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[6]_inst_i_21 
       (.I0(\register_array_reg[15]_0 [6]),
        .I1(\register_array_reg[14]_1 [6]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [6]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [6]),
        .O(\leds_OBUF[6]_inst_i_21_n_0 ));
  MUXF8 \leds_OBUF[6]_inst_i_4 
       (.I0(\leds_OBUF[6]_inst_i_10_n_0 ),
        .I1(\leds_OBUF[6]_inst_i_11_n_0 ),
        .O(regread[6]),
        .S(read_switches_IBUF[3]));
  MUXF7 \leds_OBUF[6]_inst_i_6 
       (.I0(\leds_OBUF[6]_inst_i_14_n_0 ),
        .I1(\leds_OBUF[6]_inst_i_15_n_0 ),
        .O(\leds_OBUF[6]_inst_i_6_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[6]_inst_i_7 
       (.I0(\leds_OBUF[6]_inst_i_16_n_0 ),
        .I1(\leds_OBUF[6]_inst_i_17_n_0 ),
        .O(\leds_OBUF[6]_inst_i_7_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAAAACCCCF0F0FF00)) 
    \leds_OBUF[7]_inst_i_1 
       (.I0(regread[23]),
        .I1(memout[23]),
        .I2(regread[7]),
        .I3(memout[7]),
        .I4(memOrReg_IBUF),
        .I5(firstOrLast_IBUF),
        .O(leds_OBUF[7]));
  MUXF7 \leds_OBUF[7]_inst_i_10 
       (.I0(\leds_OBUF[7]_inst_i_18_n_0 ),
        .I1(\leds_OBUF[7]_inst_i_19_n_0 ),
        .O(\leds_OBUF[7]_inst_i_10_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[7]_inst_i_11 
       (.I0(\leds_OBUF[7]_inst_i_20_n_0 ),
        .I1(\leds_OBUF[7]_inst_i_21_n_0 ),
        .O(\leds_OBUF[7]_inst_i_11_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[7]_inst_i_14 
       (.I0(\register_array_reg[3]_12 [23]),
        .I1(\register_array_reg[2]_13 [23]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [23]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [23]),
        .O(\leds_OBUF[7]_inst_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[7]_inst_i_15 
       (.I0(\register_array_reg[7]_8 [23]),
        .I1(\register_array_reg[6]_9 [23]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [23]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [23]),
        .O(\leds_OBUF[7]_inst_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[7]_inst_i_16 
       (.I0(\register_array_reg[11]_4 [23]),
        .I1(\register_array_reg[10]_5 [23]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [23]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [23]),
        .O(\leds_OBUF[7]_inst_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[7]_inst_i_17 
       (.I0(\register_array_reg[15]_0 [23]),
        .I1(\register_array_reg[14]_1 [23]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [23]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [23]),
        .O(\leds_OBUF[7]_inst_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[7]_inst_i_18 
       (.I0(\register_array_reg[3]_12 [7]),
        .I1(\register_array_reg[2]_13 [7]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [7]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [7]),
        .O(\leds_OBUF[7]_inst_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[7]_inst_i_19 
       (.I0(\register_array_reg[7]_8 [7]),
        .I1(\register_array_reg[6]_9 [7]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [7]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [7]),
        .O(\leds_OBUF[7]_inst_i_19_n_0 ));
  MUXF8 \leds_OBUF[7]_inst_i_2 
       (.I0(\leds_OBUF[7]_inst_i_6_n_0 ),
        .I1(\leds_OBUF[7]_inst_i_7_n_0 ),
        .O(regread[23]),
        .S(read_switches_IBUF[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[7]_inst_i_20 
       (.I0(\register_array_reg[11]_4 [7]),
        .I1(\register_array_reg[10]_5 [7]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [7]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [7]),
        .O(\leds_OBUF[7]_inst_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[7]_inst_i_21 
       (.I0(\register_array_reg[15]_0 [7]),
        .I1(\register_array_reg[14]_1 [7]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [7]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [7]),
        .O(\leds_OBUF[7]_inst_i_21_n_0 ));
  MUXF8 \leds_OBUF[7]_inst_i_4 
       (.I0(\leds_OBUF[7]_inst_i_10_n_0 ),
        .I1(\leds_OBUF[7]_inst_i_11_n_0 ),
        .O(regread[7]),
        .S(read_switches_IBUF[3]));
  MUXF7 \leds_OBUF[7]_inst_i_6 
       (.I0(\leds_OBUF[7]_inst_i_14_n_0 ),
        .I1(\leds_OBUF[7]_inst_i_15_n_0 ),
        .O(\leds_OBUF[7]_inst_i_6_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[7]_inst_i_7 
       (.I0(\leds_OBUF[7]_inst_i_16_n_0 ),
        .I1(\leds_OBUF[7]_inst_i_17_n_0 ),
        .O(\leds_OBUF[7]_inst_i_7_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAAAACCCCF0F0FF00)) 
    \leds_OBUF[8]_inst_i_1 
       (.I0(regread[24]),
        .I1(memout[24]),
        .I2(regread[8]),
        .I3(memout[8]),
        .I4(memOrReg_IBUF),
        .I5(firstOrLast_IBUF),
        .O(leds_OBUF[8]));
  MUXF7 \leds_OBUF[8]_inst_i_10 
       (.I0(\leds_OBUF[8]_inst_i_18_n_0 ),
        .I1(\leds_OBUF[8]_inst_i_19_n_0 ),
        .O(\leds_OBUF[8]_inst_i_10_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[8]_inst_i_11 
       (.I0(\leds_OBUF[8]_inst_i_20_n_0 ),
        .I1(\leds_OBUF[8]_inst_i_21_n_0 ),
        .O(\leds_OBUF[8]_inst_i_11_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[8]_inst_i_14 
       (.I0(\register_array_reg[3]_12 [24]),
        .I1(\register_array_reg[2]_13 [24]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [24]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [24]),
        .O(\leds_OBUF[8]_inst_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[8]_inst_i_15 
       (.I0(\register_array_reg[7]_8 [24]),
        .I1(\register_array_reg[6]_9 [24]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [24]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [24]),
        .O(\leds_OBUF[8]_inst_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[8]_inst_i_16 
       (.I0(\register_array_reg[11]_4 [24]),
        .I1(\register_array_reg[10]_5 [24]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [24]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [24]),
        .O(\leds_OBUF[8]_inst_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[8]_inst_i_17 
       (.I0(\register_array_reg[15]_0 [24]),
        .I1(\register_array_reg[14]_1 [24]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [24]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [24]),
        .O(\leds_OBUF[8]_inst_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[8]_inst_i_18 
       (.I0(\register_array_reg[3]_12 [8]),
        .I1(\register_array_reg[2]_13 [8]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [8]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [8]),
        .O(\leds_OBUF[8]_inst_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[8]_inst_i_19 
       (.I0(\register_array_reg[7]_8 [8]),
        .I1(\register_array_reg[6]_9 [8]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [8]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [8]),
        .O(\leds_OBUF[8]_inst_i_19_n_0 ));
  MUXF8 \leds_OBUF[8]_inst_i_2 
       (.I0(\leds_OBUF[8]_inst_i_6_n_0 ),
        .I1(\leds_OBUF[8]_inst_i_7_n_0 ),
        .O(regread[24]),
        .S(read_switches_IBUF[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[8]_inst_i_20 
       (.I0(\register_array_reg[11]_4 [8]),
        .I1(\register_array_reg[10]_5 [8]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [8]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [8]),
        .O(\leds_OBUF[8]_inst_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[8]_inst_i_21 
       (.I0(\register_array_reg[15]_0 [8]),
        .I1(\register_array_reg[14]_1 [8]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [8]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [8]),
        .O(\leds_OBUF[8]_inst_i_21_n_0 ));
  MUXF8 \leds_OBUF[8]_inst_i_4 
       (.I0(\leds_OBUF[8]_inst_i_10_n_0 ),
        .I1(\leds_OBUF[8]_inst_i_11_n_0 ),
        .O(regread[8]),
        .S(read_switches_IBUF[3]));
  MUXF7 \leds_OBUF[8]_inst_i_6 
       (.I0(\leds_OBUF[8]_inst_i_14_n_0 ),
        .I1(\leds_OBUF[8]_inst_i_15_n_0 ),
        .O(\leds_OBUF[8]_inst_i_6_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[8]_inst_i_7 
       (.I0(\leds_OBUF[8]_inst_i_16_n_0 ),
        .I1(\leds_OBUF[8]_inst_i_17_n_0 ),
        .O(\leds_OBUF[8]_inst_i_7_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAAAACCCCF0F0FF00)) 
    \leds_OBUF[9]_inst_i_1 
       (.I0(regread[25]),
        .I1(memout[25]),
        .I2(regread[9]),
        .I3(memout[9]),
        .I4(memOrReg_IBUF),
        .I5(firstOrLast_IBUF),
        .O(leds_OBUF[9]));
  MUXF7 \leds_OBUF[9]_inst_i_10 
       (.I0(\leds_OBUF[9]_inst_i_18_n_0 ),
        .I1(\leds_OBUF[9]_inst_i_19_n_0 ),
        .O(\leds_OBUF[9]_inst_i_10_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[9]_inst_i_11 
       (.I0(\leds_OBUF[9]_inst_i_20_n_0 ),
        .I1(\leds_OBUF[9]_inst_i_21_n_0 ),
        .O(\leds_OBUF[9]_inst_i_11_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[9]_inst_i_14 
       (.I0(\register_array_reg[3]_12 [25]),
        .I1(\register_array_reg[2]_13 [25]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [25]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [25]),
        .O(\leds_OBUF[9]_inst_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[9]_inst_i_15 
       (.I0(\register_array_reg[7]_8 [25]),
        .I1(\register_array_reg[6]_9 [25]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [25]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [25]),
        .O(\leds_OBUF[9]_inst_i_15_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[9]_inst_i_16 
       (.I0(\register_array_reg[11]_4 [25]),
        .I1(\register_array_reg[10]_5 [25]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [25]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [25]),
        .O(\leds_OBUF[9]_inst_i_16_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[9]_inst_i_17 
       (.I0(\register_array_reg[15]_0 [25]),
        .I1(\register_array_reg[14]_1 [25]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [25]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [25]),
        .O(\leds_OBUF[9]_inst_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[9]_inst_i_18 
       (.I0(\register_array_reg[3]_12 [9]),
        .I1(\register_array_reg[2]_13 [9]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[1]_14 [9]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[0]_15 [9]),
        .O(\leds_OBUF[9]_inst_i_18_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[9]_inst_i_19 
       (.I0(\register_array_reg[7]_8 [9]),
        .I1(\register_array_reg[6]_9 [9]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[5]_10 [9]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[4]_11 [9]),
        .O(\leds_OBUF[9]_inst_i_19_n_0 ));
  MUXF8 \leds_OBUF[9]_inst_i_2 
       (.I0(\leds_OBUF[9]_inst_i_6_n_0 ),
        .I1(\leds_OBUF[9]_inst_i_7_n_0 ),
        .O(regread[25]),
        .S(read_switches_IBUF[3]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[9]_inst_i_20 
       (.I0(\register_array_reg[11]_4 [9]),
        .I1(\register_array_reg[10]_5 [9]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[9]_6 [9]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[8]_7 [9]),
        .O(\leds_OBUF[9]_inst_i_20_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[9]_inst_i_21 
       (.I0(\register_array_reg[15]_0 [9]),
        .I1(\register_array_reg[14]_1 [9]),
        .I2(read_switches_IBUF[1]),
        .I3(\register_array_reg[13]_2 [9]),
        .I4(read_switches_IBUF[0]),
        .I5(\register_array_reg[12]_3 [9]),
        .O(\leds_OBUF[9]_inst_i_21_n_0 ));
  MUXF8 \leds_OBUF[9]_inst_i_4 
       (.I0(\leds_OBUF[9]_inst_i_10_n_0 ),
        .I1(\leds_OBUF[9]_inst_i_11_n_0 ),
        .O(regread[9]),
        .S(read_switches_IBUF[3]));
  MUXF7 \leds_OBUF[9]_inst_i_6 
       (.I0(\leds_OBUF[9]_inst_i_14_n_0 ),
        .I1(\leds_OBUF[9]_inst_i_15_n_0 ),
        .O(\leds_OBUF[9]_inst_i_6_n_0 ),
        .S(read_switches_IBUF[2]));
  MUXF7 \leds_OBUF[9]_inst_i_7 
       (.I0(\leds_OBUF[9]_inst_i_16_n_0 ),
        .I1(\leds_OBUF[9]_inst_i_17_n_0 ),
        .O(\leds_OBUF[9]_inst_i_7_n_0 ),
        .S(read_switches_IBUF[2]));
  LUT5 #(
    .INIT(32'hFFEFFFFF)) 
    \pc[31]_i_5 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[3]),
        .I3(Q[12]),
        .I4(Q[0]),
        .O(\pc_reg[0] ));
  LUT5 #(
    .INIT(32'h00000100)) 
    \register_array[0][31]_i_1 
       (.I0(wad[3]),
        .I1(wad[1]),
        .I2(wad[0]),
        .I3(RW),
        .I4(wad[2]),
        .O(\register_array[0][31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00002000)) 
    \register_array[10][31]_i_1 
       (.I0(wad[3]),
        .I1(wad[0]),
        .I2(wad[1]),
        .I3(RW),
        .I4(wad[2]),
        .O(\register_array[10][31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00008000)) 
    \register_array[11][31]_i_1 
       (.I0(wad[3]),
        .I1(wad[1]),
        .I2(wad[0]),
        .I3(RW),
        .I4(wad[2]),
        .O(\register_array[11][31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h02000000)) 
    \register_array[12][31]_i_1 
       (.I0(wad[3]),
        .I1(wad[1]),
        .I2(wad[0]),
        .I3(RW),
        .I4(wad[2]),
        .O(\register_array[12][31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h20000000)) 
    \register_array[13][31]_i_1 
       (.I0(wad[3]),
        .I1(wad[1]),
        .I2(wad[0]),
        .I3(RW),
        .I4(wad[2]),
        .O(\register_array[13][31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][0]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [0]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [0]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [0]),
        .O(wd[0]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][10]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [10]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [10]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [10]),
        .O(wd[10]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][11]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [11]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [11]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [11]),
        .O(wd[11]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][12]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [12]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [12]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [12]),
        .O(wd[12]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][13]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [13]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [13]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [13]),
        .O(wd[13]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][14]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [14]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [14]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [14]),
        .O(wd[14]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][15]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [15]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [15]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [15]),
        .O(wd[15]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][16]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [16]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [16]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [16]),
        .O(wd[16]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][17]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [17]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [17]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [17]),
        .O(wd[17]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][18]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [18]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [18]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [18]),
        .O(wd[18]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][19]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [19]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [19]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [19]),
        .O(wd[19]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][1]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [1]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [1]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [1]),
        .O(wd[1]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][20]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [20]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [20]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [20]),
        .O(wd[20]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][21]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [21]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [21]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [21]),
        .O(wd[21]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][22]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [22]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [22]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [22]),
        .O(wd[22]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][23]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [23]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [23]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [23]),
        .O(wd[23]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][24]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [24]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [24]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [24]),
        .O(wd[24]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][25]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [25]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [25]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [25]),
        .O(wd[25]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][26]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [26]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [26]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [26]),
        .O(wd[26]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][27]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [27]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [27]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [27]),
        .O(wd[27]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][28]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [28]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [28]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [28]),
        .O(wd[28]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][29]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [29]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [29]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [29]),
        .O(wd[29]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][2]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [2]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [2]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [2]),
        .O(wd[2]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][30]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [30]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [30]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [30]),
        .O(wd[30]));
  LUT5 #(
    .INIT(32'h20000000)) 
    \register_array[14][31]_i_1 
       (.I0(wad[3]),
        .I1(wad[0]),
        .I2(wad[1]),
        .I3(RW),
        .I4(wad[2]),
        .O(\register_array[14][31]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][31]_i_2 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [31]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [31]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [31]),
        .O(wd[31]));
  LUT4 #(
    .INIT(16'hF7BF)) 
    \register_array[14][31]_i_3 
       (.I0(out[1]),
        .I1(out[3]),
        .I2(out[2]),
        .I3(out[0]),
        .O(\register_array[14][31]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0800)) 
    \register_array[14][31]_i_4 
       (.I0(out[1]),
        .I1(out[3]),
        .I2(out[2]),
        .I3(out[0]),
        .O(\register_array[14][31]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0040)) 
    \register_array[14][31]_i_5 
       (.I0(out[0]),
        .I1(out[2]),
        .I2(out[3]),
        .I3(out[1]),
        .O(\register_array[14][31]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][3]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [3]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [3]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [3]),
        .O(wd[3]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][4]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [4]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [4]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [4]),
        .O(wd[4]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][5]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [5]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [5]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [5]),
        .O(wd[5]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][6]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [6]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [6]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [6]),
        .O(wd[6]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][7]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [7]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [7]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [7]),
        .O(wd[7]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][8]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [8]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [8]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [8]),
        .O(wd[8]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \register_array[14][9]_i_1 
       (.I0(\register_array[14][31]_i_3_n_0 ),
        .I1(\FSM_sequential_state_reg[0] [9]),
        .I2(\register_array[14][31]_i_4_n_0 ),
        .I3(\FSM_sequential_state_reg[0]_0 [9]),
        .I4(\register_array[14][31]_i_5_n_0 ),
        .I5(\pc_reg[31] [9]),
        .O(wd[9]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][0]_i_1 
       (.I0(wd[0]),
        .I1(RW),
        .I2(\pc_reg[31] [0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][10]_i_1 
       (.I0(wd[10]),
        .I1(RW),
        .I2(\pc_reg[31] [10]),
        .O(p_0_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][11]_i_1 
       (.I0(wd[11]),
        .I1(RW),
        .I2(\pc_reg[31] [11]),
        .O(p_0_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][12]_i_1 
       (.I0(wd[12]),
        .I1(RW),
        .I2(\pc_reg[31] [12]),
        .O(p_0_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][13]_i_1 
       (.I0(wd[13]),
        .I1(RW),
        .I2(\pc_reg[31] [13]),
        .O(p_0_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][14]_i_1 
       (.I0(wd[14]),
        .I1(RW),
        .I2(\pc_reg[31] [14]),
        .O(p_0_in[14]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][15]_i_1 
       (.I0(wd[15]),
        .I1(RW),
        .I2(\pc_reg[31] [15]),
        .O(p_0_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][16]_i_1 
       (.I0(wd[16]),
        .I1(RW),
        .I2(\pc_reg[31] [16]),
        .O(p_0_in[16]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][17]_i_1 
       (.I0(wd[17]),
        .I1(RW),
        .I2(\pc_reg[31] [17]),
        .O(p_0_in[17]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][18]_i_1 
       (.I0(wd[18]),
        .I1(RW),
        .I2(\pc_reg[31] [18]),
        .O(p_0_in[18]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][19]_i_1 
       (.I0(wd[19]),
        .I1(RW),
        .I2(\pc_reg[31] [19]),
        .O(p_0_in[19]));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][1]_i_1 
       (.I0(wd[1]),
        .I1(RW),
        .I2(\pc_reg[31] [1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][20]_i_1 
       (.I0(wd[20]),
        .I1(RW),
        .I2(\pc_reg[31] [20]),
        .O(p_0_in[20]));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][21]_i_1 
       (.I0(wd[21]),
        .I1(RW),
        .I2(\pc_reg[31] [21]),
        .O(p_0_in[21]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][22]_i_1 
       (.I0(wd[22]),
        .I1(RW),
        .I2(\pc_reg[31] [22]),
        .O(p_0_in[22]));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][23]_i_1 
       (.I0(wd[23]),
        .I1(RW),
        .I2(\pc_reg[31] [23]),
        .O(p_0_in[23]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][24]_i_1 
       (.I0(wd[24]),
        .I1(RW),
        .I2(\pc_reg[31] [24]),
        .O(p_0_in[24]));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][25]_i_1 
       (.I0(wd[25]),
        .I1(RW),
        .I2(\pc_reg[31] [25]),
        .O(p_0_in[25]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][26]_i_1 
       (.I0(wd[26]),
        .I1(RW),
        .I2(\pc_reg[31] [26]),
        .O(p_0_in[26]));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][27]_i_1 
       (.I0(wd[27]),
        .I1(RW),
        .I2(\pc_reg[31] [27]),
        .O(p_0_in[27]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][28]_i_1 
       (.I0(wd[28]),
        .I1(RW),
        .I2(\pc_reg[31] [28]),
        .O(p_0_in[28]));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][29]_i_1 
       (.I0(wd[29]),
        .I1(RW),
        .I2(\pc_reg[31] [29]),
        .O(p_0_in[29]));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][2]_i_1 
       (.I0(wd[2]),
        .I1(RW),
        .I2(\pc_reg[31] [2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][30]_i_1 
       (.I0(wd[30]),
        .I1(RW),
        .I2(\pc_reg[31] [30]),
        .O(p_0_in[30]));
  LUT6 #(
    .INIT(64'h000000008000FFFF)) 
    \register_array[15][31]_i_1 
       (.I0(wad[3]),
        .I1(wad[0]),
        .I2(wad[1]),
        .I3(wad[2]),
        .I4(RW),
        .I5(AR),
        .O(\register_array_reg[15]0 ));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][31]_i_2 
       (.I0(wd[31]),
        .I1(RW),
        .I2(\pc_reg[31] [31]),
        .O(p_0_in[31]));
  LUT4 #(
    .INIT(16'hFAEE)) 
    \register_array[15][31]_i_3 
       (.I0(Mult_wad),
        .I1(Q[11]),
        .I2(Q[7]),
        .I3(\pc_reg[0] ),
        .O(wad[3]));
  LUT4 #(
    .INIT(16'h00B8)) 
    \register_array[15][31]_i_4 
       (.I0(Q[4]),
        .I1(\pc_reg[0] ),
        .I2(Q[8]),
        .I3(Mult_wad),
        .O(wad[0]));
  LUT4 #(
    .INIT(16'hFAEE)) 
    \register_array[15][31]_i_5 
       (.I0(Mult_wad),
        .I1(Q[9]),
        .I2(Q[5]),
        .I3(\pc_reg[0] ),
        .O(wad[1]));
  LUT4 #(
    .INIT(16'hFAEE)) 
    \register_array[15][31]_i_6 
       (.I0(Mult_wad),
        .I1(Q[10]),
        .I2(Q[6]),
        .I3(\pc_reg[0] ),
        .O(wad[2]));
  LUT4 #(
    .INIT(16'hDBFF)) 
    \register_array[15][31]_i_7 
       (.I0(out[0]),
        .I1(out[2]),
        .I2(out[3]),
        .I3(out[1]),
        .O(Mult_wad));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][3]_i_1 
       (.I0(wd[3]),
        .I1(RW),
        .I2(\pc_reg[31] [3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][4]_i_1 
       (.I0(wd[4]),
        .I1(RW),
        .I2(\pc_reg[31] [4]),
        .O(p_0_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][5]_i_1 
       (.I0(wd[5]),
        .I1(RW),
        .I2(\pc_reg[31] [5]),
        .O(p_0_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][6]_i_1 
       (.I0(wd[6]),
        .I1(RW),
        .I2(\pc_reg[31] [6]),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][7]_i_1 
       (.I0(wd[7]),
        .I1(RW),
        .I2(\pc_reg[31] [7]),
        .O(p_0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][8]_i_1 
       (.I0(wd[8]),
        .I1(RW),
        .I2(\pc_reg[31] [8]),
        .O(p_0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    \register_array[15][9]_i_1 
       (.I0(wd[9]),
        .I1(RW),
        .I2(\pc_reg[31] [9]),
        .O(p_0_in[9]));
  LUT5 #(
    .INIT(32'h00001000)) 
    \register_array[1][31]_i_1 
       (.I0(wad[3]),
        .I1(wad[1]),
        .I2(wad[0]),
        .I3(RW),
        .I4(wad[2]),
        .O(\register_array[1][31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00001000)) 
    \register_array[2][31]_i_1 
       (.I0(wad[3]),
        .I1(wad[0]),
        .I2(wad[1]),
        .I3(RW),
        .I4(wad[2]),
        .O(\register_array[2][31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00004000)) 
    \register_array[3][31]_i_1 
       (.I0(wad[3]),
        .I1(wad[1]),
        .I2(wad[0]),
        .I3(RW),
        .I4(wad[2]),
        .O(\register_array[3][31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h01000000)) 
    \register_array[4][31]_i_1 
       (.I0(wad[3]),
        .I1(wad[1]),
        .I2(wad[0]),
        .I3(RW),
        .I4(wad[2]),
        .O(\register_array[4][31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \register_array[5][31]_i_1 
       (.I0(wad[3]),
        .I1(wad[1]),
        .I2(wad[0]),
        .I3(RW),
        .I4(wad[2]),
        .O(\register_array[5][31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \register_array[6][31]_i_1 
       (.I0(wad[3]),
        .I1(wad[0]),
        .I2(wad[1]),
        .I3(RW),
        .I4(wad[2]),
        .O(\register_array[6][31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h40000000)) 
    \register_array[7][31]_i_1 
       (.I0(wad[3]),
        .I1(wad[1]),
        .I2(wad[0]),
        .I3(RW),
        .I4(wad[2]),
        .O(\register_array[7][31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00000200)) 
    \register_array[8][31]_i_1 
       (.I0(wad[3]),
        .I1(wad[1]),
        .I2(wad[0]),
        .I3(RW),
        .I4(wad[2]),
        .O(\register_array[8][31]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h00002000)) 
    \register_array[9][31]_i_1 
       (.I0(wad[3]),
        .I1(wad[1]),
        .I2(wad[0]),
        .I3(RW),
        .I4(wad[2]),
        .O(\register_array[9][31]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][0] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[0]),
        .Q(\register_array_reg[0]_15 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][10] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[10]),
        .Q(\register_array_reg[0]_15 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][11] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[11]),
        .Q(\register_array_reg[0]_15 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][12] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[12]),
        .Q(\register_array_reg[0]_15 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][13] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[13]),
        .Q(\register_array_reg[0]_15 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][14] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[14]),
        .Q(\register_array_reg[0]_15 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][15] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[15]),
        .Q(\register_array_reg[0]_15 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][16] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[16]),
        .Q(\register_array_reg[0]_15 [16]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][17] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[17]),
        .Q(\register_array_reg[0]_15 [17]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][18] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[18]),
        .Q(\register_array_reg[0]_15 [18]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][19] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[19]),
        .Q(\register_array_reg[0]_15 [19]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][1] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[1]),
        .Q(\register_array_reg[0]_15 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][20] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[20]),
        .Q(\register_array_reg[0]_15 [20]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][21] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[21]),
        .Q(\register_array_reg[0]_15 [21]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][22] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[22]),
        .Q(\register_array_reg[0]_15 [22]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][23] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[23]),
        .Q(\register_array_reg[0]_15 [23]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][24] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[24]),
        .Q(\register_array_reg[0]_15 [24]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][25] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[25]),
        .Q(\register_array_reg[0]_15 [25]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][26] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[26]),
        .Q(\register_array_reg[0]_15 [26]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][27] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[27]),
        .Q(\register_array_reg[0]_15 [27]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][28] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[28]),
        .Q(\register_array_reg[0]_15 [28]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][29] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[29]),
        .Q(\register_array_reg[0]_15 [29]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][2] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[2]),
        .Q(\register_array_reg[0]_15 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][30] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[30]),
        .Q(\register_array_reg[0]_15 [30]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][31] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[31]),
        .Q(\register_array_reg[0]_15 [31]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][3] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[3]),
        .Q(\register_array_reg[0]_15 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][4] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[4]),
        .Q(\register_array_reg[0]_15 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][5] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[5]),
        .Q(\register_array_reg[0]_15 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][6] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[6]),
        .Q(\register_array_reg[0]_15 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][7] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[7]),
        .Q(\register_array_reg[0]_15 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][8] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[8]),
        .Q(\register_array_reg[0]_15 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[0][9] 
       (.C(CLK),
        .CE(\register_array[0][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[9]),
        .Q(\register_array_reg[0]_15 [9]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][0] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[0]),
        .Q(\register_array_reg[10]_5 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][10] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[10]),
        .Q(\register_array_reg[10]_5 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][11] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[11]),
        .Q(\register_array_reg[10]_5 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][12] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[12]),
        .Q(\register_array_reg[10]_5 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][13] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[13]),
        .Q(\register_array_reg[10]_5 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][14] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[14]),
        .Q(\register_array_reg[10]_5 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][15] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[15]),
        .Q(\register_array_reg[10]_5 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][16] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[16]),
        .Q(\register_array_reg[10]_5 [16]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][17] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[17]),
        .Q(\register_array_reg[10]_5 [17]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][18] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[18]),
        .Q(\register_array_reg[10]_5 [18]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][19] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[19]),
        .Q(\register_array_reg[10]_5 [19]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][1] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[1]),
        .Q(\register_array_reg[10]_5 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][20] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[20]),
        .Q(\register_array_reg[10]_5 [20]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][21] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[21]),
        .Q(\register_array_reg[10]_5 [21]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][22] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[22]),
        .Q(\register_array_reg[10]_5 [22]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][23] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[23]),
        .Q(\register_array_reg[10]_5 [23]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][24] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[24]),
        .Q(\register_array_reg[10]_5 [24]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][25] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[25]),
        .Q(\register_array_reg[10]_5 [25]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][26] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[26]),
        .Q(\register_array_reg[10]_5 [26]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][27] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[27]),
        .Q(\register_array_reg[10]_5 [27]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][28] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[28]),
        .Q(\register_array_reg[10]_5 [28]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][29] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[29]),
        .Q(\register_array_reg[10]_5 [29]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][2] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[2]),
        .Q(\register_array_reg[10]_5 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][30] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[30]),
        .Q(\register_array_reg[10]_5 [30]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][31] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[31]),
        .Q(\register_array_reg[10]_5 [31]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][3] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[3]),
        .Q(\register_array_reg[10]_5 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][4] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[4]),
        .Q(\register_array_reg[10]_5 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][5] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[5]),
        .Q(\register_array_reg[10]_5 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][6] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[6]),
        .Q(\register_array_reg[10]_5 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][7] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[7]),
        .Q(\register_array_reg[10]_5 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][8] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[8]),
        .Q(\register_array_reg[10]_5 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[10][9] 
       (.C(CLK),
        .CE(\register_array[10][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[9]),
        .Q(\register_array_reg[10]_5 [9]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][0] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[0]),
        .Q(\register_array_reg[11]_4 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][10] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[10]),
        .Q(\register_array_reg[11]_4 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][11] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[11]),
        .Q(\register_array_reg[11]_4 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][12] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[12]),
        .Q(\register_array_reg[11]_4 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][13] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[13]),
        .Q(\register_array_reg[11]_4 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][14] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[14]),
        .Q(\register_array_reg[11]_4 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][15] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[15]),
        .Q(\register_array_reg[11]_4 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][16] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[16]),
        .Q(\register_array_reg[11]_4 [16]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][17] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[17]),
        .Q(\register_array_reg[11]_4 [17]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][18] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[18]),
        .Q(\register_array_reg[11]_4 [18]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][19] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[19]),
        .Q(\register_array_reg[11]_4 [19]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][1] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[1]),
        .Q(\register_array_reg[11]_4 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][20] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[20]),
        .Q(\register_array_reg[11]_4 [20]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][21] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[21]),
        .Q(\register_array_reg[11]_4 [21]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][22] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[22]),
        .Q(\register_array_reg[11]_4 [22]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][23] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[23]),
        .Q(\register_array_reg[11]_4 [23]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][24] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[24]),
        .Q(\register_array_reg[11]_4 [24]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][25] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[25]),
        .Q(\register_array_reg[11]_4 [25]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][26] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[26]),
        .Q(\register_array_reg[11]_4 [26]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][27] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[27]),
        .Q(\register_array_reg[11]_4 [27]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][28] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[28]),
        .Q(\register_array_reg[11]_4 [28]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][29] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[29]),
        .Q(\register_array_reg[11]_4 [29]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][2] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[2]),
        .Q(\register_array_reg[11]_4 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][30] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[30]),
        .Q(\register_array_reg[11]_4 [30]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][31] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[31]),
        .Q(\register_array_reg[11]_4 [31]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][3] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[3]),
        .Q(\register_array_reg[11]_4 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][4] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[4]),
        .Q(\register_array_reg[11]_4 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][5] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[5]),
        .Q(\register_array_reg[11]_4 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][6] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[6]),
        .Q(\register_array_reg[11]_4 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][7] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[7]),
        .Q(\register_array_reg[11]_4 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][8] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[8]),
        .Q(\register_array_reg[11]_4 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[11][9] 
       (.C(CLK),
        .CE(\register_array[11][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[9]),
        .Q(\register_array_reg[11]_4 [9]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][0] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[0]),
        .Q(\register_array_reg[12]_3 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][10] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[10]),
        .Q(\register_array_reg[12]_3 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][11] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[11]),
        .Q(\register_array_reg[12]_3 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][12] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[12]),
        .Q(\register_array_reg[12]_3 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][13] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[13]),
        .Q(\register_array_reg[12]_3 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][14] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[14]),
        .Q(\register_array_reg[12]_3 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][15] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[15]),
        .Q(\register_array_reg[12]_3 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][16] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[16]),
        .Q(\register_array_reg[12]_3 [16]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][17] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[17]),
        .Q(\register_array_reg[12]_3 [17]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][18] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[18]),
        .Q(\register_array_reg[12]_3 [18]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][19] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[19]),
        .Q(\register_array_reg[12]_3 [19]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][1] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[1]),
        .Q(\register_array_reg[12]_3 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][20] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[20]),
        .Q(\register_array_reg[12]_3 [20]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][21] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[21]),
        .Q(\register_array_reg[12]_3 [21]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][22] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[22]),
        .Q(\register_array_reg[12]_3 [22]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][23] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[23]),
        .Q(\register_array_reg[12]_3 [23]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][24] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[24]),
        .Q(\register_array_reg[12]_3 [24]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][25] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[25]),
        .Q(\register_array_reg[12]_3 [25]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][26] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[26]),
        .Q(\register_array_reg[12]_3 [26]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][27] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[27]),
        .Q(\register_array_reg[12]_3 [27]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][28] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[28]),
        .Q(\register_array_reg[12]_3 [28]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][29] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[29]),
        .Q(\register_array_reg[12]_3 [29]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][2] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[2]),
        .Q(\register_array_reg[12]_3 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][30] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[30]),
        .Q(\register_array_reg[12]_3 [30]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][31] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[31]),
        .Q(\register_array_reg[12]_3 [31]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][3] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[3]),
        .Q(\register_array_reg[12]_3 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][4] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[4]),
        .Q(\register_array_reg[12]_3 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][5] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[5]),
        .Q(\register_array_reg[12]_3 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][6] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[6]),
        .Q(\register_array_reg[12]_3 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][7] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[7]),
        .Q(\register_array_reg[12]_3 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][8] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[8]),
        .Q(\register_array_reg[12]_3 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[12][9] 
       (.C(CLK),
        .CE(\register_array[12][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[9]),
        .Q(\register_array_reg[12]_3 [9]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][0] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[0]),
        .Q(\register_array_reg[13]_2 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][10] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[10]),
        .Q(\register_array_reg[13]_2 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][11] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[11]),
        .Q(\register_array_reg[13]_2 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][12] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[12]),
        .Q(\register_array_reg[13]_2 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][13] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[13]),
        .Q(\register_array_reg[13]_2 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][14] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[14]),
        .Q(\register_array_reg[13]_2 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][15] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[15]),
        .Q(\register_array_reg[13]_2 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][16] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[16]),
        .Q(\register_array_reg[13]_2 [16]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][17] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[17]),
        .Q(\register_array_reg[13]_2 [17]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][18] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[18]),
        .Q(\register_array_reg[13]_2 [18]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][19] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[19]),
        .Q(\register_array_reg[13]_2 [19]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][1] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[1]),
        .Q(\register_array_reg[13]_2 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][20] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[20]),
        .Q(\register_array_reg[13]_2 [20]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][21] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[21]),
        .Q(\register_array_reg[13]_2 [21]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][22] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[22]),
        .Q(\register_array_reg[13]_2 [22]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][23] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[23]),
        .Q(\register_array_reg[13]_2 [23]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][24] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[24]),
        .Q(\register_array_reg[13]_2 [24]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][25] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[25]),
        .Q(\register_array_reg[13]_2 [25]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][26] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[26]),
        .Q(\register_array_reg[13]_2 [26]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][27] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[27]),
        .Q(\register_array_reg[13]_2 [27]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][28] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[28]),
        .Q(\register_array_reg[13]_2 [28]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][29] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[29]),
        .Q(\register_array_reg[13]_2 [29]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][2] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[2]),
        .Q(\register_array_reg[13]_2 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][30] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[30]),
        .Q(\register_array_reg[13]_2 [30]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][31] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[31]),
        .Q(\register_array_reg[13]_2 [31]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][3] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[3]),
        .Q(\register_array_reg[13]_2 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][4] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[4]),
        .Q(\register_array_reg[13]_2 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][5] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[5]),
        .Q(\register_array_reg[13]_2 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][6] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[6]),
        .Q(\register_array_reg[13]_2 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][7] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[7]),
        .Q(\register_array_reg[13]_2 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][8] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[8]),
        .Q(\register_array_reg[13]_2 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[13][9] 
       (.C(CLK),
        .CE(\register_array[13][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[9]),
        .Q(\register_array_reg[13]_2 [9]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][0] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[0]),
        .Q(\register_array_reg[14]_1 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][10] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[10]),
        .Q(\register_array_reg[14]_1 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][11] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[11]),
        .Q(\register_array_reg[14]_1 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][12] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[12]),
        .Q(\register_array_reg[14]_1 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][13] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[13]),
        .Q(\register_array_reg[14]_1 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][14] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[14]),
        .Q(\register_array_reg[14]_1 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][15] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[15]),
        .Q(\register_array_reg[14]_1 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][16] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[16]),
        .Q(\register_array_reg[14]_1 [16]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][17] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[17]),
        .Q(\register_array_reg[14]_1 [17]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][18] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[18]),
        .Q(\register_array_reg[14]_1 [18]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][19] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[19]),
        .Q(\register_array_reg[14]_1 [19]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][1] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[1]),
        .Q(\register_array_reg[14]_1 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][20] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[20]),
        .Q(\register_array_reg[14]_1 [20]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][21] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[21]),
        .Q(\register_array_reg[14]_1 [21]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][22] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[22]),
        .Q(\register_array_reg[14]_1 [22]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][23] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[23]),
        .Q(\register_array_reg[14]_1 [23]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][24] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[24]),
        .Q(\register_array_reg[14]_1 [24]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][25] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[25]),
        .Q(\register_array_reg[14]_1 [25]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][26] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[26]),
        .Q(\register_array_reg[14]_1 [26]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][27] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[27]),
        .Q(\register_array_reg[14]_1 [27]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][28] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[28]),
        .Q(\register_array_reg[14]_1 [28]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][29] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[29]),
        .Q(\register_array_reg[14]_1 [29]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][2] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[2]),
        .Q(\register_array_reg[14]_1 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][30] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[30]),
        .Q(\register_array_reg[14]_1 [30]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][31] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[31]),
        .Q(\register_array_reg[14]_1 [31]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][3] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[3]),
        .Q(\register_array_reg[14]_1 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][4] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[4]),
        .Q(\register_array_reg[14]_1 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][5] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[5]),
        .Q(\register_array_reg[14]_1 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][6] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[6]),
        .Q(\register_array_reg[14]_1 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][7] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[7]),
        .Q(\register_array_reg[14]_1 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][8] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[8]),
        .Q(\register_array_reg[14]_1 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[14][9] 
       (.C(CLK),
        .CE(\register_array[14][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[9]),
        .Q(\register_array_reg[14]_1 [9]));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][0] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[0]),
        .Q(\register_array_reg[15]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][10] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[10]),
        .Q(\register_array_reg[15]_0 [10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][11] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[11]),
        .Q(\register_array_reg[15]_0 [11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][12] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[12]),
        .Q(\register_array_reg[15]_0 [12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][13] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[13]),
        .Q(\register_array_reg[15]_0 [13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][14] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[14]),
        .Q(\register_array_reg[15]_0 [14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][15] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[15]),
        .Q(\register_array_reg[15]_0 [15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][16] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[16]),
        .Q(\register_array_reg[15]_0 [16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][17] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[17]),
        .Q(\register_array_reg[15]_0 [17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][18] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[18]),
        .Q(\register_array_reg[15]_0 [18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][19] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[19]),
        .Q(\register_array_reg[15]_0 [19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][1] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[1]),
        .Q(\register_array_reg[15]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][20] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[20]),
        .Q(\register_array_reg[15]_0 [20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][21] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[21]),
        .Q(\register_array_reg[15]_0 [21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][22] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[22]),
        .Q(\register_array_reg[15]_0 [22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][23] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[23]),
        .Q(\register_array_reg[15]_0 [23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][24] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[24]),
        .Q(\register_array_reg[15]_0 [24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][25] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[25]),
        .Q(\register_array_reg[15]_0 [25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][26] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[26]),
        .Q(\register_array_reg[15]_0 [26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][27] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[27]),
        .Q(\register_array_reg[15]_0 [27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][28] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[28]),
        .Q(\register_array_reg[15]_0 [28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][29] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[29]),
        .Q(\register_array_reg[15]_0 [29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][2] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[2]),
        .Q(\register_array_reg[15]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][30] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[30]),
        .Q(\register_array_reg[15]_0 [30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][31] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[31]),
        .Q(\register_array_reg[15]_0 [31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][3] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[3]),
        .Q(\register_array_reg[15]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][4] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[4]),
        .Q(\register_array_reg[15]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][5] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[5]),
        .Q(\register_array_reg[15]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][6] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[6]),
        .Q(\register_array_reg[15]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][7] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[7]),
        .Q(\register_array_reg[15]_0 [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][8] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[8]),
        .Q(\register_array_reg[15]_0 [8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \register_array_reg[15][9] 
       (.C(CLK),
        .CE(\register_array_reg[15]0 ),
        .D(p_0_in[9]),
        .Q(\register_array_reg[15]_0 [9]),
        .R(1'b0));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][0] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[0]),
        .Q(\register_array_reg[1]_14 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][10] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[10]),
        .Q(\register_array_reg[1]_14 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][11] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[11]),
        .Q(\register_array_reg[1]_14 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][12] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[12]),
        .Q(\register_array_reg[1]_14 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][13] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[13]),
        .Q(\register_array_reg[1]_14 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][14] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[14]),
        .Q(\register_array_reg[1]_14 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][15] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[15]),
        .Q(\register_array_reg[1]_14 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][16] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[16]),
        .Q(\register_array_reg[1]_14 [16]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][17] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[17]),
        .Q(\register_array_reg[1]_14 [17]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][18] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[18]),
        .Q(\register_array_reg[1]_14 [18]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][19] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[19]),
        .Q(\register_array_reg[1]_14 [19]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][1] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[1]),
        .Q(\register_array_reg[1]_14 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][20] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[20]),
        .Q(\register_array_reg[1]_14 [20]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][21] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[21]),
        .Q(\register_array_reg[1]_14 [21]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][22] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[22]),
        .Q(\register_array_reg[1]_14 [22]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][23] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[23]),
        .Q(\register_array_reg[1]_14 [23]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][24] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[24]),
        .Q(\register_array_reg[1]_14 [24]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][25] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[25]),
        .Q(\register_array_reg[1]_14 [25]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][26] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[26]),
        .Q(\register_array_reg[1]_14 [26]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][27] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[27]),
        .Q(\register_array_reg[1]_14 [27]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][28] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[28]),
        .Q(\register_array_reg[1]_14 [28]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][29] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[29]),
        .Q(\register_array_reg[1]_14 [29]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][2] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[2]),
        .Q(\register_array_reg[1]_14 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][30] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[30]),
        .Q(\register_array_reg[1]_14 [30]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][31] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[31]),
        .Q(\register_array_reg[1]_14 [31]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][3] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[3]),
        .Q(\register_array_reg[1]_14 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][4] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[4]),
        .Q(\register_array_reg[1]_14 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][5] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[5]),
        .Q(\register_array_reg[1]_14 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][6] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[6]),
        .Q(\register_array_reg[1]_14 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][7] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[7]),
        .Q(\register_array_reg[1]_14 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][8] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[8]),
        .Q(\register_array_reg[1]_14 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[1][9] 
       (.C(CLK),
        .CE(\register_array[1][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[9]),
        .Q(\register_array_reg[1]_14 [9]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][0] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[0]),
        .Q(\register_array_reg[2]_13 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][10] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[10]),
        .Q(\register_array_reg[2]_13 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][11] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[11]),
        .Q(\register_array_reg[2]_13 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][12] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[12]),
        .Q(\register_array_reg[2]_13 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][13] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[13]),
        .Q(\register_array_reg[2]_13 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][14] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[14]),
        .Q(\register_array_reg[2]_13 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][15] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[15]),
        .Q(\register_array_reg[2]_13 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][16] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[16]),
        .Q(\register_array_reg[2]_13 [16]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][17] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[17]),
        .Q(\register_array_reg[2]_13 [17]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][18] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[18]),
        .Q(\register_array_reg[2]_13 [18]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][19] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[19]),
        .Q(\register_array_reg[2]_13 [19]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][1] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[1]),
        .Q(\register_array_reg[2]_13 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][20] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[20]),
        .Q(\register_array_reg[2]_13 [20]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][21] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[21]),
        .Q(\register_array_reg[2]_13 [21]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][22] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[22]),
        .Q(\register_array_reg[2]_13 [22]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][23] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[23]),
        .Q(\register_array_reg[2]_13 [23]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][24] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[24]),
        .Q(\register_array_reg[2]_13 [24]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][25] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[25]),
        .Q(\register_array_reg[2]_13 [25]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][26] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[26]),
        .Q(\register_array_reg[2]_13 [26]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][27] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[27]),
        .Q(\register_array_reg[2]_13 [27]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][28] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[28]),
        .Q(\register_array_reg[2]_13 [28]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][29] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[29]),
        .Q(\register_array_reg[2]_13 [29]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][2] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[2]),
        .Q(\register_array_reg[2]_13 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][30] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[30]),
        .Q(\register_array_reg[2]_13 [30]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][31] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[31]),
        .Q(\register_array_reg[2]_13 [31]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][3] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[3]),
        .Q(\register_array_reg[2]_13 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][4] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[4]),
        .Q(\register_array_reg[2]_13 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][5] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[5]),
        .Q(\register_array_reg[2]_13 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][6] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[6]),
        .Q(\register_array_reg[2]_13 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][7] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[7]),
        .Q(\register_array_reg[2]_13 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][8] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[8]),
        .Q(\register_array_reg[2]_13 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[2][9] 
       (.C(CLK),
        .CE(\register_array[2][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[9]),
        .Q(\register_array_reg[2]_13 [9]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][0] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[0]),
        .Q(\register_array_reg[3]_12 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][10] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[10]),
        .Q(\register_array_reg[3]_12 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][11] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[11]),
        .Q(\register_array_reg[3]_12 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][12] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[12]),
        .Q(\register_array_reg[3]_12 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][13] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[13]),
        .Q(\register_array_reg[3]_12 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][14] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[14]),
        .Q(\register_array_reg[3]_12 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][15] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[15]),
        .Q(\register_array_reg[3]_12 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][16] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[16]),
        .Q(\register_array_reg[3]_12 [16]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][17] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[17]),
        .Q(\register_array_reg[3]_12 [17]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][18] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[18]),
        .Q(\register_array_reg[3]_12 [18]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][19] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[19]),
        .Q(\register_array_reg[3]_12 [19]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][1] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[1]),
        .Q(\register_array_reg[3]_12 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][20] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[20]),
        .Q(\register_array_reg[3]_12 [20]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][21] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[21]),
        .Q(\register_array_reg[3]_12 [21]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][22] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[22]),
        .Q(\register_array_reg[3]_12 [22]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][23] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[23]),
        .Q(\register_array_reg[3]_12 [23]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][24] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[24]),
        .Q(\register_array_reg[3]_12 [24]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][25] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[25]),
        .Q(\register_array_reg[3]_12 [25]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][26] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[26]),
        .Q(\register_array_reg[3]_12 [26]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][27] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[27]),
        .Q(\register_array_reg[3]_12 [27]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][28] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[28]),
        .Q(\register_array_reg[3]_12 [28]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][29] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[29]),
        .Q(\register_array_reg[3]_12 [29]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][2] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[2]),
        .Q(\register_array_reg[3]_12 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][30] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[30]),
        .Q(\register_array_reg[3]_12 [30]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][31] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[31]),
        .Q(\register_array_reg[3]_12 [31]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][3] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[3]),
        .Q(\register_array_reg[3]_12 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][4] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[4]),
        .Q(\register_array_reg[3]_12 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][5] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[5]),
        .Q(\register_array_reg[3]_12 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][6] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[6]),
        .Q(\register_array_reg[3]_12 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][7] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[7]),
        .Q(\register_array_reg[3]_12 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][8] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[8]),
        .Q(\register_array_reg[3]_12 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[3][9] 
       (.C(CLK),
        .CE(\register_array[3][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[9]),
        .Q(\register_array_reg[3]_12 [9]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][0] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[0]),
        .Q(\register_array_reg[4]_11 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][10] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[10]),
        .Q(\register_array_reg[4]_11 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][11] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[11]),
        .Q(\register_array_reg[4]_11 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][12] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[12]),
        .Q(\register_array_reg[4]_11 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][13] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[13]),
        .Q(\register_array_reg[4]_11 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][14] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[14]),
        .Q(\register_array_reg[4]_11 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][15] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[15]),
        .Q(\register_array_reg[4]_11 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][16] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[16]),
        .Q(\register_array_reg[4]_11 [16]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][17] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[17]),
        .Q(\register_array_reg[4]_11 [17]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][18] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[18]),
        .Q(\register_array_reg[4]_11 [18]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][19] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[19]),
        .Q(\register_array_reg[4]_11 [19]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][1] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[1]),
        .Q(\register_array_reg[4]_11 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][20] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[20]),
        .Q(\register_array_reg[4]_11 [20]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][21] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[21]),
        .Q(\register_array_reg[4]_11 [21]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][22] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[22]),
        .Q(\register_array_reg[4]_11 [22]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][23] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[23]),
        .Q(\register_array_reg[4]_11 [23]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][24] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[24]),
        .Q(\register_array_reg[4]_11 [24]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][25] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[25]),
        .Q(\register_array_reg[4]_11 [25]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][26] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[26]),
        .Q(\register_array_reg[4]_11 [26]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][27] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[27]),
        .Q(\register_array_reg[4]_11 [27]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][28] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[28]),
        .Q(\register_array_reg[4]_11 [28]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][29] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[29]),
        .Q(\register_array_reg[4]_11 [29]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][2] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[2]),
        .Q(\register_array_reg[4]_11 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][30] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[30]),
        .Q(\register_array_reg[4]_11 [30]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][31] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[31]),
        .Q(\register_array_reg[4]_11 [31]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][3] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[3]),
        .Q(\register_array_reg[4]_11 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][4] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[4]),
        .Q(\register_array_reg[4]_11 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][5] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[5]),
        .Q(\register_array_reg[4]_11 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][6] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[6]),
        .Q(\register_array_reg[4]_11 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][7] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[7]),
        .Q(\register_array_reg[4]_11 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][8] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[8]),
        .Q(\register_array_reg[4]_11 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[4][9] 
       (.C(CLK),
        .CE(\register_array[4][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[9]),
        .Q(\register_array_reg[4]_11 [9]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][0] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[0]),
        .Q(\register_array_reg[5]_10 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][10] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[10]),
        .Q(\register_array_reg[5]_10 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][11] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[11]),
        .Q(\register_array_reg[5]_10 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][12] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[12]),
        .Q(\register_array_reg[5]_10 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][13] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[13]),
        .Q(\register_array_reg[5]_10 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][14] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[14]),
        .Q(\register_array_reg[5]_10 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][15] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[15]),
        .Q(\register_array_reg[5]_10 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][16] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[16]),
        .Q(\register_array_reg[5]_10 [16]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][17] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[17]),
        .Q(\register_array_reg[5]_10 [17]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][18] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[18]),
        .Q(\register_array_reg[5]_10 [18]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][19] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[19]),
        .Q(\register_array_reg[5]_10 [19]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][1] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[1]),
        .Q(\register_array_reg[5]_10 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][20] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[20]),
        .Q(\register_array_reg[5]_10 [20]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][21] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[21]),
        .Q(\register_array_reg[5]_10 [21]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][22] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[22]),
        .Q(\register_array_reg[5]_10 [22]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][23] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[23]),
        .Q(\register_array_reg[5]_10 [23]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][24] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[24]),
        .Q(\register_array_reg[5]_10 [24]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][25] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[25]),
        .Q(\register_array_reg[5]_10 [25]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][26] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[26]),
        .Q(\register_array_reg[5]_10 [26]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][27] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[27]),
        .Q(\register_array_reg[5]_10 [27]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][28] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[28]),
        .Q(\register_array_reg[5]_10 [28]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][29] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[29]),
        .Q(\register_array_reg[5]_10 [29]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][2] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[2]),
        .Q(\register_array_reg[5]_10 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][30] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[30]),
        .Q(\register_array_reg[5]_10 [30]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][31] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[31]),
        .Q(\register_array_reg[5]_10 [31]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][3] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[3]),
        .Q(\register_array_reg[5]_10 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][4] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[4]),
        .Q(\register_array_reg[5]_10 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][5] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[5]),
        .Q(\register_array_reg[5]_10 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][6] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[6]),
        .Q(\register_array_reg[5]_10 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][7] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[7]),
        .Q(\register_array_reg[5]_10 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][8] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[8]),
        .Q(\register_array_reg[5]_10 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[5][9] 
       (.C(CLK),
        .CE(\register_array[5][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[9]),
        .Q(\register_array_reg[5]_10 [9]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][0] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[0]),
        .Q(\register_array_reg[6]_9 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][10] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[10]),
        .Q(\register_array_reg[6]_9 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][11] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[11]),
        .Q(\register_array_reg[6]_9 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][12] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[12]),
        .Q(\register_array_reg[6]_9 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][13] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[13]),
        .Q(\register_array_reg[6]_9 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][14] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[14]),
        .Q(\register_array_reg[6]_9 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][15] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[15]),
        .Q(\register_array_reg[6]_9 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][16] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[16]),
        .Q(\register_array_reg[6]_9 [16]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][17] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[17]),
        .Q(\register_array_reg[6]_9 [17]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][18] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[18]),
        .Q(\register_array_reg[6]_9 [18]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][19] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[19]),
        .Q(\register_array_reg[6]_9 [19]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][1] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[1]),
        .Q(\register_array_reg[6]_9 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][20] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[20]),
        .Q(\register_array_reg[6]_9 [20]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][21] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[21]),
        .Q(\register_array_reg[6]_9 [21]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][22] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[22]),
        .Q(\register_array_reg[6]_9 [22]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][23] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[23]),
        .Q(\register_array_reg[6]_9 [23]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][24] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[24]),
        .Q(\register_array_reg[6]_9 [24]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][25] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[25]),
        .Q(\register_array_reg[6]_9 [25]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][26] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[26]),
        .Q(\register_array_reg[6]_9 [26]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][27] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[27]),
        .Q(\register_array_reg[6]_9 [27]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][28] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[28]),
        .Q(\register_array_reg[6]_9 [28]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][29] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[29]),
        .Q(\register_array_reg[6]_9 [29]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][2] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[2]),
        .Q(\register_array_reg[6]_9 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][30] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[30]),
        .Q(\register_array_reg[6]_9 [30]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][31] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[31]),
        .Q(\register_array_reg[6]_9 [31]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][3] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[3]),
        .Q(\register_array_reg[6]_9 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][4] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[4]),
        .Q(\register_array_reg[6]_9 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][5] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[5]),
        .Q(\register_array_reg[6]_9 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][6] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[6]),
        .Q(\register_array_reg[6]_9 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][7] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[7]),
        .Q(\register_array_reg[6]_9 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][8] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[8]),
        .Q(\register_array_reg[6]_9 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[6][9] 
       (.C(CLK),
        .CE(\register_array[6][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[9]),
        .Q(\register_array_reg[6]_9 [9]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][0] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[0]),
        .Q(\register_array_reg[7]_8 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][10] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[10]),
        .Q(\register_array_reg[7]_8 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][11] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[11]),
        .Q(\register_array_reg[7]_8 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][12] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[12]),
        .Q(\register_array_reg[7]_8 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][13] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[13]),
        .Q(\register_array_reg[7]_8 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][14] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[14]),
        .Q(\register_array_reg[7]_8 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][15] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[15]),
        .Q(\register_array_reg[7]_8 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][16] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[16]),
        .Q(\register_array_reg[7]_8 [16]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][17] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[17]),
        .Q(\register_array_reg[7]_8 [17]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][18] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[18]),
        .Q(\register_array_reg[7]_8 [18]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][19] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[19]),
        .Q(\register_array_reg[7]_8 [19]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][1] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[1]),
        .Q(\register_array_reg[7]_8 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][20] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[20]),
        .Q(\register_array_reg[7]_8 [20]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][21] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[21]),
        .Q(\register_array_reg[7]_8 [21]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][22] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[22]),
        .Q(\register_array_reg[7]_8 [22]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][23] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[23]),
        .Q(\register_array_reg[7]_8 [23]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][24] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[24]),
        .Q(\register_array_reg[7]_8 [24]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][25] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[25]),
        .Q(\register_array_reg[7]_8 [25]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][26] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[26]),
        .Q(\register_array_reg[7]_8 [26]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][27] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[27]),
        .Q(\register_array_reg[7]_8 [27]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][28] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[28]),
        .Q(\register_array_reg[7]_8 [28]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][29] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[29]),
        .Q(\register_array_reg[7]_8 [29]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][2] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[2]),
        .Q(\register_array_reg[7]_8 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][30] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[30]),
        .Q(\register_array_reg[7]_8 [30]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][31] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[31]),
        .Q(\register_array_reg[7]_8 [31]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][3] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[3]),
        .Q(\register_array_reg[7]_8 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][4] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[4]),
        .Q(\register_array_reg[7]_8 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][5] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[5]),
        .Q(\register_array_reg[7]_8 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][6] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[6]),
        .Q(\register_array_reg[7]_8 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][7] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[7]),
        .Q(\register_array_reg[7]_8 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][8] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[8]),
        .Q(\register_array_reg[7]_8 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[7][9] 
       (.C(CLK),
        .CE(\register_array[7][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[9]),
        .Q(\register_array_reg[7]_8 [9]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][0] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[0]),
        .Q(\register_array_reg[8]_7 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][10] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[10]),
        .Q(\register_array_reg[8]_7 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][11] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[11]),
        .Q(\register_array_reg[8]_7 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][12] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[12]),
        .Q(\register_array_reg[8]_7 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][13] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[13]),
        .Q(\register_array_reg[8]_7 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][14] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[14]),
        .Q(\register_array_reg[8]_7 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][15] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[15]),
        .Q(\register_array_reg[8]_7 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][16] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[16]),
        .Q(\register_array_reg[8]_7 [16]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][17] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[17]),
        .Q(\register_array_reg[8]_7 [17]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][18] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[18]),
        .Q(\register_array_reg[8]_7 [18]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][19] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[19]),
        .Q(\register_array_reg[8]_7 [19]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][1] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[1]),
        .Q(\register_array_reg[8]_7 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][20] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[20]),
        .Q(\register_array_reg[8]_7 [20]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][21] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[21]),
        .Q(\register_array_reg[8]_7 [21]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][22] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[22]),
        .Q(\register_array_reg[8]_7 [22]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][23] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[23]),
        .Q(\register_array_reg[8]_7 [23]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][24] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[24]),
        .Q(\register_array_reg[8]_7 [24]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][25] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[25]),
        .Q(\register_array_reg[8]_7 [25]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][26] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[26]),
        .Q(\register_array_reg[8]_7 [26]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][27] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[27]),
        .Q(\register_array_reg[8]_7 [27]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][28] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[28]),
        .Q(\register_array_reg[8]_7 [28]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][29] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[29]),
        .Q(\register_array_reg[8]_7 [29]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][2] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[2]),
        .Q(\register_array_reg[8]_7 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][30] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[30]),
        .Q(\register_array_reg[8]_7 [30]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][31] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[31]),
        .Q(\register_array_reg[8]_7 [31]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][3] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[3]),
        .Q(\register_array_reg[8]_7 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][4] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[4]),
        .Q(\register_array_reg[8]_7 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][5] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[5]),
        .Q(\register_array_reg[8]_7 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][6] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[6]),
        .Q(\register_array_reg[8]_7 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][7] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[7]),
        .Q(\register_array_reg[8]_7 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][8] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[8]),
        .Q(\register_array_reg[8]_7 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[8][9] 
       (.C(CLK),
        .CE(\register_array[8][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[9]),
        .Q(\register_array_reg[8]_7 [9]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][0] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[0]),
        .Q(\register_array_reg[9]_6 [0]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][10] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[10]),
        .Q(\register_array_reg[9]_6 [10]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][11] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[11]),
        .Q(\register_array_reg[9]_6 [11]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][12] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[12]),
        .Q(\register_array_reg[9]_6 [12]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][13] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[13]),
        .Q(\register_array_reg[9]_6 [13]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][14] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[14]),
        .Q(\register_array_reg[9]_6 [14]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][15] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[15]),
        .Q(\register_array_reg[9]_6 [15]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][16] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[16]),
        .Q(\register_array_reg[9]_6 [16]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][17] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[17]),
        .Q(\register_array_reg[9]_6 [17]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][18] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[18]),
        .Q(\register_array_reg[9]_6 [18]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][19] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[19]),
        .Q(\register_array_reg[9]_6 [19]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][1] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[1]),
        .Q(\register_array_reg[9]_6 [1]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][20] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[20]),
        .Q(\register_array_reg[9]_6 [20]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][21] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[21]),
        .Q(\register_array_reg[9]_6 [21]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][22] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[22]),
        .Q(\register_array_reg[9]_6 [22]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][23] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[23]),
        .Q(\register_array_reg[9]_6 [23]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][24] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[24]),
        .Q(\register_array_reg[9]_6 [24]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][25] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[25]),
        .Q(\register_array_reg[9]_6 [25]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][26] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[26]),
        .Q(\register_array_reg[9]_6 [26]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][27] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[27]),
        .Q(\register_array_reg[9]_6 [27]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][28] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[28]),
        .Q(\register_array_reg[9]_6 [28]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][29] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[29]),
        .Q(\register_array_reg[9]_6 [29]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][2] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[2]),
        .Q(\register_array_reg[9]_6 [2]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][30] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[30]),
        .Q(\register_array_reg[9]_6 [30]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][31] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[31]),
        .Q(\register_array_reg[9]_6 [31]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][3] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[3]),
        .Q(\register_array_reg[9]_6 [3]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][4] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[4]),
        .Q(\register_array_reg[9]_6 [4]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][5] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[5]),
        .Q(\register_array_reg[9]_6 [5]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][6] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[6]),
        .Q(\register_array_reg[9]_6 [6]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][7] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[7]),
        .Q(\register_array_reg[9]_6 [7]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][8] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[8]),
        .Q(\register_array_reg[9]_6 [8]));
  FDCE #(
    .INIT(1'b0)) 
    \register_array_reg[9][9] 
       (.C(CLK),
        .CE(\register_array[9][31]_i_1_n_0 ),
        .CLR(AR),
        .D(wd[9]),
        .Q(\register_array_reg[9]_6 [9]));
endmodule

(* ECO_CHECKSUM = "e2c9d15c" *) 
(* NotValidForBitStream *)
module board
   (clk,
    reset,
    memOrReg,
    read_switches,
    leds,
    cathode,
    anode,
    firstOrLast);
  input clk;
  input reset;
  input memOrReg;
  input [9:0]read_switches;
  output [15:0]leds;
  output [6:0]cathode;
  output [3:0]anode;
  input firstOrLast;

  wire BW;
  wire DW;
  wire \DataPathInstantiate/a_reg02_out ;
  wire IW;
  wire MR;
  wire MW_mult;
  wire Mult_true;
  wire ReW;
  wire SW;
  wire [3:0]anode;
  wire \b_reg_reg[31]_i_6_n_0 ;
  wire [6:0]cathode;
  wire \cathode[0]_i_1_n_0 ;
  wire \cathode[1]_i_1_n_0 ;
  wire \cathode[2]_i_1_n_0 ;
  wire \cathode[3]_i_1_n_0 ;
  wire \cathode[4]_i_1_n_0 ;
  wire \cathode[5]_i_1_n_0 ;
  wire \cathode[6]_i_1_n_0 ;
  wire [6:0]cathode_OBUF;
  wire clk;
  wire clk_IBUF;
  wire clk_IBUF_BUFG;
  wire clk_slow;
  wire clk_slow_BUFG;
  wire \d_reg_reg[31]_i_8_n_0 ;
  wire firstOrLast;
  wire firstOrLast_IBUF;
  wire [15:0]leds;
  wire [15:0]leds_OBUF;
  wire memOrReg;
  wire memOrReg_IBUF;
  wire processor_n_0;
  wire processor_n_1;
  wire processor_n_2;
  wire processor_n_25;
  wire processor_n_3;
  wire processor_n_4;
  wire processor_n_5;
  wire processor_n_6;
  wire processor_n_7;
  wire processor_n_8;
  wire [9:0]read_switches;
  wire [9:0]read_switches_IBUF;
  wire reset;
  wire reset_IBUF;
  wire \shift_reg_reg[31]_i_6_n_0 ;
  (* RTL_KEEP = "yes" *) wire [3:0]state__0;
  wire timer_n_0;

initial begin
 $sdf_annotate("board_time_impl.sdf",,,,"tool_control");
end
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[0] 
       (.C(clk_slow_BUFG),
        .CE(1'b1),
        .CLR(reset_IBUF),
        .D(processor_n_3),
        .Q(state__0[0]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[1] 
       (.C(clk_slow_BUFG),
        .CE(1'b1),
        .CLR(reset_IBUF),
        .D(processor_n_2),
        .Q(state__0[1]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[2] 
       (.C(clk_slow_BUFG),
        .CE(1'b1),
        .CLR(reset_IBUF),
        .D(processor_n_1),
        .Q(state__0[2]));
  (* KEEP = "yes" *) 
  FDCE #(
    .INIT(1'b0)) 
    \FSM_sequential_state_reg[3] 
       (.C(clk_slow_BUFG),
        .CE(1'b1),
        .CLR(reset_IBUF),
        .D(processor_n_0),
        .Q(state__0[3]));
  BUFG \a_reg_reg[31]_i_2 
       (.I(processor_n_25),
        .O(\DataPathInstantiate/a_reg02_out ));
  OBUF \anode_OBUF[0]_inst 
       (.I(1'b0),
        .O(anode[0]));
  OBUF \anode_OBUF[1]_inst 
       (.I(1'b1),
        .O(anode[1]));
  OBUF \anode_OBUF[2]_inst 
       (.I(1'b1),
        .O(anode[2]));
  OBUF \anode_OBUF[3]_inst 
       (.I(1'b1),
        .O(anode[3]));
  BUFG \b_reg_reg[31]_i_2 
       (.I(\b_reg_reg[31]_i_6_n_0 ),
        .O(BW));
  LUT4 #(
    .INIT(16'h0006)) 
    \b_reg_reg[31]_i_6 
       (.I0(state__0[0]),
        .I1(state__0[3]),
        .I2(state__0[2]),
        .I3(state__0[1]),
        .O(\b_reg_reg[31]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h89A1)) 
    \cathode[0]_i_1 
       (.I0(state__0[2]),
        .I1(state__0[1]),
        .I2(state__0[3]),
        .I3(state__0[0]),
        .O(\cathode[0]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h2D44)) 
    \cathode[1]_i_1 
       (.I0(state__0[2]),
        .I1(state__0[1]),
        .I2(state__0[3]),
        .I3(state__0[0]),
        .O(\cathode[1]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h02AE)) 
    \cathode[2]_i_1 
       (.I0(state__0[0]),
        .I1(state__0[2]),
        .I2(state__0[1]),
        .I3(state__0[3]),
        .O(\cathode[2]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0902)) 
    \cathode[3]_i_1 
       (.I0(state__0[0]),
        .I1(state__0[1]),
        .I2(state__0[3]),
        .I3(state__0[2]),
        .O(\cathode[3]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h0042)) 
    \cathode[4]_i_1 
       (.I0(state__0[1]),
        .I1(state__0[3]),
        .I2(state__0[2]),
        .I3(state__0[0]),
        .O(\cathode[4]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h2448)) 
    \cathode[5]_i_1 
       (.I0(state__0[0]),
        .I1(state__0[2]),
        .I2(state__0[1]),
        .I3(state__0[3]),
        .O(\cathode[5]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h6102)) 
    \cathode[6]_i_1 
       (.I0(state__0[2]),
        .I1(state__0[1]),
        .I2(state__0[3]),
        .I3(state__0[0]),
        .O(\cathode[6]_i_1_n_0 ));
  OBUF \cathode_OBUF[0]_inst 
       (.I(cathode_OBUF[0]),
        .O(cathode[0]));
  OBUF \cathode_OBUF[1]_inst 
       (.I(cathode_OBUF[1]),
        .O(cathode[1]));
  OBUF \cathode_OBUF[2]_inst 
       (.I(cathode_OBUF[2]),
        .O(cathode[2]));
  OBUF \cathode_OBUF[3]_inst 
       (.I(cathode_OBUF[3]),
        .O(cathode[3]));
  OBUF \cathode_OBUF[4]_inst 
       (.I(cathode_OBUF[4]),
        .O(cathode[4]));
  OBUF \cathode_OBUF[5]_inst 
       (.I(cathode_OBUF[5]),
        .O(cathode[5]));
  OBUF \cathode_OBUF[6]_inst 
       (.I(cathode_OBUF[6]),
        .O(cathode[6]));
  FDRE #(
    .INIT(1'b0)) 
    \cathode_reg[0] 
       (.C(clk_slow_BUFG),
        .CE(1'b1),
        .D(\cathode[0]_i_1_n_0 ),
        .Q(cathode_OBUF[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cathode_reg[1] 
       (.C(clk_slow_BUFG),
        .CE(1'b1),
        .D(\cathode[1]_i_1_n_0 ),
        .Q(cathode_OBUF[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cathode_reg[2] 
       (.C(clk_slow_BUFG),
        .CE(1'b1),
        .D(\cathode[2]_i_1_n_0 ),
        .Q(cathode_OBUF[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cathode_reg[3] 
       (.C(clk_slow_BUFG),
        .CE(1'b1),
        .D(\cathode[3]_i_1_n_0 ),
        .Q(cathode_OBUF[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cathode_reg[4] 
       (.C(clk_slow_BUFG),
        .CE(1'b1),
        .D(\cathode[4]_i_1_n_0 ),
        .Q(cathode_OBUF[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cathode_reg[5] 
       (.C(clk_slow_BUFG),
        .CE(1'b1),
        .D(\cathode[5]_i_1_n_0 ),
        .Q(cathode_OBUF[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \cathode_reg[6] 
       (.C(clk_slow_BUFG),
        .CE(1'b1),
        .D(\cathode[6]_i_1_n_0 ),
        .Q(cathode_OBUF[6]),
        .R(1'b0));
  BUFG clk_IBUF_BUFG_inst
       (.I(clk_IBUF),
        .O(clk_IBUF_BUFG));
  IBUF clk_IBUF_inst
       (.I(clk),
        .O(clk_IBUF));
  BUFG clk_slow_BUFG_inst
       (.I(clk_slow),
        .O(clk_slow_BUFG));
  BUFG \d_reg_reg[31]_i_2 
       (.I(\d_reg_reg[31]_i_8_n_0 ),
        .O(DW));
  LUT4 #(
    .INIT(16'h0008)) 
    \d_reg_reg[31]_i_8 
       (.I0(state__0[1]),
        .I1(state__0[3]),
        .I2(state__0[2]),
        .I3(state__0[0]),
        .O(\d_reg_reg[31]_i_8_n_0 ));
  BUFG \douta_reg[31]_i_2 
       (.I(processor_n_8),
        .O(MR));
  IBUF firstOrLast_IBUF_inst
       (.I(firstOrLast),
        .O(firstOrLast_IBUF));
  BUFG \ir_reg_reg[31]_i_1 
       (.I(processor_n_5),
        .O(IW));
  OBUF \leds_OBUF[0]_inst 
       (.I(leds_OBUF[0]),
        .O(leds[0]));
  OBUF \leds_OBUF[10]_inst 
       (.I(leds_OBUF[10]),
        .O(leds[10]));
  OBUF \leds_OBUF[11]_inst 
       (.I(leds_OBUF[11]),
        .O(leds[11]));
  OBUF \leds_OBUF[12]_inst 
       (.I(leds_OBUF[12]),
        .O(leds[12]));
  OBUF \leds_OBUF[13]_inst 
       (.I(leds_OBUF[13]),
        .O(leds[13]));
  OBUF \leds_OBUF[14]_inst 
       (.I(leds_OBUF[14]),
        .O(leds[14]));
  OBUF \leds_OBUF[15]_inst 
       (.I(leds_OBUF[15]),
        .O(leds[15]));
  OBUF \leds_OBUF[1]_inst 
       (.I(leds_OBUF[1]),
        .O(leds[1]));
  OBUF \leds_OBUF[2]_inst 
       (.I(leds_OBUF[2]),
        .O(leds[2]));
  OBUF \leds_OBUF[3]_inst 
       (.I(leds_OBUF[3]),
        .O(leds[3]));
  OBUF \leds_OBUF[4]_inst 
       (.I(leds_OBUF[4]),
        .O(leds[4]));
  OBUF \leds_OBUF[5]_inst 
       (.I(leds_OBUF[5]),
        .O(leds[5]));
  OBUF \leds_OBUF[6]_inst 
       (.I(leds_OBUF[6]),
        .O(leds[6]));
  OBUF \leds_OBUF[7]_inst 
       (.I(leds_OBUF[7]),
        .O(leds[7]));
  OBUF \leds_OBUF[8]_inst 
       (.I(leds_OBUF[8]),
        .O(leds[8]));
  OBUF \leds_OBUF[9]_inst 
       (.I(leds_OBUF[9]),
        .O(leds[9]));
  IBUF memOrReg_IBUF_inst
       (.I(memOrReg),
        .O(memOrReg_IBUF));
  BUFG \mult_reg_reg[31]_i_2 
       (.I(processor_n_4),
        .O(MW_mult));
  master processor
       (.AR(reset_IBUF),
        .CLK(clk_slow_BUFG),
        .D({processor_n_0,processor_n_1,processor_n_2,processor_n_3}),
        .E(MR),
        .\FSM_sequential_state_reg[0] (timer_n_0),
        .\FSM_sequential_state_reg[0]_0 (ReW),
        .\FSM_sequential_state_reg[0]_1 (SW),
        .\FSM_sequential_state_reg[0]_2 (BW),
        .\FSM_sequential_state_reg[1] (IW),
        .\FSM_sequential_state_reg[1]_0 (DW),
        .\FSM_sequential_state_reg[1]_1 (\DataPathInstantiate/a_reg02_out ),
        .\FSM_sequential_state_reg[1]_2 (MW_mult),
        .\FSM_sequential_state_reg[1]_3 (Mult_true),
        .\c_reg[0] (clk_slow),
        .firstOrLast_IBUF(firstOrLast_IBUF),
        .leds_OBUF(leds_OBUF),
        .memOrReg_IBUF(memOrReg_IBUF),
        .out(state__0),
        .output_big(processor_n_4),
        .output_big__0(processor_n_6),
        .\pc_reg[0] (processor_n_5),
        .\pc_reg[31] (processor_n_25),
        .read_switches_IBUF(read_switches_IBUF),
        .\register_array_reg[0][15] (processor_n_8),
        .\register_array_reg[0][31] (processor_n_7));
  IBUF \read_switches_IBUF[0]_inst 
       (.I(read_switches[0]),
        .O(read_switches_IBUF[0]));
  IBUF \read_switches_IBUF[1]_inst 
       (.I(read_switches[1]),
        .O(read_switches_IBUF[1]));
  IBUF \read_switches_IBUF[2]_inst 
       (.I(read_switches[2]),
        .O(read_switches_IBUF[2]));
  IBUF \read_switches_IBUF[3]_inst 
       (.I(read_switches[3]),
        .O(read_switches_IBUF[3]));
  IBUF \read_switches_IBUF[4]_inst 
       (.I(read_switches[4]),
        .O(read_switches_IBUF[4]));
  IBUF \read_switches_IBUF[5]_inst 
       (.I(read_switches[5]),
        .O(read_switches_IBUF[5]));
  IBUF \read_switches_IBUF[6]_inst 
       (.I(read_switches[6]),
        .O(read_switches_IBUF[6]));
  IBUF \read_switches_IBUF[7]_inst 
       (.I(read_switches[7]),
        .O(read_switches_IBUF[7]));
  IBUF \read_switches_IBUF[8]_inst 
       (.I(read_switches[8]),
        .O(read_switches_IBUF[8]));
  IBUF \read_switches_IBUF[9]_inst 
       (.I(read_switches[9]),
        .O(read_switches_IBUF[9]));
  BUFG \res_reg[31]_i_2 
       (.I(processor_n_7),
        .O(ReW));
  IBUF reset_IBUF_inst
       (.I(reset),
        .O(reset_IBUF));
  BUFG \shift_reg_reg[31]_i_2 
       (.I(\shift_reg_reg[31]_i_6_n_0 ),
        .O(SW));
  LUT3 #(
    .INIT(8'h20)) 
    \shift_reg_reg[31]_i_6 
       (.I0(state__0[0]),
        .I1(state__0[3]),
        .I2(state__0[1]),
        .O(\shift_reg_reg[31]_i_6_n_0 ));
  clk10Hz timer
       (.CLK(clk_slow_BUFG),
        .clk(clk_IBUF_BUFG),
        .out(state__0),
        .\prev_state_reg[3] (clk_slow),
        .\register_array_reg[0][6] (timer_n_0));
  BUFG \x_reg_reg[31]_i_1 
       (.I(processor_n_6),
        .O(Mult_true));
endmodule

module clk10Hz
   (\register_array_reg[0][6] ,
    \prev_state_reg[3] ,
    out,
    clk,
    CLK);
  output \register_array_reg[0][6] ;
  output [0:0]\prev_state_reg[3] ;
  input [3:0]out;
  input clk;
  input CLK;

  wire CLK;
  wire \c[0]_i_1_n_0 ;
  wire clk;
  wire [3:0]out;
  wire [0:0]\prev_state_reg[3] ;
  wire \register_array_reg[0][6] ;

  LUT5 #(
    .INIT(32'h10210000)) 
    RAM_reg_0_127_8_8_i_8
       (.I0(out[0]),
        .I1(out[2]),
        .I2(out[3]),
        .I3(out[1]),
        .I4(\prev_state_reg[3] ),
        .O(\register_array_reg[0][6] ));
  LUT1 #(
    .INIT(2'h1)) 
    \c[0]_i_1 
       (.I0(CLK),
        .O(\c[0]_i_1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \c_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\c[0]_i_1_n_0 ),
        .Q(\prev_state_reg[3] ),
        .R(1'b0));
endmodule

module local_memory
   (\register_array_reg[0][15] ,
    MW,
    \pc_reg[0] ,
    \pc_reg[0]_0 ,
    \pc_reg[0]_1 ,
    \register_array_reg[0][23] ,
    D,
    \register_array_reg[0][14] ,
    \register_array_reg[0][15]_0 ,
    \register_array_reg[0][15]_1 ,
    memout,
    CLK,
    Q,
    read_switches_IBUF,
    \FSM_sequential_state_reg[1] ,
    \FSM_sequential_state_reg[0] ,
    \FSM_sequential_state_reg[0]_0 ,
    out,
    \FSM_sequential_state_reg[1]_0 ,
    flags_master,
    DI,
    \FSM_sequential_state_reg[1]_1 ,
    \c_reg[0] ,
    \FSM_sequential_state_reg[0]_1 ,
    \FSM_sequential_state_reg[0]_2 ,
    \FSM_sequential_state_reg[1]_2 ,
    \FSM_sequential_state_reg[0]_3 ,
    \FSM_sequential_state_reg[0]_4 ,
    \FSM_sequential_state_reg[1]_3 ,
    \FSM_sequential_state_reg[1]_4 ,
    \FSM_sequential_state_reg[0]_5 ,
    \FSM_sequential_state_reg[0]_6 ,
    \FSM_sequential_state_reg[0]_7 ,
    \FSM_sequential_state_reg[0]_8 ,
    \FSM_sequential_state_reg[0]_9 ,
    \pc_reg[13] ,
    \FSM_sequential_state_reg[1]_5 );
  output \register_array_reg[0][15] ;
  output MW;
  output \pc_reg[0] ;
  output \pc_reg[0]_0 ;
  output \pc_reg[0]_1 ;
  output \register_array_reg[0][23] ;
  output [9:0]D;
  output \register_array_reg[0][14] ;
  output [31:0]\register_array_reg[0][15]_0 ;
  output \register_array_reg[0][15]_1 ;
  output [31:0]memout;
  input CLK;
  input [31:0]Q;
  input [9:0]read_switches_IBUF;
  input [7:0]\FSM_sequential_state_reg[1] ;
  input \FSM_sequential_state_reg[0] ;
  input \FSM_sequential_state_reg[0]_0 ;
  input [3:0]out;
  input [3:0]\FSM_sequential_state_reg[1]_0 ;
  input [1:0]flags_master;
  input [0:0]DI;
  input [2:0]\FSM_sequential_state_reg[1]_1 ;
  input [0:0]\c_reg[0] ;
  input \FSM_sequential_state_reg[0]_1 ;
  input \FSM_sequential_state_reg[0]_2 ;
  input \FSM_sequential_state_reg[1]_2 ;
  input \FSM_sequential_state_reg[0]_3 ;
  input \FSM_sequential_state_reg[0]_4 ;
  input \FSM_sequential_state_reg[1]_3 ;
  input \FSM_sequential_state_reg[1]_4 ;
  input \FSM_sequential_state_reg[0]_5 ;
  input \FSM_sequential_state_reg[0]_6 ;
  input [13:0]\FSM_sequential_state_reg[0]_7 ;
  input \FSM_sequential_state_reg[0]_8 ;
  input \FSM_sequential_state_reg[0]_9 ;
  input [11:0]\pc_reg[13] ;
  input [0:0]\FSM_sequential_state_reg[1]_5 ;

  wire CLK;
  wire [9:0]D;
  wire [0:0]DI;
  wire \FSM_sequential_state_reg[0] ;
  wire \FSM_sequential_state_reg[0]_0 ;
  wire \FSM_sequential_state_reg[0]_1 ;
  wire \FSM_sequential_state_reg[0]_2 ;
  wire \FSM_sequential_state_reg[0]_3 ;
  wire \FSM_sequential_state_reg[0]_4 ;
  wire \FSM_sequential_state_reg[0]_5 ;
  wire \FSM_sequential_state_reg[0]_6 ;
  wire [13:0]\FSM_sequential_state_reg[0]_7 ;
  wire \FSM_sequential_state_reg[0]_8 ;
  wire \FSM_sequential_state_reg[0]_9 ;
  wire [7:0]\FSM_sequential_state_reg[1] ;
  wire [3:0]\FSM_sequential_state_reg[1]_0 ;
  wire [2:0]\FSM_sequential_state_reg[1]_1 ;
  wire \FSM_sequential_state_reg[1]_2 ;
  wire \FSM_sequential_state_reg[1]_3 ;
  wire \FSM_sequential_state_reg[1]_4 ;
  wire [0:0]\FSM_sequential_state_reg[1]_5 ;
  wire MW;
  wire [31:0]Q;
  wire RAM_reg_0_127_0_0_i_14_n_0;
  wire RAM_reg_0_127_0_0_i_1_n_0;
  wire RAM_reg_0_127_0_0_n_0;
  wire RAM_reg_0_127_0_0_n_1;
  wire RAM_reg_0_127_10_10_i_2_n_0;
  wire RAM_reg_0_127_10_10_i_3_n_0;
  wire RAM_reg_0_127_10_10_i_4_n_0;
  wire RAM_reg_0_127_10_10_i_5_n_0;
  wire RAM_reg_0_127_10_10_n_0;
  wire RAM_reg_0_127_10_10_n_1;
  wire RAM_reg_0_127_11_11_i_2_n_0;
  wire RAM_reg_0_127_11_11_i_3_n_0;
  wire RAM_reg_0_127_11_11_i_4_n_0;
  wire RAM_reg_0_127_11_11_i_5_n_0;
  wire RAM_reg_0_127_11_11_n_0;
  wire RAM_reg_0_127_11_11_n_1;
  wire RAM_reg_0_127_12_12_i_2_n_0;
  wire RAM_reg_0_127_12_12_i_3_n_0;
  wire RAM_reg_0_127_12_12_i_4_n_0;
  wire RAM_reg_0_127_12_12_i_5_n_0;
  wire RAM_reg_0_127_12_12_n_0;
  wire RAM_reg_0_127_12_12_n_1;
  wire RAM_reg_0_127_13_13_i_2_n_0;
  wire RAM_reg_0_127_13_13_i_3_n_0;
  wire RAM_reg_0_127_13_13_i_4_n_0;
  wire RAM_reg_0_127_13_13_i_5_n_0;
  wire RAM_reg_0_127_13_13_n_0;
  wire RAM_reg_0_127_13_13_n_1;
  wire RAM_reg_0_127_14_14_i_2_n_0;
  wire RAM_reg_0_127_14_14_i_3_n_0;
  wire RAM_reg_0_127_14_14_i_4_n_0;
  wire RAM_reg_0_127_14_14_i_5_n_0;
  wire RAM_reg_0_127_14_14_n_0;
  wire RAM_reg_0_127_14_14_n_1;
  wire RAM_reg_0_127_15_15_i_2_n_0;
  wire RAM_reg_0_127_15_15_i_3_n_0;
  wire RAM_reg_0_127_15_15_i_4_n_0;
  wire RAM_reg_0_127_15_15_i_5_n_0;
  wire RAM_reg_0_127_15_15_n_0;
  wire RAM_reg_0_127_15_15_n_1;
  wire RAM_reg_0_127_16_16_i_2_n_0;
  wire RAM_reg_0_127_16_16_n_0;
  wire RAM_reg_0_127_16_16_n_1;
  wire RAM_reg_0_127_17_17_n_0;
  wire RAM_reg_0_127_17_17_n_1;
  wire RAM_reg_0_127_18_18_n_0;
  wire RAM_reg_0_127_18_18_n_1;
  wire RAM_reg_0_127_19_19_n_0;
  wire RAM_reg_0_127_19_19_n_1;
  wire RAM_reg_0_127_1_1_i_1_n_0;
  wire RAM_reg_0_127_1_1_i_2_n_0;
  wire RAM_reg_0_127_1_1_i_3_n_0;
  wire RAM_reg_0_127_1_1_i_4_n_0;
  wire RAM_reg_0_127_1_1_n_0;
  wire RAM_reg_0_127_1_1_n_1;
  wire RAM_reg_0_127_20_20_n_0;
  wire RAM_reg_0_127_20_20_n_1;
  wire RAM_reg_0_127_21_21_n_0;
  wire RAM_reg_0_127_21_21_n_1;
  wire RAM_reg_0_127_22_22_n_0;
  wire RAM_reg_0_127_22_22_n_1;
  wire RAM_reg_0_127_23_23_n_0;
  wire RAM_reg_0_127_23_23_n_1;
  wire RAM_reg_0_127_24_24_n_0;
  wire RAM_reg_0_127_24_24_n_1;
  wire RAM_reg_0_127_25_25_n_0;
  wire RAM_reg_0_127_25_25_n_1;
  wire RAM_reg_0_127_26_26_n_0;
  wire RAM_reg_0_127_26_26_n_1;
  wire RAM_reg_0_127_27_27_n_0;
  wire RAM_reg_0_127_27_27_n_1;
  wire RAM_reg_0_127_28_28_n_0;
  wire RAM_reg_0_127_28_28_n_1;
  wire RAM_reg_0_127_29_29_n_0;
  wire RAM_reg_0_127_29_29_n_1;
  wire RAM_reg_0_127_2_2_i_1_n_0;
  wire RAM_reg_0_127_2_2_i_2_n_0;
  wire RAM_reg_0_127_2_2_i_3_n_0;
  wire RAM_reg_0_127_2_2_i_4_n_0;
  wire RAM_reg_0_127_2_2_n_0;
  wire RAM_reg_0_127_2_2_n_1;
  wire RAM_reg_0_127_30_30_n_0;
  wire RAM_reg_0_127_30_30_n_1;
  wire RAM_reg_0_127_31_31_n_0;
  wire RAM_reg_0_127_31_31_n_1;
  wire RAM_reg_0_127_3_3_i_1_n_0;
  wire RAM_reg_0_127_3_3_i_2_n_0;
  wire RAM_reg_0_127_3_3_i_3_n_0;
  wire RAM_reg_0_127_3_3_i_4_n_0;
  wire RAM_reg_0_127_3_3_n_0;
  wire RAM_reg_0_127_3_3_n_1;
  wire RAM_reg_0_127_4_4_i_1_n_0;
  wire RAM_reg_0_127_4_4_i_2_n_0;
  wire RAM_reg_0_127_4_4_i_3_n_0;
  wire RAM_reg_0_127_4_4_i_4_n_0;
  wire RAM_reg_0_127_4_4_n_0;
  wire RAM_reg_0_127_4_4_n_1;
  wire RAM_reg_0_127_5_5_i_1_n_0;
  wire RAM_reg_0_127_5_5_i_2_n_0;
  wire RAM_reg_0_127_5_5_i_3_n_0;
  wire RAM_reg_0_127_5_5_i_4_n_0;
  wire RAM_reg_0_127_5_5_n_0;
  wire RAM_reg_0_127_5_5_n_1;
  wire RAM_reg_0_127_6_6_i_1_n_0;
  wire RAM_reg_0_127_6_6_i_2_n_0;
  wire RAM_reg_0_127_6_6_i_3_n_0;
  wire RAM_reg_0_127_6_6_i_4_n_0;
  wire RAM_reg_0_127_6_6_n_0;
  wire RAM_reg_0_127_6_6_n_1;
  wire RAM_reg_0_127_7_7_i_1_n_0;
  wire RAM_reg_0_127_7_7_i_2_n_0;
  wire RAM_reg_0_127_7_7_i_3_n_0;
  wire RAM_reg_0_127_7_7_i_4_n_0;
  wire RAM_reg_0_127_7_7_n_0;
  wire RAM_reg_0_127_7_7_n_1;
  wire RAM_reg_0_127_8_8_i_2_n_0;
  wire RAM_reg_0_127_8_8_i_3_n_0;
  wire RAM_reg_0_127_8_8_i_4_n_0;
  wire RAM_reg_0_127_8_8_i_5_n_0;
  wire RAM_reg_0_127_8_8_i_6_n_0;
  wire RAM_reg_0_127_8_8_n_0;
  wire RAM_reg_0_127_8_8_n_1;
  wire RAM_reg_0_127_9_9_i_2_n_0;
  wire RAM_reg_0_127_9_9_i_3_n_0;
  wire RAM_reg_0_127_9_9_i_4_n_0;
  wire RAM_reg_0_127_9_9_i_5_n_0;
  wire RAM_reg_0_127_9_9_n_0;
  wire RAM_reg_0_127_9_9_n_1;
  wire RAM_reg_0_15_0_0__0_n_1;
  wire RAM_reg_0_15_0_0__10_n_1;
  wire RAM_reg_0_15_0_0__11_n_1;
  wire RAM_reg_0_15_0_0__12_n_1;
  wire RAM_reg_0_15_0_0__13_n_1;
  wire RAM_reg_0_15_0_0__14_n_1;
  wire RAM_reg_0_15_0_0__15_n_1;
  wire RAM_reg_0_15_0_0__16_n_1;
  wire RAM_reg_0_15_0_0__17_n_1;
  wire RAM_reg_0_15_0_0__18_n_1;
  wire RAM_reg_0_15_0_0__19_n_1;
  wire RAM_reg_0_15_0_0__1_n_1;
  wire RAM_reg_0_15_0_0__20_n_1;
  wire RAM_reg_0_15_0_0__21_n_1;
  wire RAM_reg_0_15_0_0__22_n_1;
  wire RAM_reg_0_15_0_0__23_n_1;
  wire RAM_reg_0_15_0_0__24_n_1;
  wire RAM_reg_0_15_0_0__25_n_1;
  wire RAM_reg_0_15_0_0__26_n_1;
  wire RAM_reg_0_15_0_0__27_n_1;
  wire RAM_reg_0_15_0_0__28_n_1;
  wire RAM_reg_0_15_0_0__29_n_1;
  wire RAM_reg_0_15_0_0__2_n_1;
  wire RAM_reg_0_15_0_0__30_n_1;
  wire RAM_reg_0_15_0_0__3_n_1;
  wire RAM_reg_0_15_0_0__4_n_1;
  wire RAM_reg_0_15_0_0__5_n_1;
  wire RAM_reg_0_15_0_0__6_n_1;
  wire RAM_reg_0_15_0_0__7_n_1;
  wire RAM_reg_0_15_0_0__8_n_1;
  wire RAM_reg_0_15_0_0__9_n_1;
  wire RAM_reg_0_15_0_0_i_1_n_0;
  wire RAM_reg_0_15_0_0_i_3_n_0;
  wire RAM_reg_0_15_0_0_n_1;
  wire RAM_reg_1024_1151_0_0_i_1_n_0;
  wire RAM_reg_1024_1151_0_0_n_1;
  wire RAM_reg_1024_1151_10_10_n_1;
  wire RAM_reg_1024_1151_11_11_n_1;
  wire RAM_reg_1024_1151_12_12_n_1;
  wire RAM_reg_1024_1151_13_13_n_1;
  wire RAM_reg_1024_1151_14_14_n_1;
  wire RAM_reg_1024_1151_15_15_n_1;
  wire RAM_reg_1024_1151_16_16_i_1_n_0;
  wire RAM_reg_1024_1151_16_16_n_1;
  wire RAM_reg_1024_1151_17_17_n_1;
  wire RAM_reg_1024_1151_18_18_n_1;
  wire RAM_reg_1024_1151_19_19_n_1;
  wire RAM_reg_1024_1151_1_1_n_1;
  wire RAM_reg_1024_1151_20_20_n_1;
  wire RAM_reg_1024_1151_21_21_n_1;
  wire RAM_reg_1024_1151_22_22_n_1;
  wire RAM_reg_1024_1151_23_23_n_1;
  wire RAM_reg_1024_1151_24_24_n_1;
  wire RAM_reg_1024_1151_25_25_n_1;
  wire RAM_reg_1024_1151_26_26_n_1;
  wire RAM_reg_1024_1151_27_27_n_1;
  wire RAM_reg_1024_1151_28_28_n_1;
  wire RAM_reg_1024_1151_29_29_n_1;
  wire RAM_reg_1024_1151_2_2_n_1;
  wire RAM_reg_1024_1151_30_30_n_1;
  wire RAM_reg_1024_1151_31_31_n_1;
  wire RAM_reg_1024_1151_3_3_n_1;
  wire RAM_reg_1024_1151_4_4_n_1;
  wire RAM_reg_1024_1151_5_5_n_1;
  wire RAM_reg_1024_1151_6_6_n_1;
  wire RAM_reg_1024_1151_7_7_n_1;
  wire RAM_reg_1024_1151_8_8_i_1_n_0;
  wire RAM_reg_1024_1151_8_8_n_1;
  wire RAM_reg_1024_1151_9_9_n_1;
  wire RAM_reg_1152_1279_0_0_i_1_n_0;
  wire RAM_reg_1152_1279_0_0_n_1;
  wire RAM_reg_1152_1279_10_10_n_1;
  wire RAM_reg_1152_1279_11_11_n_1;
  wire RAM_reg_1152_1279_12_12_n_1;
  wire RAM_reg_1152_1279_13_13_n_1;
  wire RAM_reg_1152_1279_14_14_n_1;
  wire RAM_reg_1152_1279_15_15_n_1;
  wire RAM_reg_1152_1279_16_16_i_1_n_0;
  wire RAM_reg_1152_1279_16_16_n_1;
  wire RAM_reg_1152_1279_17_17_n_1;
  wire RAM_reg_1152_1279_18_18_n_1;
  wire RAM_reg_1152_1279_19_19_n_1;
  wire RAM_reg_1152_1279_1_1_n_1;
  wire RAM_reg_1152_1279_20_20_n_1;
  wire RAM_reg_1152_1279_21_21_n_1;
  wire RAM_reg_1152_1279_22_22_n_1;
  wire RAM_reg_1152_1279_23_23_n_1;
  wire RAM_reg_1152_1279_24_24_n_1;
  wire RAM_reg_1152_1279_25_25_n_1;
  wire RAM_reg_1152_1279_26_26_n_1;
  wire RAM_reg_1152_1279_27_27_n_1;
  wire RAM_reg_1152_1279_28_28_n_1;
  wire RAM_reg_1152_1279_29_29_n_1;
  wire RAM_reg_1152_1279_2_2_n_1;
  wire RAM_reg_1152_1279_30_30_n_1;
  wire RAM_reg_1152_1279_31_31_n_1;
  wire RAM_reg_1152_1279_3_3_n_1;
  wire RAM_reg_1152_1279_4_4_n_1;
  wire RAM_reg_1152_1279_5_5_n_1;
  wire RAM_reg_1152_1279_6_6_n_1;
  wire RAM_reg_1152_1279_7_7_n_1;
  wire RAM_reg_1152_1279_8_8_i_1_n_0;
  wire RAM_reg_1152_1279_8_8_n_1;
  wire RAM_reg_1152_1279_9_9_n_1;
  wire RAM_reg_1280_1407_0_0_i_1_n_0;
  wire RAM_reg_1280_1407_0_0_n_1;
  wire RAM_reg_1280_1407_10_10_n_1;
  wire RAM_reg_1280_1407_11_11_n_1;
  wire RAM_reg_1280_1407_12_12_n_1;
  wire RAM_reg_1280_1407_13_13_n_1;
  wire RAM_reg_1280_1407_14_14_n_1;
  wire RAM_reg_1280_1407_15_15_n_1;
  wire RAM_reg_1280_1407_16_16_i_1_n_0;
  wire RAM_reg_1280_1407_16_16_n_1;
  wire RAM_reg_1280_1407_17_17_n_1;
  wire RAM_reg_1280_1407_18_18_n_1;
  wire RAM_reg_1280_1407_19_19_n_1;
  wire RAM_reg_1280_1407_1_1_n_1;
  wire RAM_reg_1280_1407_20_20_n_1;
  wire RAM_reg_1280_1407_21_21_n_1;
  wire RAM_reg_1280_1407_22_22_n_1;
  wire RAM_reg_1280_1407_23_23_n_1;
  wire RAM_reg_1280_1407_24_24_n_1;
  wire RAM_reg_1280_1407_25_25_n_1;
  wire RAM_reg_1280_1407_26_26_n_1;
  wire RAM_reg_1280_1407_27_27_n_1;
  wire RAM_reg_1280_1407_28_28_n_1;
  wire RAM_reg_1280_1407_29_29_n_1;
  wire RAM_reg_1280_1407_2_2_n_1;
  wire RAM_reg_1280_1407_30_30_n_1;
  wire RAM_reg_1280_1407_31_31_n_1;
  wire RAM_reg_1280_1407_3_3_n_1;
  wire RAM_reg_1280_1407_4_4_n_1;
  wire RAM_reg_1280_1407_5_5_n_1;
  wire RAM_reg_1280_1407_6_6_n_1;
  wire RAM_reg_1280_1407_7_7_n_1;
  wire RAM_reg_1280_1407_8_8_i_1_n_0;
  wire RAM_reg_1280_1407_8_8_n_1;
  wire RAM_reg_1280_1407_9_9_n_1;
  wire RAM_reg_128_255_0_0_i_1_n_0;
  wire RAM_reg_128_255_0_0_n_0;
  wire RAM_reg_128_255_0_0_n_1;
  wire RAM_reg_128_255_10_10_n_0;
  wire RAM_reg_128_255_10_10_n_1;
  wire RAM_reg_128_255_11_11_n_0;
  wire RAM_reg_128_255_11_11_n_1;
  wire RAM_reg_128_255_12_12_n_0;
  wire RAM_reg_128_255_12_12_n_1;
  wire RAM_reg_128_255_13_13_n_0;
  wire RAM_reg_128_255_13_13_n_1;
  wire RAM_reg_128_255_14_14_n_0;
  wire RAM_reg_128_255_14_14_n_1;
  wire RAM_reg_128_255_15_15_n_0;
  wire RAM_reg_128_255_15_15_n_1;
  wire RAM_reg_128_255_16_16_i_1_n_0;
  wire RAM_reg_128_255_16_16_n_0;
  wire RAM_reg_128_255_16_16_n_1;
  wire RAM_reg_128_255_17_17_n_0;
  wire RAM_reg_128_255_17_17_n_1;
  wire RAM_reg_128_255_18_18_n_0;
  wire RAM_reg_128_255_18_18_n_1;
  wire RAM_reg_128_255_19_19_n_0;
  wire RAM_reg_128_255_19_19_n_1;
  wire RAM_reg_128_255_1_1_n_0;
  wire RAM_reg_128_255_1_1_n_1;
  wire RAM_reg_128_255_20_20_n_0;
  wire RAM_reg_128_255_20_20_n_1;
  wire RAM_reg_128_255_21_21_n_0;
  wire RAM_reg_128_255_21_21_n_1;
  wire RAM_reg_128_255_22_22_n_0;
  wire RAM_reg_128_255_22_22_n_1;
  wire RAM_reg_128_255_23_23_n_0;
  wire RAM_reg_128_255_23_23_n_1;
  wire RAM_reg_128_255_24_24_n_0;
  wire RAM_reg_128_255_24_24_n_1;
  wire RAM_reg_128_255_25_25_n_0;
  wire RAM_reg_128_255_25_25_n_1;
  wire RAM_reg_128_255_26_26_n_0;
  wire RAM_reg_128_255_26_26_n_1;
  wire RAM_reg_128_255_27_27_n_0;
  wire RAM_reg_128_255_27_27_n_1;
  wire RAM_reg_128_255_28_28_n_0;
  wire RAM_reg_128_255_28_28_n_1;
  wire RAM_reg_128_255_29_29_n_0;
  wire RAM_reg_128_255_29_29_n_1;
  wire RAM_reg_128_255_2_2_n_0;
  wire RAM_reg_128_255_2_2_n_1;
  wire RAM_reg_128_255_30_30_n_0;
  wire RAM_reg_128_255_30_30_n_1;
  wire RAM_reg_128_255_31_31_n_0;
  wire RAM_reg_128_255_31_31_n_1;
  wire RAM_reg_128_255_3_3_n_0;
  wire RAM_reg_128_255_3_3_n_1;
  wire RAM_reg_128_255_4_4_n_0;
  wire RAM_reg_128_255_4_4_n_1;
  wire RAM_reg_128_255_5_5_n_0;
  wire RAM_reg_128_255_5_5_n_1;
  wire RAM_reg_128_255_6_6_n_0;
  wire RAM_reg_128_255_6_6_n_1;
  wire RAM_reg_128_255_7_7_n_0;
  wire RAM_reg_128_255_7_7_n_1;
  wire RAM_reg_128_255_8_8_i_1_n_0;
  wire RAM_reg_128_255_8_8_n_0;
  wire RAM_reg_128_255_8_8_n_1;
  wire RAM_reg_128_255_9_9_n_0;
  wire RAM_reg_128_255_9_9_n_1;
  wire RAM_reg_1408_1535_0_0_i_1_n_0;
  wire RAM_reg_1408_1535_0_0_n_1;
  wire RAM_reg_1408_1535_10_10_n_1;
  wire RAM_reg_1408_1535_11_11_n_1;
  wire RAM_reg_1408_1535_12_12_n_1;
  wire RAM_reg_1408_1535_13_13_n_1;
  wire RAM_reg_1408_1535_14_14_n_1;
  wire RAM_reg_1408_1535_15_15_n_1;
  wire RAM_reg_1408_1535_16_16_i_1_n_0;
  wire RAM_reg_1408_1535_16_16_n_1;
  wire RAM_reg_1408_1535_17_17_n_1;
  wire RAM_reg_1408_1535_18_18_n_1;
  wire RAM_reg_1408_1535_19_19_n_1;
  wire RAM_reg_1408_1535_1_1_n_1;
  wire RAM_reg_1408_1535_20_20_n_1;
  wire RAM_reg_1408_1535_21_21_n_1;
  wire RAM_reg_1408_1535_22_22_n_1;
  wire RAM_reg_1408_1535_23_23_n_1;
  wire RAM_reg_1408_1535_24_24_n_1;
  wire RAM_reg_1408_1535_25_25_n_1;
  wire RAM_reg_1408_1535_26_26_n_1;
  wire RAM_reg_1408_1535_27_27_n_1;
  wire RAM_reg_1408_1535_28_28_n_1;
  wire RAM_reg_1408_1535_29_29_n_1;
  wire RAM_reg_1408_1535_2_2_n_1;
  wire RAM_reg_1408_1535_30_30_n_1;
  wire RAM_reg_1408_1535_31_31_n_1;
  wire RAM_reg_1408_1535_3_3_n_1;
  wire RAM_reg_1408_1535_4_4_n_1;
  wire RAM_reg_1408_1535_5_5_n_1;
  wire RAM_reg_1408_1535_6_6_n_1;
  wire RAM_reg_1408_1535_7_7_n_1;
  wire RAM_reg_1408_1535_8_8_i_1_n_0;
  wire RAM_reg_1408_1535_8_8_n_1;
  wire RAM_reg_1408_1535_9_9_n_1;
  wire RAM_reg_1536_1663_0_0_i_1_n_0;
  wire RAM_reg_1536_1663_0_0_n_1;
  wire RAM_reg_1536_1663_10_10_n_1;
  wire RAM_reg_1536_1663_11_11_n_1;
  wire RAM_reg_1536_1663_12_12_n_1;
  wire RAM_reg_1536_1663_13_13_n_1;
  wire RAM_reg_1536_1663_14_14_n_1;
  wire RAM_reg_1536_1663_15_15_n_1;
  wire RAM_reg_1536_1663_16_16_i_1_n_0;
  wire RAM_reg_1536_1663_16_16_n_1;
  wire RAM_reg_1536_1663_17_17_n_1;
  wire RAM_reg_1536_1663_18_18_n_1;
  wire RAM_reg_1536_1663_19_19_n_1;
  wire RAM_reg_1536_1663_1_1_n_1;
  wire RAM_reg_1536_1663_20_20_n_1;
  wire RAM_reg_1536_1663_21_21_n_1;
  wire RAM_reg_1536_1663_22_22_n_1;
  wire RAM_reg_1536_1663_23_23_n_1;
  wire RAM_reg_1536_1663_24_24_n_1;
  wire RAM_reg_1536_1663_25_25_n_1;
  wire RAM_reg_1536_1663_26_26_n_1;
  wire RAM_reg_1536_1663_27_27_n_1;
  wire RAM_reg_1536_1663_28_28_n_1;
  wire RAM_reg_1536_1663_29_29_n_1;
  wire RAM_reg_1536_1663_2_2_n_1;
  wire RAM_reg_1536_1663_30_30_n_1;
  wire RAM_reg_1536_1663_31_31_n_1;
  wire RAM_reg_1536_1663_3_3_n_1;
  wire RAM_reg_1536_1663_4_4_n_1;
  wire RAM_reg_1536_1663_5_5_n_1;
  wire RAM_reg_1536_1663_6_6_n_1;
  wire RAM_reg_1536_1663_7_7_n_1;
  wire RAM_reg_1536_1663_8_8_i_1_n_0;
  wire RAM_reg_1536_1663_8_8_n_1;
  wire RAM_reg_1536_1663_9_9_n_1;
  wire RAM_reg_1664_1791_0_0_i_1_n_0;
  wire RAM_reg_1664_1791_0_0_n_1;
  wire RAM_reg_1664_1791_10_10_n_1;
  wire RAM_reg_1664_1791_11_11_n_1;
  wire RAM_reg_1664_1791_12_12_n_1;
  wire RAM_reg_1664_1791_13_13_n_1;
  wire RAM_reg_1664_1791_14_14_n_1;
  wire RAM_reg_1664_1791_15_15_n_1;
  wire RAM_reg_1664_1791_16_16_i_1_n_0;
  wire RAM_reg_1664_1791_16_16_n_1;
  wire RAM_reg_1664_1791_17_17_n_1;
  wire RAM_reg_1664_1791_18_18_n_1;
  wire RAM_reg_1664_1791_19_19_n_1;
  wire RAM_reg_1664_1791_1_1_n_1;
  wire RAM_reg_1664_1791_20_20_n_1;
  wire RAM_reg_1664_1791_21_21_n_1;
  wire RAM_reg_1664_1791_22_22_n_1;
  wire RAM_reg_1664_1791_23_23_n_1;
  wire RAM_reg_1664_1791_24_24_n_1;
  wire RAM_reg_1664_1791_25_25_n_1;
  wire RAM_reg_1664_1791_26_26_n_1;
  wire RAM_reg_1664_1791_27_27_n_1;
  wire RAM_reg_1664_1791_28_28_n_1;
  wire RAM_reg_1664_1791_29_29_n_1;
  wire RAM_reg_1664_1791_2_2_n_1;
  wire RAM_reg_1664_1791_30_30_n_1;
  wire RAM_reg_1664_1791_31_31_n_1;
  wire RAM_reg_1664_1791_3_3_n_1;
  wire RAM_reg_1664_1791_4_4_n_1;
  wire RAM_reg_1664_1791_5_5_n_1;
  wire RAM_reg_1664_1791_6_6_n_1;
  wire RAM_reg_1664_1791_7_7_n_1;
  wire RAM_reg_1664_1791_8_8_i_1_n_0;
  wire RAM_reg_1664_1791_8_8_n_1;
  wire RAM_reg_1664_1791_9_9_n_1;
  wire RAM_reg_1792_1919_0_0_i_1_n_0;
  wire RAM_reg_1792_1919_0_0_n_1;
  wire RAM_reg_1792_1919_10_10_n_1;
  wire RAM_reg_1792_1919_11_11_n_1;
  wire RAM_reg_1792_1919_12_12_n_1;
  wire RAM_reg_1792_1919_13_13_n_1;
  wire RAM_reg_1792_1919_14_14_n_1;
  wire RAM_reg_1792_1919_15_15_n_1;
  wire RAM_reg_1792_1919_16_16_i_1_n_0;
  wire RAM_reg_1792_1919_16_16_n_1;
  wire RAM_reg_1792_1919_17_17_n_1;
  wire RAM_reg_1792_1919_18_18_n_1;
  wire RAM_reg_1792_1919_19_19_n_1;
  wire RAM_reg_1792_1919_1_1_n_1;
  wire RAM_reg_1792_1919_20_20_n_1;
  wire RAM_reg_1792_1919_21_21_n_1;
  wire RAM_reg_1792_1919_22_22_n_1;
  wire RAM_reg_1792_1919_23_23_n_1;
  wire RAM_reg_1792_1919_24_24_n_1;
  wire RAM_reg_1792_1919_25_25_n_1;
  wire RAM_reg_1792_1919_26_26_n_1;
  wire RAM_reg_1792_1919_27_27_n_1;
  wire RAM_reg_1792_1919_28_28_n_1;
  wire RAM_reg_1792_1919_29_29_n_1;
  wire RAM_reg_1792_1919_2_2_n_1;
  wire RAM_reg_1792_1919_30_30_n_1;
  wire RAM_reg_1792_1919_31_31_n_1;
  wire RAM_reg_1792_1919_3_3_n_1;
  wire RAM_reg_1792_1919_4_4_n_1;
  wire RAM_reg_1792_1919_5_5_n_1;
  wire RAM_reg_1792_1919_6_6_n_1;
  wire RAM_reg_1792_1919_7_7_n_1;
  wire RAM_reg_1792_1919_8_8_i_1_n_0;
  wire RAM_reg_1792_1919_8_8_n_1;
  wire RAM_reg_1792_1919_9_9_n_1;
  wire RAM_reg_1920_2047_0_0_i_1_n_0;
  wire RAM_reg_1920_2047_0_0_n_1;
  wire RAM_reg_1920_2047_10_10_n_1;
  wire RAM_reg_1920_2047_11_11_n_1;
  wire RAM_reg_1920_2047_12_12_n_1;
  wire RAM_reg_1920_2047_13_13_n_1;
  wire RAM_reg_1920_2047_14_14_n_1;
  wire RAM_reg_1920_2047_15_15_n_1;
  wire RAM_reg_1920_2047_16_16_i_1_n_0;
  wire RAM_reg_1920_2047_16_16_n_1;
  wire RAM_reg_1920_2047_17_17_n_1;
  wire RAM_reg_1920_2047_18_18_n_1;
  wire RAM_reg_1920_2047_19_19_n_1;
  wire RAM_reg_1920_2047_1_1_n_1;
  wire RAM_reg_1920_2047_20_20_n_1;
  wire RAM_reg_1920_2047_21_21_n_1;
  wire RAM_reg_1920_2047_22_22_n_1;
  wire RAM_reg_1920_2047_23_23_n_1;
  wire RAM_reg_1920_2047_24_24_n_1;
  wire RAM_reg_1920_2047_25_25_n_1;
  wire RAM_reg_1920_2047_26_26_n_1;
  wire RAM_reg_1920_2047_27_27_n_1;
  wire RAM_reg_1920_2047_28_28_n_1;
  wire RAM_reg_1920_2047_29_29_n_1;
  wire RAM_reg_1920_2047_2_2_n_1;
  wire RAM_reg_1920_2047_30_30_n_1;
  wire RAM_reg_1920_2047_31_31_n_1;
  wire RAM_reg_1920_2047_3_3_n_1;
  wire RAM_reg_1920_2047_4_4_n_1;
  wire RAM_reg_1920_2047_5_5_n_1;
  wire RAM_reg_1920_2047_6_6_n_1;
  wire RAM_reg_1920_2047_7_7_n_1;
  wire RAM_reg_1920_2047_8_8_i_1_n_0;
  wire RAM_reg_1920_2047_8_8_n_1;
  wire RAM_reg_1920_2047_9_9_n_1;
  wire RAM_reg_256_383_0_0_i_1_n_0;
  wire RAM_reg_256_383_0_0_n_0;
  wire RAM_reg_256_383_0_0_n_1;
  wire RAM_reg_256_383_10_10_n_0;
  wire RAM_reg_256_383_10_10_n_1;
  wire RAM_reg_256_383_11_11_n_0;
  wire RAM_reg_256_383_11_11_n_1;
  wire RAM_reg_256_383_12_12_n_0;
  wire RAM_reg_256_383_12_12_n_1;
  wire RAM_reg_256_383_13_13_n_0;
  wire RAM_reg_256_383_13_13_n_1;
  wire RAM_reg_256_383_14_14_n_0;
  wire RAM_reg_256_383_14_14_n_1;
  wire RAM_reg_256_383_15_15_n_0;
  wire RAM_reg_256_383_15_15_n_1;
  wire RAM_reg_256_383_16_16_i_1_n_0;
  wire RAM_reg_256_383_16_16_n_0;
  wire RAM_reg_256_383_16_16_n_1;
  wire RAM_reg_256_383_17_17_n_0;
  wire RAM_reg_256_383_17_17_n_1;
  wire RAM_reg_256_383_18_18_n_0;
  wire RAM_reg_256_383_18_18_n_1;
  wire RAM_reg_256_383_19_19_n_0;
  wire RAM_reg_256_383_19_19_n_1;
  wire RAM_reg_256_383_1_1_n_0;
  wire RAM_reg_256_383_1_1_n_1;
  wire RAM_reg_256_383_20_20_n_0;
  wire RAM_reg_256_383_20_20_n_1;
  wire RAM_reg_256_383_21_21_n_0;
  wire RAM_reg_256_383_21_21_n_1;
  wire RAM_reg_256_383_22_22_n_0;
  wire RAM_reg_256_383_22_22_n_1;
  wire RAM_reg_256_383_23_23_n_0;
  wire RAM_reg_256_383_23_23_n_1;
  wire RAM_reg_256_383_24_24_n_0;
  wire RAM_reg_256_383_24_24_n_1;
  wire RAM_reg_256_383_25_25_n_0;
  wire RAM_reg_256_383_25_25_n_1;
  wire RAM_reg_256_383_26_26_n_0;
  wire RAM_reg_256_383_26_26_n_1;
  wire RAM_reg_256_383_27_27_n_0;
  wire RAM_reg_256_383_27_27_n_1;
  wire RAM_reg_256_383_28_28_n_0;
  wire RAM_reg_256_383_28_28_n_1;
  wire RAM_reg_256_383_29_29_n_0;
  wire RAM_reg_256_383_29_29_n_1;
  wire RAM_reg_256_383_2_2_n_0;
  wire RAM_reg_256_383_2_2_n_1;
  wire RAM_reg_256_383_30_30_n_0;
  wire RAM_reg_256_383_30_30_n_1;
  wire RAM_reg_256_383_31_31_n_0;
  wire RAM_reg_256_383_31_31_n_1;
  wire RAM_reg_256_383_3_3_n_0;
  wire RAM_reg_256_383_3_3_n_1;
  wire RAM_reg_256_383_4_4_n_0;
  wire RAM_reg_256_383_4_4_n_1;
  wire RAM_reg_256_383_5_5_n_0;
  wire RAM_reg_256_383_5_5_n_1;
  wire RAM_reg_256_383_6_6_n_0;
  wire RAM_reg_256_383_6_6_n_1;
  wire RAM_reg_256_383_7_7_n_0;
  wire RAM_reg_256_383_7_7_n_1;
  wire RAM_reg_256_383_8_8_i_1_n_0;
  wire RAM_reg_256_383_8_8_n_0;
  wire RAM_reg_256_383_8_8_n_1;
  wire RAM_reg_256_383_9_9_n_0;
  wire RAM_reg_256_383_9_9_n_1;
  wire RAM_reg_384_511_0_0_i_1_n_0;
  wire RAM_reg_384_511_0_0_n_0;
  wire RAM_reg_384_511_0_0_n_1;
  wire RAM_reg_384_511_10_10_n_0;
  wire RAM_reg_384_511_10_10_n_1;
  wire RAM_reg_384_511_11_11_n_0;
  wire RAM_reg_384_511_11_11_n_1;
  wire RAM_reg_384_511_12_12_n_0;
  wire RAM_reg_384_511_12_12_n_1;
  wire RAM_reg_384_511_13_13_n_0;
  wire RAM_reg_384_511_13_13_n_1;
  wire RAM_reg_384_511_14_14_n_0;
  wire RAM_reg_384_511_14_14_n_1;
  wire RAM_reg_384_511_15_15_n_0;
  wire RAM_reg_384_511_15_15_n_1;
  wire RAM_reg_384_511_16_16_i_1_n_0;
  wire RAM_reg_384_511_16_16_n_0;
  wire RAM_reg_384_511_16_16_n_1;
  wire RAM_reg_384_511_17_17_n_0;
  wire RAM_reg_384_511_17_17_n_1;
  wire RAM_reg_384_511_18_18_n_0;
  wire RAM_reg_384_511_18_18_n_1;
  wire RAM_reg_384_511_19_19_n_0;
  wire RAM_reg_384_511_19_19_n_1;
  wire RAM_reg_384_511_1_1_n_0;
  wire RAM_reg_384_511_1_1_n_1;
  wire RAM_reg_384_511_20_20_n_0;
  wire RAM_reg_384_511_20_20_n_1;
  wire RAM_reg_384_511_21_21_n_0;
  wire RAM_reg_384_511_21_21_n_1;
  wire RAM_reg_384_511_22_22_n_0;
  wire RAM_reg_384_511_22_22_n_1;
  wire RAM_reg_384_511_23_23_n_0;
  wire RAM_reg_384_511_23_23_n_1;
  wire RAM_reg_384_511_24_24_n_0;
  wire RAM_reg_384_511_24_24_n_1;
  wire RAM_reg_384_511_25_25_n_0;
  wire RAM_reg_384_511_25_25_n_1;
  wire RAM_reg_384_511_26_26_n_0;
  wire RAM_reg_384_511_26_26_n_1;
  wire RAM_reg_384_511_27_27_n_0;
  wire RAM_reg_384_511_27_27_n_1;
  wire RAM_reg_384_511_28_28_n_0;
  wire RAM_reg_384_511_28_28_n_1;
  wire RAM_reg_384_511_29_29_n_0;
  wire RAM_reg_384_511_29_29_n_1;
  wire RAM_reg_384_511_2_2_n_0;
  wire RAM_reg_384_511_2_2_n_1;
  wire RAM_reg_384_511_30_30_n_0;
  wire RAM_reg_384_511_30_30_n_1;
  wire RAM_reg_384_511_31_31_n_0;
  wire RAM_reg_384_511_31_31_n_1;
  wire RAM_reg_384_511_3_3_n_0;
  wire RAM_reg_384_511_3_3_n_1;
  wire RAM_reg_384_511_4_4_n_0;
  wire RAM_reg_384_511_4_4_n_1;
  wire RAM_reg_384_511_5_5_n_0;
  wire RAM_reg_384_511_5_5_n_1;
  wire RAM_reg_384_511_6_6_n_0;
  wire RAM_reg_384_511_6_6_n_1;
  wire RAM_reg_384_511_7_7_n_0;
  wire RAM_reg_384_511_7_7_n_1;
  wire RAM_reg_384_511_8_8_i_1_n_0;
  wire RAM_reg_384_511_8_8_n_0;
  wire RAM_reg_384_511_8_8_n_1;
  wire RAM_reg_384_511_9_9_n_0;
  wire RAM_reg_384_511_9_9_n_1;
  wire RAM_reg_512_639_0_0_i_1_n_0;
  wire RAM_reg_512_639_0_0_n_0;
  wire RAM_reg_512_639_0_0_n_1;
  wire RAM_reg_512_639_10_10_n_0;
  wire RAM_reg_512_639_10_10_n_1;
  wire RAM_reg_512_639_11_11_n_0;
  wire RAM_reg_512_639_11_11_n_1;
  wire RAM_reg_512_639_12_12_n_0;
  wire RAM_reg_512_639_12_12_n_1;
  wire RAM_reg_512_639_13_13_n_0;
  wire RAM_reg_512_639_13_13_n_1;
  wire RAM_reg_512_639_14_14_n_0;
  wire RAM_reg_512_639_14_14_n_1;
  wire RAM_reg_512_639_15_15_n_0;
  wire RAM_reg_512_639_15_15_n_1;
  wire RAM_reg_512_639_16_16_i_1_n_0;
  wire RAM_reg_512_639_16_16_n_0;
  wire RAM_reg_512_639_16_16_n_1;
  wire RAM_reg_512_639_17_17_n_0;
  wire RAM_reg_512_639_17_17_n_1;
  wire RAM_reg_512_639_18_18_n_0;
  wire RAM_reg_512_639_18_18_n_1;
  wire RAM_reg_512_639_19_19_n_0;
  wire RAM_reg_512_639_19_19_n_1;
  wire RAM_reg_512_639_1_1_n_0;
  wire RAM_reg_512_639_1_1_n_1;
  wire RAM_reg_512_639_20_20_n_0;
  wire RAM_reg_512_639_20_20_n_1;
  wire RAM_reg_512_639_21_21_n_0;
  wire RAM_reg_512_639_21_21_n_1;
  wire RAM_reg_512_639_22_22_n_0;
  wire RAM_reg_512_639_22_22_n_1;
  wire RAM_reg_512_639_23_23_n_0;
  wire RAM_reg_512_639_23_23_n_1;
  wire RAM_reg_512_639_24_24_n_0;
  wire RAM_reg_512_639_24_24_n_1;
  wire RAM_reg_512_639_25_25_n_0;
  wire RAM_reg_512_639_25_25_n_1;
  wire RAM_reg_512_639_26_26_n_0;
  wire RAM_reg_512_639_26_26_n_1;
  wire RAM_reg_512_639_27_27_n_0;
  wire RAM_reg_512_639_27_27_n_1;
  wire RAM_reg_512_639_28_28_n_0;
  wire RAM_reg_512_639_28_28_n_1;
  wire RAM_reg_512_639_29_29_n_0;
  wire RAM_reg_512_639_29_29_n_1;
  wire RAM_reg_512_639_2_2_n_0;
  wire RAM_reg_512_639_2_2_n_1;
  wire RAM_reg_512_639_30_30_n_0;
  wire RAM_reg_512_639_30_30_n_1;
  wire RAM_reg_512_639_31_31_n_0;
  wire RAM_reg_512_639_31_31_n_1;
  wire RAM_reg_512_639_3_3_n_0;
  wire RAM_reg_512_639_3_3_n_1;
  wire RAM_reg_512_639_4_4_n_0;
  wire RAM_reg_512_639_4_4_n_1;
  wire RAM_reg_512_639_5_5_n_0;
  wire RAM_reg_512_639_5_5_n_1;
  wire RAM_reg_512_639_6_6_n_0;
  wire RAM_reg_512_639_6_6_n_1;
  wire RAM_reg_512_639_7_7_n_0;
  wire RAM_reg_512_639_7_7_n_1;
  wire RAM_reg_512_639_8_8_i_1_n_0;
  wire RAM_reg_512_639_8_8_n_0;
  wire RAM_reg_512_639_8_8_n_1;
  wire RAM_reg_512_639_9_9_n_0;
  wire RAM_reg_512_639_9_9_n_1;
  wire RAM_reg_640_767_0_0_i_1_n_0;
  wire RAM_reg_640_767_0_0_n_0;
  wire RAM_reg_640_767_0_0_n_1;
  wire RAM_reg_640_767_10_10_n_0;
  wire RAM_reg_640_767_10_10_n_1;
  wire RAM_reg_640_767_11_11_n_0;
  wire RAM_reg_640_767_11_11_n_1;
  wire RAM_reg_640_767_12_12_n_0;
  wire RAM_reg_640_767_12_12_n_1;
  wire RAM_reg_640_767_13_13_n_0;
  wire RAM_reg_640_767_13_13_n_1;
  wire RAM_reg_640_767_14_14_n_0;
  wire RAM_reg_640_767_14_14_n_1;
  wire RAM_reg_640_767_15_15_n_0;
  wire RAM_reg_640_767_15_15_n_1;
  wire RAM_reg_640_767_16_16_i_1_n_0;
  wire RAM_reg_640_767_16_16_n_0;
  wire RAM_reg_640_767_16_16_n_1;
  wire RAM_reg_640_767_17_17_n_0;
  wire RAM_reg_640_767_17_17_n_1;
  wire RAM_reg_640_767_18_18_n_0;
  wire RAM_reg_640_767_18_18_n_1;
  wire RAM_reg_640_767_19_19_n_0;
  wire RAM_reg_640_767_19_19_n_1;
  wire RAM_reg_640_767_1_1_n_0;
  wire RAM_reg_640_767_1_1_n_1;
  wire RAM_reg_640_767_20_20_n_0;
  wire RAM_reg_640_767_20_20_n_1;
  wire RAM_reg_640_767_21_21_n_0;
  wire RAM_reg_640_767_21_21_n_1;
  wire RAM_reg_640_767_22_22_n_0;
  wire RAM_reg_640_767_22_22_n_1;
  wire RAM_reg_640_767_23_23_n_0;
  wire RAM_reg_640_767_23_23_n_1;
  wire RAM_reg_640_767_24_24_n_0;
  wire RAM_reg_640_767_24_24_n_1;
  wire RAM_reg_640_767_25_25_n_0;
  wire RAM_reg_640_767_25_25_n_1;
  wire RAM_reg_640_767_26_26_n_0;
  wire RAM_reg_640_767_26_26_n_1;
  wire RAM_reg_640_767_27_27_n_0;
  wire RAM_reg_640_767_27_27_n_1;
  wire RAM_reg_640_767_28_28_n_0;
  wire RAM_reg_640_767_28_28_n_1;
  wire RAM_reg_640_767_29_29_n_0;
  wire RAM_reg_640_767_29_29_n_1;
  wire RAM_reg_640_767_2_2_n_0;
  wire RAM_reg_640_767_2_2_n_1;
  wire RAM_reg_640_767_30_30_n_0;
  wire RAM_reg_640_767_30_30_n_1;
  wire RAM_reg_640_767_31_31_n_0;
  wire RAM_reg_640_767_31_31_n_1;
  wire RAM_reg_640_767_3_3_n_0;
  wire RAM_reg_640_767_3_3_n_1;
  wire RAM_reg_640_767_4_4_n_0;
  wire RAM_reg_640_767_4_4_n_1;
  wire RAM_reg_640_767_5_5_n_0;
  wire RAM_reg_640_767_5_5_n_1;
  wire RAM_reg_640_767_6_6_n_0;
  wire RAM_reg_640_767_6_6_n_1;
  wire RAM_reg_640_767_7_7_n_0;
  wire RAM_reg_640_767_7_7_n_1;
  wire RAM_reg_640_767_8_8_i_1_n_0;
  wire RAM_reg_640_767_8_8_n_0;
  wire RAM_reg_640_767_8_8_n_1;
  wire RAM_reg_640_767_9_9_n_0;
  wire RAM_reg_640_767_9_9_n_1;
  wire RAM_reg_768_895_0_0_i_1_n_0;
  wire RAM_reg_768_895_0_0_n_0;
  wire RAM_reg_768_895_0_0_n_1;
  wire RAM_reg_768_895_10_10_n_0;
  wire RAM_reg_768_895_10_10_n_1;
  wire RAM_reg_768_895_11_11_n_0;
  wire RAM_reg_768_895_11_11_n_1;
  wire RAM_reg_768_895_12_12_n_0;
  wire RAM_reg_768_895_12_12_n_1;
  wire RAM_reg_768_895_13_13_n_0;
  wire RAM_reg_768_895_13_13_n_1;
  wire RAM_reg_768_895_14_14_n_0;
  wire RAM_reg_768_895_14_14_n_1;
  wire RAM_reg_768_895_15_15_n_0;
  wire RAM_reg_768_895_15_15_n_1;
  wire RAM_reg_768_895_16_16_i_1_n_0;
  wire RAM_reg_768_895_16_16_n_0;
  wire RAM_reg_768_895_16_16_n_1;
  wire RAM_reg_768_895_17_17_n_0;
  wire RAM_reg_768_895_17_17_n_1;
  wire RAM_reg_768_895_18_18_n_0;
  wire RAM_reg_768_895_18_18_n_1;
  wire RAM_reg_768_895_19_19_n_0;
  wire RAM_reg_768_895_19_19_n_1;
  wire RAM_reg_768_895_1_1_n_0;
  wire RAM_reg_768_895_1_1_n_1;
  wire RAM_reg_768_895_20_20_n_0;
  wire RAM_reg_768_895_20_20_n_1;
  wire RAM_reg_768_895_21_21_n_0;
  wire RAM_reg_768_895_21_21_n_1;
  wire RAM_reg_768_895_22_22_n_0;
  wire RAM_reg_768_895_22_22_n_1;
  wire RAM_reg_768_895_23_23_n_0;
  wire RAM_reg_768_895_23_23_n_1;
  wire RAM_reg_768_895_24_24_n_0;
  wire RAM_reg_768_895_24_24_n_1;
  wire RAM_reg_768_895_25_25_n_0;
  wire RAM_reg_768_895_25_25_n_1;
  wire RAM_reg_768_895_26_26_n_0;
  wire RAM_reg_768_895_26_26_n_1;
  wire RAM_reg_768_895_27_27_n_0;
  wire RAM_reg_768_895_27_27_n_1;
  wire RAM_reg_768_895_28_28_n_0;
  wire RAM_reg_768_895_28_28_n_1;
  wire RAM_reg_768_895_29_29_n_0;
  wire RAM_reg_768_895_29_29_n_1;
  wire RAM_reg_768_895_2_2_n_0;
  wire RAM_reg_768_895_2_2_n_1;
  wire RAM_reg_768_895_30_30_n_0;
  wire RAM_reg_768_895_30_30_n_1;
  wire RAM_reg_768_895_31_31_n_0;
  wire RAM_reg_768_895_31_31_n_1;
  wire RAM_reg_768_895_3_3_n_0;
  wire RAM_reg_768_895_3_3_n_1;
  wire RAM_reg_768_895_4_4_n_0;
  wire RAM_reg_768_895_4_4_n_1;
  wire RAM_reg_768_895_5_5_n_0;
  wire RAM_reg_768_895_5_5_n_1;
  wire RAM_reg_768_895_6_6_n_0;
  wire RAM_reg_768_895_6_6_n_1;
  wire RAM_reg_768_895_7_7_n_0;
  wire RAM_reg_768_895_7_7_n_1;
  wire RAM_reg_768_895_8_8_i_1_n_0;
  wire RAM_reg_768_895_8_8_n_0;
  wire RAM_reg_768_895_8_8_n_1;
  wire RAM_reg_768_895_9_9_n_0;
  wire RAM_reg_768_895_9_9_n_1;
  wire RAM_reg_896_1023_0_0_i_1_n_0;
  wire RAM_reg_896_1023_0_0_n_0;
  wire RAM_reg_896_1023_0_0_n_1;
  wire RAM_reg_896_1023_10_10_n_0;
  wire RAM_reg_896_1023_10_10_n_1;
  wire RAM_reg_896_1023_11_11_n_0;
  wire RAM_reg_896_1023_11_11_n_1;
  wire RAM_reg_896_1023_12_12_n_0;
  wire RAM_reg_896_1023_12_12_n_1;
  wire RAM_reg_896_1023_13_13_n_0;
  wire RAM_reg_896_1023_13_13_n_1;
  wire RAM_reg_896_1023_14_14_n_0;
  wire RAM_reg_896_1023_14_14_n_1;
  wire RAM_reg_896_1023_15_15_n_0;
  wire RAM_reg_896_1023_15_15_n_1;
  wire RAM_reg_896_1023_16_16_i_1_n_0;
  wire RAM_reg_896_1023_16_16_n_0;
  wire RAM_reg_896_1023_16_16_n_1;
  wire RAM_reg_896_1023_17_17_n_0;
  wire RAM_reg_896_1023_17_17_n_1;
  wire RAM_reg_896_1023_18_18_n_0;
  wire RAM_reg_896_1023_18_18_n_1;
  wire RAM_reg_896_1023_19_19_n_0;
  wire RAM_reg_896_1023_19_19_n_1;
  wire RAM_reg_896_1023_1_1_n_0;
  wire RAM_reg_896_1023_1_1_n_1;
  wire RAM_reg_896_1023_20_20_n_0;
  wire RAM_reg_896_1023_20_20_n_1;
  wire RAM_reg_896_1023_21_21_n_0;
  wire RAM_reg_896_1023_21_21_n_1;
  wire RAM_reg_896_1023_22_22_n_0;
  wire RAM_reg_896_1023_22_22_n_1;
  wire RAM_reg_896_1023_23_23_n_0;
  wire RAM_reg_896_1023_23_23_n_1;
  wire RAM_reg_896_1023_24_24_n_0;
  wire RAM_reg_896_1023_24_24_n_1;
  wire RAM_reg_896_1023_25_25_n_0;
  wire RAM_reg_896_1023_25_25_n_1;
  wire RAM_reg_896_1023_26_26_n_0;
  wire RAM_reg_896_1023_26_26_n_1;
  wire RAM_reg_896_1023_27_27_n_0;
  wire RAM_reg_896_1023_27_27_n_1;
  wire RAM_reg_896_1023_28_28_n_0;
  wire RAM_reg_896_1023_28_28_n_1;
  wire RAM_reg_896_1023_29_29_n_0;
  wire RAM_reg_896_1023_29_29_n_1;
  wire RAM_reg_896_1023_2_2_n_0;
  wire RAM_reg_896_1023_2_2_n_1;
  wire RAM_reg_896_1023_30_30_n_0;
  wire RAM_reg_896_1023_30_30_n_1;
  wire RAM_reg_896_1023_31_31_n_0;
  wire RAM_reg_896_1023_31_31_n_1;
  wire RAM_reg_896_1023_3_3_n_0;
  wire RAM_reg_896_1023_3_3_n_1;
  wire RAM_reg_896_1023_4_4_n_0;
  wire RAM_reg_896_1023_4_4_n_1;
  wire RAM_reg_896_1023_5_5_n_0;
  wire RAM_reg_896_1023_5_5_n_1;
  wire RAM_reg_896_1023_6_6_n_0;
  wire RAM_reg_896_1023_6_6_n_1;
  wire RAM_reg_896_1023_7_7_n_0;
  wire RAM_reg_896_1023_7_7_n_1;
  wire RAM_reg_896_1023_8_8_i_1_n_0;
  wire RAM_reg_896_1023_8_8_n_0;
  wire RAM_reg_896_1023_8_8_n_1;
  wire RAM_reg_896_1023_9_9_n_0;
  wire RAM_reg_896_1023_9_9_n_1;
  wire [13:2]ad_mem;
  wire [0:0]\c_reg[0] ;
  wire \d_reg_reg[15]_i_4_n_0 ;
  wire \d_reg_reg[23]_i_3_n_0 ;
  wire \d_reg_reg[31]_i_7_n_0 ;
  wire [31:0]douta0;
  wire \douta_reg[0]_i_2_n_0 ;
  wire \douta_reg[0]_i_3_n_0 ;
  wire \douta_reg[0]_i_4_n_0 ;
  wire \douta_reg[0]_i_5_n_0 ;
  wire \douta_reg[0]_i_6_n_0 ;
  wire \douta_reg[0]_i_7_n_0 ;
  wire \douta_reg[10]_i_2_n_0 ;
  wire \douta_reg[10]_i_3_n_0 ;
  wire \douta_reg[10]_i_4_n_0 ;
  wire \douta_reg[10]_i_5_n_0 ;
  wire \douta_reg[10]_i_6_n_0 ;
  wire \douta_reg[10]_i_7_n_0 ;
  wire \douta_reg[11]_i_2_n_0 ;
  wire \douta_reg[11]_i_3_n_0 ;
  wire \douta_reg[11]_i_4_n_0 ;
  wire \douta_reg[11]_i_5_n_0 ;
  wire \douta_reg[11]_i_6_n_0 ;
  wire \douta_reg[11]_i_7_n_0 ;
  wire \douta_reg[12]_i_2_n_0 ;
  wire \douta_reg[12]_i_3_n_0 ;
  wire \douta_reg[12]_i_4_n_0 ;
  wire \douta_reg[12]_i_5_n_0 ;
  wire \douta_reg[12]_i_6_n_0 ;
  wire \douta_reg[12]_i_7_n_0 ;
  wire \douta_reg[13]_i_2_n_0 ;
  wire \douta_reg[13]_i_3_n_0 ;
  wire \douta_reg[13]_i_4_n_0 ;
  wire \douta_reg[13]_i_5_n_0 ;
  wire \douta_reg[13]_i_6_n_0 ;
  wire \douta_reg[13]_i_7_n_0 ;
  wire \douta_reg[14]_i_2_n_0 ;
  wire \douta_reg[14]_i_3_n_0 ;
  wire \douta_reg[14]_i_4_n_0 ;
  wire \douta_reg[14]_i_5_n_0 ;
  wire \douta_reg[14]_i_6_n_0 ;
  wire \douta_reg[14]_i_7_n_0 ;
  wire \douta_reg[15]_i_2_n_0 ;
  wire \douta_reg[15]_i_3_n_0 ;
  wire \douta_reg[15]_i_4_n_0 ;
  wire \douta_reg[15]_i_5_n_0 ;
  wire \douta_reg[15]_i_6_n_0 ;
  wire \douta_reg[15]_i_7_n_0 ;
  wire \douta_reg[16]_i_2_n_0 ;
  wire \douta_reg[16]_i_3_n_0 ;
  wire \douta_reg[16]_i_4_n_0 ;
  wire \douta_reg[16]_i_5_n_0 ;
  wire \douta_reg[16]_i_6_n_0 ;
  wire \douta_reg[16]_i_7_n_0 ;
  wire \douta_reg[17]_i_2_n_0 ;
  wire \douta_reg[17]_i_3_n_0 ;
  wire \douta_reg[17]_i_4_n_0 ;
  wire \douta_reg[17]_i_5_n_0 ;
  wire \douta_reg[17]_i_6_n_0 ;
  wire \douta_reg[17]_i_7_n_0 ;
  wire \douta_reg[18]_i_2_n_0 ;
  wire \douta_reg[18]_i_3_n_0 ;
  wire \douta_reg[18]_i_4_n_0 ;
  wire \douta_reg[18]_i_5_n_0 ;
  wire \douta_reg[18]_i_6_n_0 ;
  wire \douta_reg[18]_i_7_n_0 ;
  wire \douta_reg[19]_i_2_n_0 ;
  wire \douta_reg[19]_i_3_n_0 ;
  wire \douta_reg[19]_i_4_n_0 ;
  wire \douta_reg[19]_i_5_n_0 ;
  wire \douta_reg[19]_i_6_n_0 ;
  wire \douta_reg[19]_i_7_n_0 ;
  wire \douta_reg[1]_i_2_n_0 ;
  wire \douta_reg[1]_i_3_n_0 ;
  wire \douta_reg[1]_i_4_n_0 ;
  wire \douta_reg[1]_i_5_n_0 ;
  wire \douta_reg[1]_i_6_n_0 ;
  wire \douta_reg[1]_i_7_n_0 ;
  wire \douta_reg[20]_i_2_n_0 ;
  wire \douta_reg[20]_i_3_n_0 ;
  wire \douta_reg[20]_i_4_n_0 ;
  wire \douta_reg[20]_i_5_n_0 ;
  wire \douta_reg[20]_i_6_n_0 ;
  wire \douta_reg[20]_i_7_n_0 ;
  wire \douta_reg[21]_i_2_n_0 ;
  wire \douta_reg[21]_i_3_n_0 ;
  wire \douta_reg[21]_i_4_n_0 ;
  wire \douta_reg[21]_i_5_n_0 ;
  wire \douta_reg[21]_i_6_n_0 ;
  wire \douta_reg[21]_i_7_n_0 ;
  wire \douta_reg[22]_i_2_n_0 ;
  wire \douta_reg[22]_i_3_n_0 ;
  wire \douta_reg[22]_i_4_n_0 ;
  wire \douta_reg[22]_i_5_n_0 ;
  wire \douta_reg[22]_i_6_n_0 ;
  wire \douta_reg[22]_i_7_n_0 ;
  wire \douta_reg[23]_i_2_n_0 ;
  wire \douta_reg[23]_i_3_n_0 ;
  wire \douta_reg[23]_i_4_n_0 ;
  wire \douta_reg[23]_i_5_n_0 ;
  wire \douta_reg[23]_i_6_n_0 ;
  wire \douta_reg[23]_i_7_n_0 ;
  wire \douta_reg[24]_i_2_n_0 ;
  wire \douta_reg[24]_i_3_n_0 ;
  wire \douta_reg[24]_i_4_n_0 ;
  wire \douta_reg[24]_i_5_n_0 ;
  wire \douta_reg[24]_i_6_n_0 ;
  wire \douta_reg[24]_i_7_n_0 ;
  wire \douta_reg[25]_i_2_n_0 ;
  wire \douta_reg[25]_i_3_n_0 ;
  wire \douta_reg[25]_i_4_n_0 ;
  wire \douta_reg[25]_i_5_n_0 ;
  wire \douta_reg[25]_i_6_n_0 ;
  wire \douta_reg[25]_i_7_n_0 ;
  wire \douta_reg[26]_i_2_n_0 ;
  wire \douta_reg[26]_i_3_n_0 ;
  wire \douta_reg[26]_i_4_n_0 ;
  wire \douta_reg[26]_i_5_n_0 ;
  wire \douta_reg[26]_i_6_n_0 ;
  wire \douta_reg[26]_i_7_n_0 ;
  wire \douta_reg[27]_i_2_n_0 ;
  wire \douta_reg[27]_i_3_n_0 ;
  wire \douta_reg[27]_i_4_n_0 ;
  wire \douta_reg[27]_i_5_n_0 ;
  wire \douta_reg[27]_i_6_n_0 ;
  wire \douta_reg[27]_i_7_n_0 ;
  wire \douta_reg[28]_i_2_n_0 ;
  wire \douta_reg[28]_i_3_n_0 ;
  wire \douta_reg[28]_i_4_n_0 ;
  wire \douta_reg[28]_i_5_n_0 ;
  wire \douta_reg[28]_i_6_n_0 ;
  wire \douta_reg[28]_i_7_n_0 ;
  wire \douta_reg[29]_i_2_n_0 ;
  wire \douta_reg[29]_i_3_n_0 ;
  wire \douta_reg[29]_i_4_n_0 ;
  wire \douta_reg[29]_i_5_n_0 ;
  wire \douta_reg[29]_i_6_n_0 ;
  wire \douta_reg[29]_i_7_n_0 ;
  wire \douta_reg[2]_i_2_n_0 ;
  wire \douta_reg[2]_i_3_n_0 ;
  wire \douta_reg[2]_i_4_n_0 ;
  wire \douta_reg[2]_i_5_n_0 ;
  wire \douta_reg[2]_i_6_n_0 ;
  wire \douta_reg[2]_i_7_n_0 ;
  wire \douta_reg[30]_i_2_n_0 ;
  wire \douta_reg[30]_i_3_n_0 ;
  wire \douta_reg[30]_i_4_n_0 ;
  wire \douta_reg[30]_i_5_n_0 ;
  wire \douta_reg[30]_i_6_n_0 ;
  wire \douta_reg[30]_i_7_n_0 ;
  wire \douta_reg[31]_i_3_n_0 ;
  wire \douta_reg[31]_i_4_n_0 ;
  wire \douta_reg[31]_i_6_n_0 ;
  wire \douta_reg[31]_i_7_n_0 ;
  wire \douta_reg[31]_i_8_n_0 ;
  wire \douta_reg[31]_i_9_n_0 ;
  wire \douta_reg[3]_i_2_n_0 ;
  wire \douta_reg[3]_i_3_n_0 ;
  wire \douta_reg[3]_i_4_n_0 ;
  wire \douta_reg[3]_i_5_n_0 ;
  wire \douta_reg[3]_i_6_n_0 ;
  wire \douta_reg[3]_i_7_n_0 ;
  wire \douta_reg[4]_i_2_n_0 ;
  wire \douta_reg[4]_i_3_n_0 ;
  wire \douta_reg[4]_i_4_n_0 ;
  wire \douta_reg[4]_i_5_n_0 ;
  wire \douta_reg[4]_i_6_n_0 ;
  wire \douta_reg[4]_i_7_n_0 ;
  wire \douta_reg[5]_i_2_n_0 ;
  wire \douta_reg[5]_i_3_n_0 ;
  wire \douta_reg[5]_i_4_n_0 ;
  wire \douta_reg[5]_i_5_n_0 ;
  wire \douta_reg[5]_i_6_n_0 ;
  wire \douta_reg[5]_i_7_n_0 ;
  wire \douta_reg[6]_i_2_n_0 ;
  wire \douta_reg[6]_i_3_n_0 ;
  wire \douta_reg[6]_i_4_n_0 ;
  wire \douta_reg[6]_i_5_n_0 ;
  wire \douta_reg[6]_i_6_n_0 ;
  wire \douta_reg[6]_i_7_n_0 ;
  wire \douta_reg[7]_i_2_n_0 ;
  wire \douta_reg[7]_i_3_n_0 ;
  wire \douta_reg[7]_i_4_n_0 ;
  wire \douta_reg[7]_i_5_n_0 ;
  wire \douta_reg[7]_i_6_n_0 ;
  wire \douta_reg[7]_i_7_n_0 ;
  wire \douta_reg[8]_i_2_n_0 ;
  wire \douta_reg[8]_i_3_n_0 ;
  wire \douta_reg[8]_i_4_n_0 ;
  wire \douta_reg[8]_i_5_n_0 ;
  wire \douta_reg[8]_i_6_n_0 ;
  wire \douta_reg[8]_i_7_n_0 ;
  wire \douta_reg[9]_i_2_n_0 ;
  wire \douta_reg[9]_i_3_n_0 ;
  wire \douta_reg[9]_i_4_n_0 ;
  wire \douta_reg[9]_i_5_n_0 ;
  wire \douta_reg[9]_i_6_n_0 ;
  wire \douta_reg[9]_i_7_n_0 ;
  wire [1:0]flags_master;
  wire \leds_OBUF[0]_inst_i_12_n_0 ;
  wire \leds_OBUF[0]_inst_i_13_n_0 ;
  wire \leds_OBUF[0]_inst_i_8_n_0 ;
  wire \leds_OBUF[0]_inst_i_9_n_0 ;
  wire \leds_OBUF[10]_inst_i_12_n_0 ;
  wire \leds_OBUF[10]_inst_i_13_n_0 ;
  wire \leds_OBUF[10]_inst_i_8_n_0 ;
  wire \leds_OBUF[10]_inst_i_9_n_0 ;
  wire \leds_OBUF[11]_inst_i_12_n_0 ;
  wire \leds_OBUF[11]_inst_i_13_n_0 ;
  wire \leds_OBUF[11]_inst_i_8_n_0 ;
  wire \leds_OBUF[11]_inst_i_9_n_0 ;
  wire \leds_OBUF[12]_inst_i_12_n_0 ;
  wire \leds_OBUF[12]_inst_i_13_n_0 ;
  wire \leds_OBUF[12]_inst_i_8_n_0 ;
  wire \leds_OBUF[12]_inst_i_9_n_0 ;
  wire \leds_OBUF[13]_inst_i_12_n_0 ;
  wire \leds_OBUF[13]_inst_i_13_n_0 ;
  wire \leds_OBUF[13]_inst_i_8_n_0 ;
  wire \leds_OBUF[13]_inst_i_9_n_0 ;
  wire \leds_OBUF[14]_inst_i_12_n_0 ;
  wire \leds_OBUF[14]_inst_i_13_n_0 ;
  wire \leds_OBUF[14]_inst_i_8_n_0 ;
  wire \leds_OBUF[14]_inst_i_9_n_0 ;
  wire \leds_OBUF[15]_inst_i_12_n_0 ;
  wire \leds_OBUF[15]_inst_i_13_n_0 ;
  wire \leds_OBUF[15]_inst_i_8_n_0 ;
  wire \leds_OBUF[15]_inst_i_9_n_0 ;
  wire \leds_OBUF[1]_inst_i_12_n_0 ;
  wire \leds_OBUF[1]_inst_i_13_n_0 ;
  wire \leds_OBUF[1]_inst_i_8_n_0 ;
  wire \leds_OBUF[1]_inst_i_9_n_0 ;
  wire \leds_OBUF[2]_inst_i_12_n_0 ;
  wire \leds_OBUF[2]_inst_i_13_n_0 ;
  wire \leds_OBUF[2]_inst_i_8_n_0 ;
  wire \leds_OBUF[2]_inst_i_9_n_0 ;
  wire \leds_OBUF[3]_inst_i_12_n_0 ;
  wire \leds_OBUF[3]_inst_i_13_n_0 ;
  wire \leds_OBUF[3]_inst_i_8_n_0 ;
  wire \leds_OBUF[3]_inst_i_9_n_0 ;
  wire \leds_OBUF[4]_inst_i_12_n_0 ;
  wire \leds_OBUF[4]_inst_i_13_n_0 ;
  wire \leds_OBUF[4]_inst_i_8_n_0 ;
  wire \leds_OBUF[4]_inst_i_9_n_0 ;
  wire \leds_OBUF[5]_inst_i_12_n_0 ;
  wire \leds_OBUF[5]_inst_i_13_n_0 ;
  wire \leds_OBUF[5]_inst_i_8_n_0 ;
  wire \leds_OBUF[5]_inst_i_9_n_0 ;
  wire \leds_OBUF[6]_inst_i_12_n_0 ;
  wire \leds_OBUF[6]_inst_i_13_n_0 ;
  wire \leds_OBUF[6]_inst_i_8_n_0 ;
  wire \leds_OBUF[6]_inst_i_9_n_0 ;
  wire \leds_OBUF[7]_inst_i_12_n_0 ;
  wire \leds_OBUF[7]_inst_i_13_n_0 ;
  wire \leds_OBUF[7]_inst_i_8_n_0 ;
  wire \leds_OBUF[7]_inst_i_9_n_0 ;
  wire \leds_OBUF[8]_inst_i_12_n_0 ;
  wire \leds_OBUF[8]_inst_i_13_n_0 ;
  wire \leds_OBUF[8]_inst_i_8_n_0 ;
  wire \leds_OBUF[8]_inst_i_9_n_0 ;
  wire \leds_OBUF[9]_inst_i_12_n_0 ;
  wire \leds_OBUF[9]_inst_i_13_n_0 ;
  wire \leds_OBUF[9]_inst_i_8_n_0 ;
  wire \leds_OBUF[9]_inst_i_9_n_0 ;
  wire [31:0]memout;
  wire [3:0]out;
  wire \pc_reg[0] ;
  wire \pc_reg[0]_0 ;
  wire \pc_reg[0]_1 ;
  wire [11:0]\pc_reg[13] ;
  wire [9:0]read_switches_IBUF;
  wire \register_array_reg[0][14] ;
  wire \register_array_reg[0][15] ;
  wire [31:0]\register_array_reg[0][15]_0 ;
  wire \register_array_reg[0][15]_1 ;
  wire \register_array_reg[0][23] ;
  wire [31:16]wd_mem;
  wire NLW_RAM_reg_1024_1151_0_0_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_10_10_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_11_11_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_12_12_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_13_13_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_14_14_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_15_15_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_16_16_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_17_17_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_18_18_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_19_19_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_1_1_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_20_20_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_21_21_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_22_22_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_23_23_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_24_24_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_25_25_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_26_26_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_27_27_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_28_28_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_29_29_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_2_2_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_30_30_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_31_31_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_3_3_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_4_4_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_5_5_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_6_6_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_7_7_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_8_8_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1024_1151_9_9_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_0_0_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_10_10_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_11_11_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_12_12_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_13_13_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_14_14_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_15_15_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_16_16_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_17_17_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_18_18_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_19_19_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_1_1_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_20_20_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_21_21_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_22_22_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_23_23_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_24_24_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_25_25_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_26_26_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_27_27_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_28_28_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_29_29_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_2_2_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_30_30_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_31_31_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_3_3_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_4_4_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_5_5_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_6_6_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_7_7_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_8_8_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1152_1279_9_9_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_0_0_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_10_10_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_11_11_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_12_12_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_13_13_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_14_14_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_15_15_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_16_16_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_17_17_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_18_18_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_19_19_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_1_1_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_20_20_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_21_21_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_22_22_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_23_23_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_24_24_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_25_25_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_26_26_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_27_27_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_28_28_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_29_29_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_2_2_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_30_30_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_31_31_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_3_3_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_4_4_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_5_5_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_6_6_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_7_7_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_8_8_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1280_1407_9_9_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_0_0_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_10_10_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_11_11_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_12_12_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_13_13_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_14_14_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_15_15_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_16_16_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_17_17_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_18_18_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_19_19_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_1_1_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_20_20_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_21_21_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_22_22_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_23_23_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_24_24_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_25_25_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_26_26_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_27_27_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_28_28_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_29_29_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_2_2_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_30_30_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_31_31_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_3_3_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_4_4_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_5_5_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_6_6_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_7_7_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_8_8_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1408_1535_9_9_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_0_0_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_10_10_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_11_11_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_12_12_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_13_13_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_14_14_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_15_15_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_16_16_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_17_17_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_18_18_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_19_19_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_1_1_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_20_20_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_21_21_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_22_22_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_23_23_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_24_24_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_25_25_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_26_26_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_27_27_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_28_28_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_29_29_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_2_2_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_30_30_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_31_31_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_3_3_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_4_4_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_5_5_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_6_6_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_7_7_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_8_8_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1536_1663_9_9_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_0_0_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_10_10_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_11_11_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_12_12_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_13_13_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_14_14_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_15_15_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_16_16_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_17_17_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_18_18_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_19_19_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_1_1_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_20_20_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_21_21_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_22_22_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_23_23_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_24_24_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_25_25_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_26_26_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_27_27_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_28_28_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_29_29_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_2_2_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_30_30_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_31_31_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_3_3_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_4_4_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_5_5_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_6_6_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_7_7_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_8_8_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1664_1791_9_9_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_0_0_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_10_10_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_11_11_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_12_12_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_13_13_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_14_14_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_15_15_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_16_16_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_17_17_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_18_18_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_19_19_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_1_1_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_20_20_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_21_21_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_22_22_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_23_23_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_24_24_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_25_25_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_26_26_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_27_27_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_28_28_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_29_29_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_2_2_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_30_30_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_31_31_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_3_3_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_4_4_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_5_5_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_6_6_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_7_7_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_8_8_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1792_1919_9_9_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_0_0_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_10_10_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_11_11_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_12_12_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_13_13_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_14_14_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_15_15_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_16_16_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_17_17_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_18_18_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_19_19_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_1_1_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_20_20_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_21_21_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_22_22_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_23_23_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_24_24_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_25_25_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_26_26_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_27_27_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_28_28_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_29_29_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_2_2_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_30_30_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_31_31_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_3_3_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_4_4_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_5_5_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_6_6_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_7_7_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_8_8_DPO_UNCONNECTED;
  wire NLW_RAM_reg_1920_2047_9_9_DPO_UNCONNECTED;

  LUT3 #(
    .INIT(8'hB8)) 
    C_reg_i_10
       (.I0(\pc_reg[0]_0 ),
        .I1(\FSM_sequential_state_reg[1]_0 [3]),
        .I2(\pc_reg[0]_1 ),
        .O(\pc_reg[0] ));
  LUT6 #(
    .INIT(64'hB04FB748B04FB24D)) 
    C_reg_i_15
       (.I0(\FSM_sequential_state_reg[1]_0 [2]),
        .I1(flags_master[1]),
        .I2(\FSM_sequential_state_reg[1]_0 [1]),
        .I3(\FSM_sequential_state_reg[1]_0 [0]),
        .I4(flags_master[0]),
        .I5(DI),
        .O(\pc_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h3C3CB4870F0FB487)) 
    C_reg_i_16
       (.I0(flags_master[1]),
        .I1(\FSM_sequential_state_reg[1]_0 [2]),
        .I2(\FSM_sequential_state_reg[1]_0 [0]),
        .I3(flags_master[0]),
        .I4(\FSM_sequential_state_reg[1]_0 [1]),
        .I5(DI),
        .O(\pc_reg[0]_1 ));
  (* INIT = "128'h00000010000000000000000000000041" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_UNIQ_BASE_ RAM_reg_0_127_0_0
       (.A(ad_mem[8:2]),
        .D(Q[0]),
        .DPO(RAM_reg_0_127_0_0_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000100000000)) 
    RAM_reg_0_127_0_0_i_1
       (.I0(ad_mem[10]),
        .I1(ad_mem[9]),
        .I2(ad_mem[12]),
        .I3(ad_mem[11]),
        .I4(ad_mem[13]),
        .I5(RAM_reg_0_127_0_0_i_14_n_0),
        .O(RAM_reg_0_127_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_0_0_i_10
       (.I0(\FSM_sequential_state_reg[0]_7 [9]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [7]),
        .O(ad_mem[9]));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_0_0_i_11
       (.I0(\FSM_sequential_state_reg[0]_7 [12]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [10]),
        .O(ad_mem[12]));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_0_0_i_12
       (.I0(\FSM_sequential_state_reg[0]_7 [11]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [9]),
        .O(ad_mem[11]));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_0_0_i_13
       (.I0(\FSM_sequential_state_reg[0]_7 [13]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [11]),
        .O(ad_mem[13]));
  LUT5 #(
    .INIT(32'h80000000)) 
    RAM_reg_0_127_0_0_i_14
       (.I0(MW),
        .I1(\register_array_reg[0][23] ),
        .I2(\FSM_sequential_state_reg[1]_1 [2]),
        .I3(\c_reg[0] ),
        .I4(\register_array_reg[0][15] ),
        .O(RAM_reg_0_127_0_0_i_14_n_0));
  LUT5 #(
    .INIT(32'h00000020)) 
    RAM_reg_0_127_0_0_i_15
       (.I0(out[0]),
        .I1(out[2]),
        .I2(out[3]),
        .I3(out[1]),
        .I4(\pc_reg[0] ),
        .O(MW));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_0_0_i_2
       (.I0(\FSM_sequential_state_reg[0]_7 [8]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [6]),
        .O(ad_mem[8]));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_0_0_i_3
       (.I0(\FSM_sequential_state_reg[0]_7 [7]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [5]),
        .O(ad_mem[7]));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_0_0_i_4
       (.I0(\FSM_sequential_state_reg[0]_7 [6]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [4]),
        .O(ad_mem[6]));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_0_0_i_5
       (.I0(\FSM_sequential_state_reg[0]_7 [5]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [3]),
        .O(ad_mem[5]));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_0_0_i_6
       (.I0(\FSM_sequential_state_reg[0]_7 [4]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [2]),
        .O(ad_mem[4]));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_0_0_i_7
       (.I0(\FSM_sequential_state_reg[0]_7 [3]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [1]),
        .O(ad_mem[3]));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_0_0_i_8
       (.I0(\FSM_sequential_state_reg[0]_7 [2]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [0]),
        .O(ad_mem[2]));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_0_0_i_9
       (.I0(\FSM_sequential_state_reg[0]_7 [10]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [8]),
        .O(ad_mem[10]));
  (* INIT = "128'h00000010000000000000000000000001" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3795 RAM_reg_0_127_10_10
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [2]),
        .DPO(RAM_reg_0_127_10_10_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_10_10_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_8_8_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_10_10_i_2
       (.I0(\FSM_sequential_state_reg[0]_7 [5]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [3]),
        .O(RAM_reg_0_127_10_10_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_10_10_i_3
       (.I0(\FSM_sequential_state_reg[0]_7 [4]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [2]),
        .O(RAM_reg_0_127_10_10_i_3_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_10_10_i_4
       (.I0(\FSM_sequential_state_reg[0]_7 [3]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [1]),
        .O(RAM_reg_0_127_10_10_i_4_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_10_10_i_5
       (.I0(\FSM_sequential_state_reg[0]_7 [2]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [0]),
        .O(RAM_reg_0_127_10_10_i_5_n_0));
  (* INIT = "128'h00000010000000000000000000000001" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3796 RAM_reg_0_127_11_11
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [3]),
        .DPO(RAM_reg_0_127_11_11_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_11_11_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_8_8_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_11_11_i_2
       (.I0(\FSM_sequential_state_reg[0]_7 [5]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [3]),
        .O(RAM_reg_0_127_11_11_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_11_11_i_3
       (.I0(\FSM_sequential_state_reg[0]_7 [4]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [2]),
        .O(RAM_reg_0_127_11_11_i_3_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_11_11_i_4
       (.I0(\FSM_sequential_state_reg[0]_7 [3]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [1]),
        .O(RAM_reg_0_127_11_11_i_4_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_11_11_i_5
       (.I0(\FSM_sequential_state_reg[0]_7 [2]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [0]),
        .O(RAM_reg_0_127_11_11_i_5_n_0));
  (* INIT = "128'h000000100000000000000000000000A0" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3797 RAM_reg_0_127_12_12
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [4]),
        .DPO(RAM_reg_0_127_12_12_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_12_12_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_8_8_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_12_12_i_2
       (.I0(\FSM_sequential_state_reg[0]_7 [5]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [3]),
        .O(RAM_reg_0_127_12_12_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_12_12_i_3
       (.I0(\FSM_sequential_state_reg[0]_7 [4]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [2]),
        .O(RAM_reg_0_127_12_12_i_3_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_12_12_i_4
       (.I0(\FSM_sequential_state_reg[0]_7 [3]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [1]),
        .O(RAM_reg_0_127_12_12_i_4_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_12_12_i_5
       (.I0(\FSM_sequential_state_reg[0]_7 [2]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [0]),
        .O(RAM_reg_0_127_12_12_i_5_n_0));
  (* INIT = "128'h000000100000000000000000000000C0" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3798 RAM_reg_0_127_13_13
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [5]),
        .DPO(RAM_reg_0_127_13_13_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_13_13_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_8_8_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_13_13_i_2
       (.I0(\FSM_sequential_state_reg[0]_7 [5]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [3]),
        .O(RAM_reg_0_127_13_13_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_13_13_i_3
       (.I0(\FSM_sequential_state_reg[0]_7 [4]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [2]),
        .O(RAM_reg_0_127_13_13_i_3_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_13_13_i_4
       (.I0(\FSM_sequential_state_reg[0]_7 [3]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [1]),
        .O(RAM_reg_0_127_13_13_i_4_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_13_13_i_5
       (.I0(\FSM_sequential_state_reg[0]_7 [2]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [0]),
        .O(RAM_reg_0_127_13_13_i_5_n_0));
  (* INIT = "128'h000000100000000000000000000000C8" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3799 RAM_reg_0_127_14_14
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [6]),
        .DPO(RAM_reg_0_127_14_14_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_14_14_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_8_8_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_14_14_i_2
       (.I0(\FSM_sequential_state_reg[0]_7 [5]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [3]),
        .O(RAM_reg_0_127_14_14_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_14_14_i_3
       (.I0(\FSM_sequential_state_reg[0]_7 [4]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [2]),
        .O(RAM_reg_0_127_14_14_i_3_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_14_14_i_4
       (.I0(\FSM_sequential_state_reg[0]_7 [3]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [1]),
        .O(RAM_reg_0_127_14_14_i_4_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_14_14_i_5
       (.I0(\FSM_sequential_state_reg[0]_7 [2]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [0]),
        .O(RAM_reg_0_127_14_14_i_5_n_0));
  (* INIT = "128'h00000010000000000000000000000080" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3800 RAM_reg_0_127_15_15
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [7]),
        .DPO(RAM_reg_0_127_15_15_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_15_15_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_8_8_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_15_15_i_2
       (.I0(\FSM_sequential_state_reg[0]_7 [5]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [3]),
        .O(RAM_reg_0_127_15_15_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_15_15_i_3
       (.I0(\FSM_sequential_state_reg[0]_7 [4]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [2]),
        .O(RAM_reg_0_127_15_15_i_3_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_15_15_i_4
       (.I0(\FSM_sequential_state_reg[0]_7 [3]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [1]),
        .O(RAM_reg_0_127_15_15_i_4_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_15_15_i_5
       (.I0(\FSM_sequential_state_reg[0]_7 [2]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [0]),
        .O(RAM_reg_0_127_15_15_i_5_n_0));
  (* INIT = "128'h00000010000000000000000000000020" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3801 RAM_reg_0_127_16_16
       (.A(ad_mem[8:2]),
        .D(wd_mem[16]),
        .DPO(RAM_reg_0_127_16_16_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_16_16_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_16_16_i_2_n_0));
  LUT4 #(
    .INIT(16'hEA2A)) 
    RAM_reg_0_127_16_16_i_1
       (.I0(Q[16]),
        .I1(\FSM_sequential_state_reg[1]_1 [1]),
        .I2(\FSM_sequential_state_reg[1]_1 [2]),
        .I3(Q[0]),
        .O(wd_mem[16]));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    RAM_reg_0_127_16_16_i_2
       (.I0(ad_mem[10]),
        .I1(ad_mem[9]),
        .I2(ad_mem[12]),
        .I3(ad_mem[11]),
        .I4(\FSM_sequential_state_reg[0]_9 ),
        .I5(ad_mem[13]),
        .O(RAM_reg_0_127_16_16_i_2_n_0));
  (* INIT = "128'h00000010000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3802 RAM_reg_0_127_17_17
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(wd_mem[17]),
        .DPO(RAM_reg_0_127_17_17_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_17_17_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_16_16_i_2_n_0));
  LUT4 #(
    .INIT(16'hEA2A)) 
    RAM_reg_0_127_17_17_i_1
       (.I0(Q[17]),
        .I1(\FSM_sequential_state_reg[1]_1 [1]),
        .I2(\FSM_sequential_state_reg[1]_1 [2]),
        .I3(Q[1]),
        .O(wd_mem[17]));
  (* INIT = "128'h00000010000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3803 RAM_reg_0_127_18_18
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(wd_mem[18]),
        .DPO(RAM_reg_0_127_18_18_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_18_18_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_16_16_i_2_n_0));
  LUT4 #(
    .INIT(16'hEA2A)) 
    RAM_reg_0_127_18_18_i_1
       (.I0(Q[18]),
        .I1(\FSM_sequential_state_reg[1]_1 [1]),
        .I2(\FSM_sequential_state_reg[1]_1 [2]),
        .I3(Q[2]),
        .O(wd_mem[18]));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3804 RAM_reg_0_127_19_19
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(wd_mem[19]),
        .DPO(RAM_reg_0_127_19_19_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_19_19_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_16_16_i_2_n_0));
  LUT4 #(
    .INIT(16'hEA2A)) 
    RAM_reg_0_127_19_19_i_1
       (.I0(Q[19]),
        .I1(\FSM_sequential_state_reg[1]_1 [1]),
        .I2(\FSM_sequential_state_reg[1]_1 [2]),
        .I3(Q[3]),
        .O(wd_mem[19]));
  (* INIT = "128'h000000100000000000000000000000A0" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3805 RAM_reg_0_127_1_1
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(Q[1]),
        .DPO(RAM_reg_0_127_1_1_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_1_1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_1_1_i_1
       (.I0(\FSM_sequential_state_reg[0]_7 [5]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [3]),
        .O(RAM_reg_0_127_1_1_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_1_1_i_2
       (.I0(\FSM_sequential_state_reg[0]_7 [4]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [2]),
        .O(RAM_reg_0_127_1_1_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_1_1_i_3
       (.I0(\FSM_sequential_state_reg[0]_7 [3]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [1]),
        .O(RAM_reg_0_127_1_1_i_3_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_1_1_i_4
       (.I0(\FSM_sequential_state_reg[0]_7 [2]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [0]),
        .O(RAM_reg_0_127_1_1_i_4_n_0));
  (* INIT = "128'h00000010000000000000000000000026" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3806 RAM_reg_0_127_20_20
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(wd_mem[20]),
        .DPO(RAM_reg_0_127_20_20_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_20_20_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_16_16_i_2_n_0));
  LUT4 #(
    .INIT(16'hEA2A)) 
    RAM_reg_0_127_20_20_i_1
       (.I0(Q[20]),
        .I1(\FSM_sequential_state_reg[1]_1 [1]),
        .I2(\FSM_sequential_state_reg[1]_1 [2]),
        .I3(Q[4]),
        .O(wd_mem[20]));
  (* INIT = "128'h000000000000000000000000000000C9" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3807 RAM_reg_0_127_21_21
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(wd_mem[21]),
        .DPO(RAM_reg_0_127_21_21_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_21_21_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_16_16_i_2_n_0));
  LUT4 #(
    .INIT(16'hEA2A)) 
    RAM_reg_0_127_21_21_i_1
       (.I0(Q[21]),
        .I1(\FSM_sequential_state_reg[1]_1 [1]),
        .I2(\FSM_sequential_state_reg[1]_1 [2]),
        .I3(Q[5]),
        .O(wd_mem[21]));
  (* INIT = "128'h00000010000000000000000000000004" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3808 RAM_reg_0_127_22_22
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(wd_mem[22]),
        .DPO(RAM_reg_0_127_22_22_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_22_22_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_16_16_i_2_n_0));
  LUT4 #(
    .INIT(16'hEA2A)) 
    RAM_reg_0_127_22_22_i_1
       (.I0(Q[22]),
        .I1(\FSM_sequential_state_reg[1]_1 [1]),
        .I2(\FSM_sequential_state_reg[1]_1 [2]),
        .I3(Q[6]),
        .O(wd_mem[22]));
  (* INIT = "128'h000000000000000000000000000000CB" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3809 RAM_reg_0_127_23_23
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(wd_mem[23]),
        .DPO(RAM_reg_0_127_23_23_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_23_23_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_16_16_i_2_n_0));
  LUT4 #(
    .INIT(16'hEA2A)) 
    RAM_reg_0_127_23_23_i_1
       (.I0(Q[23]),
        .I1(\FSM_sequential_state_reg[1]_1 [1]),
        .I2(\FSM_sequential_state_reg[1]_1 [2]),
        .I3(Q[7]),
        .O(wd_mem[23]));
  (* INIT = "128'h000000100000000000000000000000DF" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3810 RAM_reg_0_127_24_24
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(wd_mem[24]),
        .DPO(RAM_reg_0_127_24_24_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_24_24_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_16_16_i_2_n_0));
  LUT6 #(
    .INIT(64'hF0CCAAAAAAAAAAAA)) 
    RAM_reg_0_127_24_24_i_1
       (.I0(Q[24]),
        .I1(Q[0]),
        .I2(Q[8]),
        .I3(\FSM_sequential_state_reg[1]_1 [0]),
        .I4(\FSM_sequential_state_reg[1]_1 [2]),
        .I5(\FSM_sequential_state_reg[1]_1 [1]),
        .O(wd_mem[24]));
  (* INIT = "128'h00000000000000000000000000000055" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3811 RAM_reg_0_127_25_25
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(wd_mem[25]),
        .DPO(RAM_reg_0_127_25_25_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_25_25_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_16_16_i_2_n_0));
  LUT6 #(
    .INIT(64'hF0CCAAAAAAAAAAAA)) 
    RAM_reg_0_127_25_25_i_1
       (.I0(Q[25]),
        .I1(Q[1]),
        .I2(Q[9]),
        .I3(\FSM_sequential_state_reg[1]_1 [0]),
        .I4(\FSM_sequential_state_reg[1]_1 [2]),
        .I5(\FSM_sequential_state_reg[1]_1 [1]),
        .O(wd_mem[25]));
  (* INIT = "128'h00000010000000000000000000000002" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3812 RAM_reg_0_127_26_26
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(wd_mem[26]),
        .DPO(RAM_reg_0_127_26_26_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_26_26_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_16_16_i_2_n_0));
  LUT6 #(
    .INIT(64'hF0CCAAAAAAAAAAAA)) 
    RAM_reg_0_127_26_26_i_1
       (.I0(Q[26]),
        .I1(Q[2]),
        .I2(Q[10]),
        .I3(\FSM_sequential_state_reg[1]_1 [0]),
        .I4(\FSM_sequential_state_reg[1]_1 [2]),
        .I5(\FSM_sequential_state_reg[1]_1 [1]),
        .O(wd_mem[26]));
  (* INIT = "128'h00000000000000000000000000000010" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3813 RAM_reg_0_127_27_27
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(wd_mem[27]),
        .DPO(RAM_reg_0_127_27_27_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_27_27_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_16_16_i_2_n_0));
  LUT6 #(
    .INIT(64'hF0CCAAAAAAAAAAAA)) 
    RAM_reg_0_127_27_27_i_1
       (.I0(Q[27]),
        .I1(Q[3]),
        .I2(Q[11]),
        .I3(\FSM_sequential_state_reg[1]_1 [0]),
        .I4(\FSM_sequential_state_reg[1]_1 [2]),
        .I5(\FSM_sequential_state_reg[1]_1 [1]),
        .O(wd_mem[27]));
  (* INIT = "128'h00000010000000000000000000000020" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3814 RAM_reg_0_127_28_28
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(wd_mem[28]),
        .DPO(RAM_reg_0_127_28_28_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_28_28_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_16_16_i_2_n_0));
  LUT6 #(
    .INIT(64'hF0CCAAAAAAAAAAAA)) 
    RAM_reg_0_127_28_28_i_1
       (.I0(Q[28]),
        .I1(Q[4]),
        .I2(Q[12]),
        .I3(\FSM_sequential_state_reg[1]_1 [0]),
        .I4(\FSM_sequential_state_reg[1]_1 [2]),
        .I5(\FSM_sequential_state_reg[1]_1 [1]),
        .O(wd_mem[28]));
  (* INIT = "128'h000000000000000000000000000000DF" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3815 RAM_reg_0_127_29_29
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(wd_mem[29]),
        .DPO(RAM_reg_0_127_29_29_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_29_29_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_16_16_i_2_n_0));
  LUT6 #(
    .INIT(64'hF0CCAAAAAAAAAAAA)) 
    RAM_reg_0_127_29_29_i_1
       (.I0(Q[29]),
        .I1(Q[5]),
        .I2(Q[13]),
        .I3(\FSM_sequential_state_reg[1]_1 [0]),
        .I4(\FSM_sequential_state_reg[1]_1 [2]),
        .I5(\FSM_sequential_state_reg[1]_1 [1]),
        .O(wd_mem[29]));
  (* INIT = "128'h000000000000000000000000000000C0" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3816 RAM_reg_0_127_2_2
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(Q[2]),
        .DPO(RAM_reg_0_127_2_2_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_2_2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_2_2_i_1
       (.I0(\FSM_sequential_state_reg[0]_7 [5]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [3]),
        .O(RAM_reg_0_127_2_2_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_2_2_i_2
       (.I0(\FSM_sequential_state_reg[0]_7 [4]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [2]),
        .O(RAM_reg_0_127_2_2_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_2_2_i_3
       (.I0(\FSM_sequential_state_reg[0]_7 [3]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [1]),
        .O(RAM_reg_0_127_2_2_i_3_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_2_2_i_4
       (.I0(\FSM_sequential_state_reg[0]_7 [2]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [0]),
        .O(RAM_reg_0_127_2_2_i_4_n_0));
  (* INIT = "128'h000000100000000000000000000000D7" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3817 RAM_reg_0_127_30_30
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(wd_mem[30]),
        .DPO(RAM_reg_0_127_30_30_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_30_30_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_16_16_i_2_n_0));
  LUT6 #(
    .INIT(64'hF0CCAAAAAAAAAAAA)) 
    RAM_reg_0_127_30_30_i_1
       (.I0(Q[30]),
        .I1(Q[6]),
        .I2(Q[14]),
        .I3(\FSM_sequential_state_reg[1]_1 [0]),
        .I4(\FSM_sequential_state_reg[1]_1 [2]),
        .I5(\FSM_sequential_state_reg[1]_1 [1]),
        .O(wd_mem[30]));
  (* INIT = "128'h000000000000000000000000000000FF" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3818 RAM_reg_0_127_31_31
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(wd_mem[31]),
        .DPO(RAM_reg_0_127_31_31_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_31_31_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_16_16_i_2_n_0));
  LUT6 #(
    .INIT(64'hF0CCAAAAAAAAAAAA)) 
    RAM_reg_0_127_31_31_i_1
       (.I0(Q[31]),
        .I1(Q[7]),
        .I2(Q[15]),
        .I3(\FSM_sequential_state_reg[1]_1 [0]),
        .I4(\FSM_sequential_state_reg[1]_1 [2]),
        .I5(\FSM_sequential_state_reg[1]_1 [1]),
        .O(wd_mem[31]));
  (* INIT = "128'h00000010000000000000000000000081" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3819 RAM_reg_0_127_3_3
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(Q[3]),
        .DPO(RAM_reg_0_127_3_3_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_3_3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_3_3_i_1
       (.I0(\FSM_sequential_state_reg[0]_7 [5]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [3]),
        .O(RAM_reg_0_127_3_3_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_3_3_i_2
       (.I0(\FSM_sequential_state_reg[0]_7 [4]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [2]),
        .O(RAM_reg_0_127_3_3_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_3_3_i_3
       (.I0(\FSM_sequential_state_reg[0]_7 [3]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [1]),
        .O(RAM_reg_0_127_3_3_i_3_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_3_3_i_4
       (.I0(\FSM_sequential_state_reg[0]_7 [2]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [0]),
        .O(RAM_reg_0_127_3_3_i_4_n_0));
  (* INIT = "128'h00000010000000000000000000000001" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3820 RAM_reg_0_127_4_4
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(Q[4]),
        .DPO(RAM_reg_0_127_4_4_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_4_4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_4_4_i_1
       (.I0(\FSM_sequential_state_reg[0]_7 [5]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [3]),
        .O(RAM_reg_0_127_4_4_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_4_4_i_2
       (.I0(\FSM_sequential_state_reg[0]_7 [4]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [2]),
        .O(RAM_reg_0_127_4_4_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_4_4_i_3
       (.I0(\FSM_sequential_state_reg[0]_7 [3]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [1]),
        .O(RAM_reg_0_127_4_4_i_3_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_4_4_i_4
       (.I0(\FSM_sequential_state_reg[0]_7 [2]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [0]),
        .O(RAM_reg_0_127_4_4_i_4_n_0));
  (* INIT = "128'h00000010000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3821 RAM_reg_0_127_5_5
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(Q[5]),
        .DPO(RAM_reg_0_127_5_5_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_5_5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_5_5_i_1
       (.I0(\FSM_sequential_state_reg[0]_7 [5]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [3]),
        .O(RAM_reg_0_127_5_5_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_5_5_i_2
       (.I0(\FSM_sequential_state_reg[0]_7 [4]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [2]),
        .O(RAM_reg_0_127_5_5_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_5_5_i_3
       (.I0(\FSM_sequential_state_reg[0]_7 [3]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [1]),
        .O(RAM_reg_0_127_5_5_i_3_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_5_5_i_4
       (.I0(\FSM_sequential_state_reg[0]_7 [2]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [0]),
        .O(RAM_reg_0_127_5_5_i_4_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3822 RAM_reg_0_127_6_6
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(Q[6]),
        .DPO(RAM_reg_0_127_6_6_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_6_6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_6_6_i_1
       (.I0(\FSM_sequential_state_reg[0]_7 [5]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [3]),
        .O(RAM_reg_0_127_6_6_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_6_6_i_2
       (.I0(\FSM_sequential_state_reg[0]_7 [4]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [2]),
        .O(RAM_reg_0_127_6_6_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_6_6_i_3
       (.I0(\FSM_sequential_state_reg[0]_7 [3]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [1]),
        .O(RAM_reg_0_127_6_6_i_3_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_6_6_i_4
       (.I0(\FSM_sequential_state_reg[0]_7 [2]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [0]),
        .O(RAM_reg_0_127_6_6_i_4_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3823 RAM_reg_0_127_7_7
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(Q[7]),
        .DPO(RAM_reg_0_127_7_7_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_7_7_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_7_7_i_1
       (.I0(\FSM_sequential_state_reg[0]_7 [5]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [3]),
        .O(RAM_reg_0_127_7_7_i_1_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_7_7_i_2
       (.I0(\FSM_sequential_state_reg[0]_7 [4]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [2]),
        .O(RAM_reg_0_127_7_7_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_7_7_i_3
       (.I0(\FSM_sequential_state_reg[0]_7 [3]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [1]),
        .O(RAM_reg_0_127_7_7_i_3_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_7_7_i_4
       (.I0(\FSM_sequential_state_reg[0]_7 [2]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [0]),
        .O(RAM_reg_0_127_7_7_i_4_n_0));
  (* INIT = "128'h00000010000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3824 RAM_reg_0_127_8_8
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(\FSM_sequential_state_reg[1] [0]),
        .DPO(RAM_reg_0_127_8_8_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_8_8_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_8_8_i_2_n_0));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    RAM_reg_0_127_8_8_i_2
       (.I0(ad_mem[10]),
        .I1(ad_mem[9]),
        .I2(ad_mem[12]),
        .I3(ad_mem[11]),
        .I4(\FSM_sequential_state_reg[0]_8 ),
        .I5(ad_mem[13]),
        .O(RAM_reg_0_127_8_8_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_8_8_i_3
       (.I0(\FSM_sequential_state_reg[0]_7 [5]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [3]),
        .O(RAM_reg_0_127_8_8_i_3_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_8_8_i_4
       (.I0(\FSM_sequential_state_reg[0]_7 [4]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [2]),
        .O(RAM_reg_0_127_8_8_i_4_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_8_8_i_5
       (.I0(\FSM_sequential_state_reg[0]_7 [3]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [1]),
        .O(RAM_reg_0_127_8_8_i_5_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_8_8_i_6
       (.I0(\FSM_sequential_state_reg[0]_7 [2]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [0]),
        .O(RAM_reg_0_127_8_8_i_6_n_0));
  (* INIT = "128'h00000010000000000000000000000001" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3825 RAM_reg_0_127_9_9
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [1]),
        .DPO(RAM_reg_0_127_9_9_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_0_127_9_9_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_127_8_8_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_9_9_i_2
       (.I0(\FSM_sequential_state_reg[0]_7 [5]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [3]),
        .O(RAM_reg_0_127_9_9_i_2_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_9_9_i_3
       (.I0(\FSM_sequential_state_reg[0]_7 [4]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [2]),
        .O(RAM_reg_0_127_9_9_i_3_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_9_9_i_4
       (.I0(\FSM_sequential_state_reg[0]_7 [3]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [1]),
        .O(RAM_reg_0_127_9_9_i_4_n_0));
  LUT6 #(
    .INIT(64'hFEFFFBFF02000800)) 
    RAM_reg_0_127_9_9_i_5
       (.I0(\FSM_sequential_state_reg[0]_7 [2]),
        .I1(out[0]),
        .I2(out[2]),
        .I3(out[3]),
        .I4(out[1]),
        .I5(\pc_reg[13] [0]),
        .O(RAM_reg_0_127_9_9_i_5_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_UNIQ_BASE_ RAM_reg_0_15_0_0
       (.A0(ad_mem[2]),
        .A1(ad_mem[3]),
        .A2(ad_mem[4]),
        .A3(ad_mem[5]),
        .A4(1'b0),
        .D(Q[0]),
        .O(RAM_reg_0_15_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3826 RAM_reg_0_15_0_0__0
       (.A0(RAM_reg_0_127_1_1_i_4_n_0),
        .A1(RAM_reg_0_127_1_1_i_3_n_0),
        .A2(RAM_reg_0_127_1_1_i_2_n_0),
        .A3(RAM_reg_0_127_1_1_i_1_n_0),
        .A4(1'b0),
        .D(Q[1]),
        .O(RAM_reg_0_15_0_0__0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3827 RAM_reg_0_15_0_0__1
       (.A0(RAM_reg_0_127_2_2_i_4_n_0),
        .A1(RAM_reg_0_127_2_2_i_3_n_0),
        .A2(RAM_reg_0_127_2_2_i_2_n_0),
        .A3(RAM_reg_0_127_2_2_i_1_n_0),
        .A4(1'b0),
        .D(Q[2]),
        .O(RAM_reg_0_15_0_0__1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3828 RAM_reg_0_15_0_0__10
       (.A0(RAM_reg_0_127_11_11_i_5_n_0),
        .A1(RAM_reg_0_127_11_11_i_4_n_0),
        .A2(RAM_reg_0_127_11_11_i_3_n_0),
        .A3(RAM_reg_0_127_11_11_i_2_n_0),
        .A4(1'b0),
        .D(\FSM_sequential_state_reg[1] [3]),
        .O(RAM_reg_0_15_0_0__10_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0] ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3829 RAM_reg_0_15_0_0__11
       (.A0(RAM_reg_0_127_12_12_i_5_n_0),
        .A1(RAM_reg_0_127_12_12_i_4_n_0),
        .A2(RAM_reg_0_127_12_12_i_3_n_0),
        .A3(RAM_reg_0_127_12_12_i_2_n_0),
        .A4(1'b0),
        .D(\FSM_sequential_state_reg[1] [4]),
        .O(RAM_reg_0_15_0_0__11_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0] ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3830 RAM_reg_0_15_0_0__12
       (.A0(RAM_reg_0_127_13_13_i_5_n_0),
        .A1(RAM_reg_0_127_13_13_i_4_n_0),
        .A2(RAM_reg_0_127_13_13_i_3_n_0),
        .A3(RAM_reg_0_127_13_13_i_2_n_0),
        .A4(1'b0),
        .D(\FSM_sequential_state_reg[1] [5]),
        .O(RAM_reg_0_15_0_0__12_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0] ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3831 RAM_reg_0_15_0_0__13
       (.A0(RAM_reg_0_127_14_14_i_5_n_0),
        .A1(RAM_reg_0_127_14_14_i_4_n_0),
        .A2(RAM_reg_0_127_14_14_i_3_n_0),
        .A3(RAM_reg_0_127_14_14_i_2_n_0),
        .A4(1'b0),
        .D(\FSM_sequential_state_reg[1] [6]),
        .O(RAM_reg_0_15_0_0__13_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0] ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3832 RAM_reg_0_15_0_0__14
       (.A0(RAM_reg_0_127_15_15_i_5_n_0),
        .A1(RAM_reg_0_127_15_15_i_4_n_0),
        .A2(RAM_reg_0_127_15_15_i_3_n_0),
        .A3(RAM_reg_0_127_15_15_i_2_n_0),
        .A4(1'b0),
        .D(\FSM_sequential_state_reg[1] [7]),
        .O(RAM_reg_0_15_0_0__14_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0] ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3833 RAM_reg_0_15_0_0__15
       (.A0(ad_mem[2]),
        .A1(ad_mem[3]),
        .A2(ad_mem[4]),
        .A3(ad_mem[5]),
        .A4(1'b0),
        .D(wd_mem[16]),
        .O(RAM_reg_0_15_0_0__15_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0]_0 ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3834 RAM_reg_0_15_0_0__16
       (.A0(RAM_reg_0_127_1_1_i_4_n_0),
        .A1(RAM_reg_0_127_1_1_i_3_n_0),
        .A2(RAM_reg_0_127_1_1_i_2_n_0),
        .A3(RAM_reg_0_127_1_1_i_1_n_0),
        .A4(1'b0),
        .D(wd_mem[17]),
        .O(RAM_reg_0_15_0_0__16_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0]_0 ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3835 RAM_reg_0_15_0_0__17
       (.A0(RAM_reg_0_127_2_2_i_4_n_0),
        .A1(RAM_reg_0_127_2_2_i_3_n_0),
        .A2(RAM_reg_0_127_2_2_i_2_n_0),
        .A3(RAM_reg_0_127_2_2_i_1_n_0),
        .A4(1'b0),
        .D(wd_mem[18]),
        .O(RAM_reg_0_15_0_0__17_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0]_0 ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3836 RAM_reg_0_15_0_0__18
       (.A0(RAM_reg_0_127_3_3_i_4_n_0),
        .A1(RAM_reg_0_127_3_3_i_3_n_0),
        .A2(RAM_reg_0_127_3_3_i_2_n_0),
        .A3(RAM_reg_0_127_3_3_i_1_n_0),
        .A4(1'b0),
        .D(wd_mem[19]),
        .O(RAM_reg_0_15_0_0__18_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0]_0 ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3837 RAM_reg_0_15_0_0__19
       (.A0(RAM_reg_0_127_4_4_i_4_n_0),
        .A1(RAM_reg_0_127_4_4_i_3_n_0),
        .A2(RAM_reg_0_127_4_4_i_2_n_0),
        .A3(RAM_reg_0_127_4_4_i_1_n_0),
        .A4(1'b0),
        .D(wd_mem[20]),
        .O(RAM_reg_0_15_0_0__19_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0]_0 ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3838 RAM_reg_0_15_0_0__2
       (.A0(RAM_reg_0_127_3_3_i_4_n_0),
        .A1(RAM_reg_0_127_3_3_i_3_n_0),
        .A2(RAM_reg_0_127_3_3_i_2_n_0),
        .A3(RAM_reg_0_127_3_3_i_1_n_0),
        .A4(1'b0),
        .D(Q[3]),
        .O(RAM_reg_0_15_0_0__2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3839 RAM_reg_0_15_0_0__20
       (.A0(RAM_reg_0_127_5_5_i_4_n_0),
        .A1(RAM_reg_0_127_5_5_i_3_n_0),
        .A2(RAM_reg_0_127_5_5_i_2_n_0),
        .A3(RAM_reg_0_127_5_5_i_1_n_0),
        .A4(1'b0),
        .D(wd_mem[21]),
        .O(RAM_reg_0_15_0_0__20_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0]_0 ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3840 RAM_reg_0_15_0_0__21
       (.A0(RAM_reg_0_127_6_6_i_4_n_0),
        .A1(RAM_reg_0_127_6_6_i_3_n_0),
        .A2(RAM_reg_0_127_6_6_i_2_n_0),
        .A3(RAM_reg_0_127_6_6_i_1_n_0),
        .A4(1'b0),
        .D(wd_mem[22]),
        .O(RAM_reg_0_15_0_0__21_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0]_0 ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3841 RAM_reg_0_15_0_0__22
       (.A0(RAM_reg_0_127_7_7_i_4_n_0),
        .A1(RAM_reg_0_127_7_7_i_3_n_0),
        .A2(RAM_reg_0_127_7_7_i_2_n_0),
        .A3(RAM_reg_0_127_7_7_i_1_n_0),
        .A4(1'b0),
        .D(wd_mem[23]),
        .O(RAM_reg_0_15_0_0__22_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0]_0 ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3842 RAM_reg_0_15_0_0__23
       (.A0(RAM_reg_0_127_8_8_i_6_n_0),
        .A1(RAM_reg_0_127_8_8_i_5_n_0),
        .A2(RAM_reg_0_127_8_8_i_4_n_0),
        .A3(RAM_reg_0_127_8_8_i_3_n_0),
        .A4(1'b0),
        .D(wd_mem[24]),
        .O(RAM_reg_0_15_0_0__23_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0]_0 ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3843 RAM_reg_0_15_0_0__24
       (.A0(RAM_reg_0_127_9_9_i_5_n_0),
        .A1(RAM_reg_0_127_9_9_i_4_n_0),
        .A2(RAM_reg_0_127_9_9_i_3_n_0),
        .A3(RAM_reg_0_127_9_9_i_2_n_0),
        .A4(1'b0),
        .D(wd_mem[25]),
        .O(RAM_reg_0_15_0_0__24_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0]_0 ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3844 RAM_reg_0_15_0_0__25
       (.A0(RAM_reg_0_127_10_10_i_5_n_0),
        .A1(RAM_reg_0_127_10_10_i_4_n_0),
        .A2(RAM_reg_0_127_10_10_i_3_n_0),
        .A3(RAM_reg_0_127_10_10_i_2_n_0),
        .A4(1'b0),
        .D(wd_mem[26]),
        .O(RAM_reg_0_15_0_0__25_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0]_0 ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3845 RAM_reg_0_15_0_0__26
       (.A0(RAM_reg_0_127_11_11_i_5_n_0),
        .A1(RAM_reg_0_127_11_11_i_4_n_0),
        .A2(RAM_reg_0_127_11_11_i_3_n_0),
        .A3(RAM_reg_0_127_11_11_i_2_n_0),
        .A4(1'b0),
        .D(wd_mem[27]),
        .O(RAM_reg_0_15_0_0__26_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0]_0 ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3846 RAM_reg_0_15_0_0__27
       (.A0(RAM_reg_0_127_12_12_i_5_n_0),
        .A1(RAM_reg_0_127_12_12_i_4_n_0),
        .A2(RAM_reg_0_127_12_12_i_3_n_0),
        .A3(RAM_reg_0_127_12_12_i_2_n_0),
        .A4(1'b0),
        .D(wd_mem[28]),
        .O(RAM_reg_0_15_0_0__27_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0]_0 ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3847 RAM_reg_0_15_0_0__28
       (.A0(RAM_reg_0_127_13_13_i_5_n_0),
        .A1(RAM_reg_0_127_13_13_i_4_n_0),
        .A2(RAM_reg_0_127_13_13_i_3_n_0),
        .A3(RAM_reg_0_127_13_13_i_2_n_0),
        .A4(1'b0),
        .D(wd_mem[29]),
        .O(RAM_reg_0_15_0_0__28_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0]_0 ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3848 RAM_reg_0_15_0_0__29
       (.A0(RAM_reg_0_127_14_14_i_5_n_0),
        .A1(RAM_reg_0_127_14_14_i_4_n_0),
        .A2(RAM_reg_0_127_14_14_i_3_n_0),
        .A3(RAM_reg_0_127_14_14_i_2_n_0),
        .A4(1'b0),
        .D(wd_mem[30]),
        .O(RAM_reg_0_15_0_0__29_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0]_0 ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3849 RAM_reg_0_15_0_0__3
       (.A0(RAM_reg_0_127_4_4_i_4_n_0),
        .A1(RAM_reg_0_127_4_4_i_3_n_0),
        .A2(RAM_reg_0_127_4_4_i_2_n_0),
        .A3(RAM_reg_0_127_4_4_i_1_n_0),
        .A4(1'b0),
        .D(Q[4]),
        .O(RAM_reg_0_15_0_0__3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3850 RAM_reg_0_15_0_0__30
       (.A0(RAM_reg_0_127_15_15_i_5_n_0),
        .A1(RAM_reg_0_127_15_15_i_4_n_0),
        .A2(RAM_reg_0_127_15_15_i_3_n_0),
        .A3(RAM_reg_0_127_15_15_i_2_n_0),
        .A4(1'b0),
        .D(wd_mem[31]),
        .O(RAM_reg_0_15_0_0__30_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0]_0 ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3851 RAM_reg_0_15_0_0__4
       (.A0(RAM_reg_0_127_5_5_i_4_n_0),
        .A1(RAM_reg_0_127_5_5_i_3_n_0),
        .A2(RAM_reg_0_127_5_5_i_2_n_0),
        .A3(RAM_reg_0_127_5_5_i_1_n_0),
        .A4(1'b0),
        .D(Q[5]),
        .O(RAM_reg_0_15_0_0__4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3852 RAM_reg_0_15_0_0__5
       (.A0(RAM_reg_0_127_6_6_i_4_n_0),
        .A1(RAM_reg_0_127_6_6_i_3_n_0),
        .A2(RAM_reg_0_127_6_6_i_2_n_0),
        .A3(RAM_reg_0_127_6_6_i_1_n_0),
        .A4(1'b0),
        .D(Q[6]),
        .O(RAM_reg_0_15_0_0__5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3853 RAM_reg_0_15_0_0__6
       (.A0(RAM_reg_0_127_7_7_i_4_n_0),
        .A1(RAM_reg_0_127_7_7_i_3_n_0),
        .A2(RAM_reg_0_127_7_7_i_2_n_0),
        .A3(RAM_reg_0_127_7_7_i_1_n_0),
        .A4(1'b0),
        .D(Q[7]),
        .O(RAM_reg_0_15_0_0__6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_0_15_0_0_i_1_n_0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3854 RAM_reg_0_15_0_0__7
       (.A0(RAM_reg_0_127_8_8_i_6_n_0),
        .A1(RAM_reg_0_127_8_8_i_5_n_0),
        .A2(RAM_reg_0_127_8_8_i_4_n_0),
        .A3(RAM_reg_0_127_8_8_i_3_n_0),
        .A4(1'b0),
        .D(\FSM_sequential_state_reg[1] [0]),
        .O(RAM_reg_0_15_0_0__7_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0] ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3855 RAM_reg_0_15_0_0__8
       (.A0(RAM_reg_0_127_9_9_i_5_n_0),
        .A1(RAM_reg_0_127_9_9_i_4_n_0),
        .A2(RAM_reg_0_127_9_9_i_3_n_0),
        .A3(RAM_reg_0_127_9_9_i_2_n_0),
        .A4(1'b0),
        .D(\FSM_sequential_state_reg[1] [1]),
        .O(RAM_reg_0_15_0_0__8_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0] ));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1S_HD3856 RAM_reg_0_15_0_0__9
       (.A0(RAM_reg_0_127_10_10_i_5_n_0),
        .A1(RAM_reg_0_127_10_10_i_4_n_0),
        .A2(RAM_reg_0_127_10_10_i_3_n_0),
        .A3(RAM_reg_0_127_10_10_i_2_n_0),
        .A4(1'b0),
        .D(\FSM_sequential_state_reg[1] [2]),
        .O(RAM_reg_0_15_0_0__9_n_1),
        .WCLK(CLK),
        .WE(\FSM_sequential_state_reg[0] ));
  LUT2 #(
    .INIT(4'h2)) 
    RAM_reg_0_15_0_0_i_1
       (.I0(RAM_reg_0_127_0_0_i_14_n_0),
        .I1(\register_array_reg[0][15]_1 ),
        .O(RAM_reg_0_15_0_0_i_1_n_0));
  LUT5 #(
    .INIT(32'hFFFFFEFF)) 
    RAM_reg_0_15_0_0_i_2
       (.I0(ad_mem[6]),
        .I1(ad_mem[8]),
        .I2(ad_mem[11]),
        .I3(ad_mem[13]),
        .I4(RAM_reg_0_15_0_0_i_3_n_0),
        .O(\register_array_reg[0][15]_1 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    RAM_reg_0_15_0_0_i_3
       (.I0(ad_mem[9]),
        .I1(ad_mem[10]),
        .I2(ad_mem[7]),
        .I3(ad_mem[12]),
        .O(RAM_reg_0_15_0_0_i_3_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3857 RAM_reg_1024_1151_0_0
       (.A(ad_mem[8:2]),
        .D(Q[0]),
        .DPO(NLW_RAM_reg_1024_1151_0_0_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    RAM_reg_1024_1151_0_0_i_1
       (.I0(ad_mem[13]),
        .I1(ad_mem[9]),
        .I2(ad_mem[11]),
        .I3(ad_mem[10]),
        .I4(RAM_reg_0_127_0_0_i_14_n_0),
        .I5(ad_mem[12]),
        .O(RAM_reg_1024_1151_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3858 RAM_reg_1024_1151_10_10
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [2]),
        .DPO(NLW_RAM_reg_1024_1151_10_10_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_10_10_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3859 RAM_reg_1024_1151_11_11
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [3]),
        .DPO(NLW_RAM_reg_1024_1151_11_11_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_11_11_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3860 RAM_reg_1024_1151_12_12
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [4]),
        .DPO(NLW_RAM_reg_1024_1151_12_12_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_12_12_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3861 RAM_reg_1024_1151_13_13
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [5]),
        .DPO(NLW_RAM_reg_1024_1151_13_13_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_13_13_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3862 RAM_reg_1024_1151_14_14
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [6]),
        .DPO(NLW_RAM_reg_1024_1151_14_14_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_14_14_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3863 RAM_reg_1024_1151_15_15
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [7]),
        .DPO(NLW_RAM_reg_1024_1151_15_15_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_15_15_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3864 RAM_reg_1024_1151_16_16
       (.A(ad_mem[8:2]),
        .D(wd_mem[16]),
        .DPO(NLW_RAM_reg_1024_1151_16_16_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_16_16_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_16_16_i_1_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    RAM_reg_1024_1151_16_16_i_1
       (.I0(ad_mem[13]),
        .I1(ad_mem[9]),
        .I2(ad_mem[11]),
        .I3(ad_mem[10]),
        .I4(\FSM_sequential_state_reg[0]_9 ),
        .I5(ad_mem[12]),
        .O(RAM_reg_1024_1151_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3865 RAM_reg_1024_1151_17_17
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(wd_mem[17]),
        .DPO(NLW_RAM_reg_1024_1151_17_17_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_17_17_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3866 RAM_reg_1024_1151_18_18
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(wd_mem[18]),
        .DPO(NLW_RAM_reg_1024_1151_18_18_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_18_18_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3867 RAM_reg_1024_1151_19_19
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(wd_mem[19]),
        .DPO(NLW_RAM_reg_1024_1151_19_19_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_19_19_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3868 RAM_reg_1024_1151_1_1
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(Q[1]),
        .DPO(NLW_RAM_reg_1024_1151_1_1_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_1_1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3869 RAM_reg_1024_1151_20_20
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(wd_mem[20]),
        .DPO(NLW_RAM_reg_1024_1151_20_20_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_20_20_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3870 RAM_reg_1024_1151_21_21
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(wd_mem[21]),
        .DPO(NLW_RAM_reg_1024_1151_21_21_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_21_21_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3871 RAM_reg_1024_1151_22_22
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(wd_mem[22]),
        .DPO(NLW_RAM_reg_1024_1151_22_22_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_22_22_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3872 RAM_reg_1024_1151_23_23
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(wd_mem[23]),
        .DPO(NLW_RAM_reg_1024_1151_23_23_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_23_23_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3873 RAM_reg_1024_1151_24_24
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(wd_mem[24]),
        .DPO(NLW_RAM_reg_1024_1151_24_24_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_24_24_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3874 RAM_reg_1024_1151_25_25
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(wd_mem[25]),
        .DPO(NLW_RAM_reg_1024_1151_25_25_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_25_25_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3875 RAM_reg_1024_1151_26_26
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(wd_mem[26]),
        .DPO(NLW_RAM_reg_1024_1151_26_26_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_26_26_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3876 RAM_reg_1024_1151_27_27
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(wd_mem[27]),
        .DPO(NLW_RAM_reg_1024_1151_27_27_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_27_27_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3877 RAM_reg_1024_1151_28_28
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(wd_mem[28]),
        .DPO(NLW_RAM_reg_1024_1151_28_28_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_28_28_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3878 RAM_reg_1024_1151_29_29
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(wd_mem[29]),
        .DPO(NLW_RAM_reg_1024_1151_29_29_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_29_29_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3879 RAM_reg_1024_1151_2_2
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(Q[2]),
        .DPO(NLW_RAM_reg_1024_1151_2_2_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_2_2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3880 RAM_reg_1024_1151_30_30
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(wd_mem[30]),
        .DPO(NLW_RAM_reg_1024_1151_30_30_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_30_30_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3881 RAM_reg_1024_1151_31_31
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(wd_mem[31]),
        .DPO(NLW_RAM_reg_1024_1151_31_31_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_31_31_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3882 RAM_reg_1024_1151_3_3
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(Q[3]),
        .DPO(NLW_RAM_reg_1024_1151_3_3_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_3_3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3883 RAM_reg_1024_1151_4_4
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(Q[4]),
        .DPO(NLW_RAM_reg_1024_1151_4_4_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_4_4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3884 RAM_reg_1024_1151_5_5
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(Q[5]),
        .DPO(NLW_RAM_reg_1024_1151_5_5_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_5_5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3885 RAM_reg_1024_1151_6_6
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(Q[6]),
        .DPO(NLW_RAM_reg_1024_1151_6_6_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_6_6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3886 RAM_reg_1024_1151_7_7
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(Q[7]),
        .DPO(NLW_RAM_reg_1024_1151_7_7_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_7_7_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3887 RAM_reg_1024_1151_8_8
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(\FSM_sequential_state_reg[1] [0]),
        .DPO(NLW_RAM_reg_1024_1151_8_8_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_8_8_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_8_8_i_1_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    RAM_reg_1024_1151_8_8_i_1
       (.I0(ad_mem[13]),
        .I1(ad_mem[9]),
        .I2(ad_mem[11]),
        .I3(ad_mem[10]),
        .I4(\FSM_sequential_state_reg[0]_8 ),
        .I5(ad_mem[12]),
        .O(RAM_reg_1024_1151_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3888 RAM_reg_1024_1151_9_9
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [1]),
        .DPO(NLW_RAM_reg_1024_1151_9_9_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1024_1151_9_9_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1024_1151_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3889 RAM_reg_1152_1279_0_0
       (.A(ad_mem[8:2]),
        .D(Q[0]),
        .DPO(NLW_RAM_reg_1152_1279_0_0_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000004000000)) 
    RAM_reg_1152_1279_0_0_i_1
       (.I0(ad_mem[13]),
        .I1(RAM_reg_0_127_0_0_i_14_n_0),
        .I2(ad_mem[10]),
        .I3(ad_mem[9]),
        .I4(ad_mem[12]),
        .I5(ad_mem[11]),
        .O(RAM_reg_1152_1279_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3890 RAM_reg_1152_1279_10_10
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [2]),
        .DPO(NLW_RAM_reg_1152_1279_10_10_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_10_10_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3891 RAM_reg_1152_1279_11_11
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [3]),
        .DPO(NLW_RAM_reg_1152_1279_11_11_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_11_11_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3892 RAM_reg_1152_1279_12_12
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [4]),
        .DPO(NLW_RAM_reg_1152_1279_12_12_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_12_12_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3893 RAM_reg_1152_1279_13_13
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [5]),
        .DPO(NLW_RAM_reg_1152_1279_13_13_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_13_13_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3894 RAM_reg_1152_1279_14_14
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [6]),
        .DPO(NLW_RAM_reg_1152_1279_14_14_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_14_14_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3895 RAM_reg_1152_1279_15_15
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [7]),
        .DPO(NLW_RAM_reg_1152_1279_15_15_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_15_15_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3896 RAM_reg_1152_1279_16_16
       (.A(ad_mem[8:2]),
        .D(wd_mem[16]),
        .DPO(NLW_RAM_reg_1152_1279_16_16_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_16_16_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_16_16_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    RAM_reg_1152_1279_16_16_i_1
       (.I0(ad_mem[10]),
        .I1(ad_mem[9]),
        .I2(ad_mem[12]),
        .I3(ad_mem[11]),
        .I4(\FSM_sequential_state_reg[0]_9 ),
        .I5(ad_mem[13]),
        .O(RAM_reg_1152_1279_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3897 RAM_reg_1152_1279_17_17
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(wd_mem[17]),
        .DPO(NLW_RAM_reg_1152_1279_17_17_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_17_17_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3898 RAM_reg_1152_1279_18_18
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(wd_mem[18]),
        .DPO(NLW_RAM_reg_1152_1279_18_18_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_18_18_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3899 RAM_reg_1152_1279_19_19
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(wd_mem[19]),
        .DPO(NLW_RAM_reg_1152_1279_19_19_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_19_19_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3900 RAM_reg_1152_1279_1_1
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(Q[1]),
        .DPO(NLW_RAM_reg_1152_1279_1_1_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_1_1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3901 RAM_reg_1152_1279_20_20
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(wd_mem[20]),
        .DPO(NLW_RAM_reg_1152_1279_20_20_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_20_20_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3902 RAM_reg_1152_1279_21_21
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(wd_mem[21]),
        .DPO(NLW_RAM_reg_1152_1279_21_21_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_21_21_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3903 RAM_reg_1152_1279_22_22
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(wd_mem[22]),
        .DPO(NLW_RAM_reg_1152_1279_22_22_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_22_22_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3904 RAM_reg_1152_1279_23_23
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(wd_mem[23]),
        .DPO(NLW_RAM_reg_1152_1279_23_23_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_23_23_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3905 RAM_reg_1152_1279_24_24
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(wd_mem[24]),
        .DPO(NLW_RAM_reg_1152_1279_24_24_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_24_24_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3906 RAM_reg_1152_1279_25_25
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(wd_mem[25]),
        .DPO(NLW_RAM_reg_1152_1279_25_25_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_25_25_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3907 RAM_reg_1152_1279_26_26
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(wd_mem[26]),
        .DPO(NLW_RAM_reg_1152_1279_26_26_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_26_26_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3908 RAM_reg_1152_1279_27_27
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(wd_mem[27]),
        .DPO(NLW_RAM_reg_1152_1279_27_27_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_27_27_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3909 RAM_reg_1152_1279_28_28
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(wd_mem[28]),
        .DPO(NLW_RAM_reg_1152_1279_28_28_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_28_28_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3910 RAM_reg_1152_1279_29_29
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(wd_mem[29]),
        .DPO(NLW_RAM_reg_1152_1279_29_29_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_29_29_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3911 RAM_reg_1152_1279_2_2
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(Q[2]),
        .DPO(NLW_RAM_reg_1152_1279_2_2_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_2_2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3912 RAM_reg_1152_1279_30_30
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(wd_mem[30]),
        .DPO(NLW_RAM_reg_1152_1279_30_30_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_30_30_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3913 RAM_reg_1152_1279_31_31
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(wd_mem[31]),
        .DPO(NLW_RAM_reg_1152_1279_31_31_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_31_31_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3914 RAM_reg_1152_1279_3_3
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(Q[3]),
        .DPO(NLW_RAM_reg_1152_1279_3_3_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_3_3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3915 RAM_reg_1152_1279_4_4
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(Q[4]),
        .DPO(NLW_RAM_reg_1152_1279_4_4_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_4_4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3916 RAM_reg_1152_1279_5_5
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(Q[5]),
        .DPO(NLW_RAM_reg_1152_1279_5_5_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_5_5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3917 RAM_reg_1152_1279_6_6
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(Q[6]),
        .DPO(NLW_RAM_reg_1152_1279_6_6_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_6_6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3918 RAM_reg_1152_1279_7_7
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(Q[7]),
        .DPO(NLW_RAM_reg_1152_1279_7_7_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_7_7_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3919 RAM_reg_1152_1279_8_8
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(\FSM_sequential_state_reg[1] [0]),
        .DPO(NLW_RAM_reg_1152_1279_8_8_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_8_8_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_8_8_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    RAM_reg_1152_1279_8_8_i_1
       (.I0(ad_mem[10]),
        .I1(ad_mem[9]),
        .I2(ad_mem[12]),
        .I3(ad_mem[11]),
        .I4(\FSM_sequential_state_reg[0]_8 ),
        .I5(ad_mem[13]),
        .O(RAM_reg_1152_1279_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3920 RAM_reg_1152_1279_9_9
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [1]),
        .DPO(NLW_RAM_reg_1152_1279_9_9_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1152_1279_9_9_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1152_1279_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3921 RAM_reg_1280_1407_0_0
       (.A(ad_mem[8:2]),
        .D(Q[0]),
        .DPO(NLW_RAM_reg_1280_1407_0_0_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000004000000)) 
    RAM_reg_1280_1407_0_0_i_1
       (.I0(ad_mem[9]),
        .I1(RAM_reg_0_127_0_0_i_14_n_0),
        .I2(ad_mem[13]),
        .I3(ad_mem[12]),
        .I4(ad_mem[10]),
        .I5(ad_mem[11]),
        .O(RAM_reg_1280_1407_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3922 RAM_reg_1280_1407_10_10
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [2]),
        .DPO(NLW_RAM_reg_1280_1407_10_10_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_10_10_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3923 RAM_reg_1280_1407_11_11
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [3]),
        .DPO(NLW_RAM_reg_1280_1407_11_11_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_11_11_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3924 RAM_reg_1280_1407_12_12
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [4]),
        .DPO(NLW_RAM_reg_1280_1407_12_12_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_12_12_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3925 RAM_reg_1280_1407_13_13
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [5]),
        .DPO(NLW_RAM_reg_1280_1407_13_13_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_13_13_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3926 RAM_reg_1280_1407_14_14
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [6]),
        .DPO(NLW_RAM_reg_1280_1407_14_14_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_14_14_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3927 RAM_reg_1280_1407_15_15
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [7]),
        .DPO(NLW_RAM_reg_1280_1407_15_15_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_15_15_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3928 RAM_reg_1280_1407_16_16
       (.A(ad_mem[8:2]),
        .D(wd_mem[16]),
        .DPO(NLW_RAM_reg_1280_1407_16_16_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_16_16_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_16_16_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    RAM_reg_1280_1407_16_16_i_1
       (.I0(ad_mem[13]),
        .I1(ad_mem[12]),
        .I2(ad_mem[10]),
        .I3(ad_mem[11]),
        .I4(\FSM_sequential_state_reg[0]_9 ),
        .I5(ad_mem[9]),
        .O(RAM_reg_1280_1407_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3929 RAM_reg_1280_1407_17_17
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(wd_mem[17]),
        .DPO(NLW_RAM_reg_1280_1407_17_17_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_17_17_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3930 RAM_reg_1280_1407_18_18
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(wd_mem[18]),
        .DPO(NLW_RAM_reg_1280_1407_18_18_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_18_18_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3931 RAM_reg_1280_1407_19_19
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(wd_mem[19]),
        .DPO(NLW_RAM_reg_1280_1407_19_19_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_19_19_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3932 RAM_reg_1280_1407_1_1
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(Q[1]),
        .DPO(NLW_RAM_reg_1280_1407_1_1_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_1_1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3933 RAM_reg_1280_1407_20_20
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(wd_mem[20]),
        .DPO(NLW_RAM_reg_1280_1407_20_20_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_20_20_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3934 RAM_reg_1280_1407_21_21
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(wd_mem[21]),
        .DPO(NLW_RAM_reg_1280_1407_21_21_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_21_21_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3935 RAM_reg_1280_1407_22_22
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(wd_mem[22]),
        .DPO(NLW_RAM_reg_1280_1407_22_22_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_22_22_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3936 RAM_reg_1280_1407_23_23
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(wd_mem[23]),
        .DPO(NLW_RAM_reg_1280_1407_23_23_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_23_23_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3937 RAM_reg_1280_1407_24_24
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(wd_mem[24]),
        .DPO(NLW_RAM_reg_1280_1407_24_24_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_24_24_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3938 RAM_reg_1280_1407_25_25
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(wd_mem[25]),
        .DPO(NLW_RAM_reg_1280_1407_25_25_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_25_25_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3939 RAM_reg_1280_1407_26_26
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(wd_mem[26]),
        .DPO(NLW_RAM_reg_1280_1407_26_26_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_26_26_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3940 RAM_reg_1280_1407_27_27
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(wd_mem[27]),
        .DPO(NLW_RAM_reg_1280_1407_27_27_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_27_27_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3941 RAM_reg_1280_1407_28_28
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(wd_mem[28]),
        .DPO(NLW_RAM_reg_1280_1407_28_28_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_28_28_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3942 RAM_reg_1280_1407_29_29
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(wd_mem[29]),
        .DPO(NLW_RAM_reg_1280_1407_29_29_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_29_29_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3943 RAM_reg_1280_1407_2_2
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(Q[2]),
        .DPO(NLW_RAM_reg_1280_1407_2_2_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_2_2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3944 RAM_reg_1280_1407_30_30
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(wd_mem[30]),
        .DPO(NLW_RAM_reg_1280_1407_30_30_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_30_30_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3945 RAM_reg_1280_1407_31_31
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(wd_mem[31]),
        .DPO(NLW_RAM_reg_1280_1407_31_31_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_31_31_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3946 RAM_reg_1280_1407_3_3
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(Q[3]),
        .DPO(NLW_RAM_reg_1280_1407_3_3_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_3_3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3947 RAM_reg_1280_1407_4_4
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(Q[4]),
        .DPO(NLW_RAM_reg_1280_1407_4_4_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_4_4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3948 RAM_reg_1280_1407_5_5
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(Q[5]),
        .DPO(NLW_RAM_reg_1280_1407_5_5_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_5_5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3949 RAM_reg_1280_1407_6_6
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(Q[6]),
        .DPO(NLW_RAM_reg_1280_1407_6_6_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_6_6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3950 RAM_reg_1280_1407_7_7
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(Q[7]),
        .DPO(NLW_RAM_reg_1280_1407_7_7_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_7_7_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3951 RAM_reg_1280_1407_8_8
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(\FSM_sequential_state_reg[1] [0]),
        .DPO(NLW_RAM_reg_1280_1407_8_8_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_8_8_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_8_8_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000400000)) 
    RAM_reg_1280_1407_8_8_i_1
       (.I0(ad_mem[13]),
        .I1(ad_mem[12]),
        .I2(ad_mem[10]),
        .I3(ad_mem[11]),
        .I4(\FSM_sequential_state_reg[0]_8 ),
        .I5(ad_mem[9]),
        .O(RAM_reg_1280_1407_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3952 RAM_reg_1280_1407_9_9
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [1]),
        .DPO(NLW_RAM_reg_1280_1407_9_9_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1280_1407_9_9_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1280_1407_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3953 RAM_reg_128_255_0_0
       (.A(ad_mem[8:2]),
        .D(Q[0]),
        .DPO(RAM_reg_128_255_0_0_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    RAM_reg_128_255_0_0_i_1
       (.I0(RAM_reg_0_127_0_0_i_14_n_0),
        .I1(ad_mem[9]),
        .I2(ad_mem[11]),
        .I3(ad_mem[12]),
        .I4(ad_mem[13]),
        .I5(ad_mem[10]),
        .O(RAM_reg_128_255_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3954 RAM_reg_128_255_10_10
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [2]),
        .DPO(RAM_reg_128_255_10_10_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_10_10_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3955 RAM_reg_128_255_11_11
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [3]),
        .DPO(RAM_reg_128_255_11_11_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_11_11_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3956 RAM_reg_128_255_12_12
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [4]),
        .DPO(RAM_reg_128_255_12_12_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_12_12_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3957 RAM_reg_128_255_13_13
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [5]),
        .DPO(RAM_reg_128_255_13_13_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_13_13_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3958 RAM_reg_128_255_14_14
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [6]),
        .DPO(RAM_reg_128_255_14_14_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_14_14_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3959 RAM_reg_128_255_15_15
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [7]),
        .DPO(RAM_reg_128_255_15_15_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_15_15_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3960 RAM_reg_128_255_16_16
       (.A(ad_mem[8:2]),
        .D(wd_mem[16]),
        .DPO(RAM_reg_128_255_16_16_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_16_16_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_16_16_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    RAM_reg_128_255_16_16_i_1
       (.I0(\FSM_sequential_state_reg[0]_9 ),
        .I1(ad_mem[9]),
        .I2(ad_mem[11]),
        .I3(ad_mem[12]),
        .I4(ad_mem[13]),
        .I5(ad_mem[10]),
        .O(RAM_reg_128_255_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3961 RAM_reg_128_255_17_17
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(wd_mem[17]),
        .DPO(RAM_reg_128_255_17_17_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_17_17_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3962 RAM_reg_128_255_18_18
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(wd_mem[18]),
        .DPO(RAM_reg_128_255_18_18_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_18_18_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3963 RAM_reg_128_255_19_19
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(wd_mem[19]),
        .DPO(RAM_reg_128_255_19_19_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_19_19_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3964 RAM_reg_128_255_1_1
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(Q[1]),
        .DPO(RAM_reg_128_255_1_1_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_1_1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3965 RAM_reg_128_255_20_20
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(wd_mem[20]),
        .DPO(RAM_reg_128_255_20_20_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_20_20_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3966 RAM_reg_128_255_21_21
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(wd_mem[21]),
        .DPO(RAM_reg_128_255_21_21_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_21_21_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3967 RAM_reg_128_255_22_22
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(wd_mem[22]),
        .DPO(RAM_reg_128_255_22_22_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_22_22_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3968 RAM_reg_128_255_23_23
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(wd_mem[23]),
        .DPO(RAM_reg_128_255_23_23_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_23_23_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3969 RAM_reg_128_255_24_24
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(wd_mem[24]),
        .DPO(RAM_reg_128_255_24_24_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_24_24_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3970 RAM_reg_128_255_25_25
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(wd_mem[25]),
        .DPO(RAM_reg_128_255_25_25_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_25_25_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3971 RAM_reg_128_255_26_26
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(wd_mem[26]),
        .DPO(RAM_reg_128_255_26_26_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_26_26_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3972 RAM_reg_128_255_27_27
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(wd_mem[27]),
        .DPO(RAM_reg_128_255_27_27_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_27_27_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3973 RAM_reg_128_255_28_28
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(wd_mem[28]),
        .DPO(RAM_reg_128_255_28_28_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_28_28_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3974 RAM_reg_128_255_29_29
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(wd_mem[29]),
        .DPO(RAM_reg_128_255_29_29_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_29_29_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3975 RAM_reg_128_255_2_2
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(Q[2]),
        .DPO(RAM_reg_128_255_2_2_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_2_2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3976 RAM_reg_128_255_30_30
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(wd_mem[30]),
        .DPO(RAM_reg_128_255_30_30_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_30_30_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3977 RAM_reg_128_255_31_31
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(wd_mem[31]),
        .DPO(RAM_reg_128_255_31_31_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_31_31_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3978 RAM_reg_128_255_3_3
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(Q[3]),
        .DPO(RAM_reg_128_255_3_3_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_3_3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3979 RAM_reg_128_255_4_4
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(Q[4]),
        .DPO(RAM_reg_128_255_4_4_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_4_4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3980 RAM_reg_128_255_5_5
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(Q[5]),
        .DPO(RAM_reg_128_255_5_5_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_5_5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3981 RAM_reg_128_255_6_6
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(Q[6]),
        .DPO(RAM_reg_128_255_6_6_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_6_6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3982 RAM_reg_128_255_7_7
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(Q[7]),
        .DPO(RAM_reg_128_255_7_7_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_7_7_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3983 RAM_reg_128_255_8_8
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(\FSM_sequential_state_reg[1] [0]),
        .DPO(RAM_reg_128_255_8_8_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_8_8_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_8_8_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    RAM_reg_128_255_8_8_i_1
       (.I0(\FSM_sequential_state_reg[0]_8 ),
        .I1(ad_mem[9]),
        .I2(ad_mem[11]),
        .I3(ad_mem[12]),
        .I4(ad_mem[13]),
        .I5(ad_mem[10]),
        .O(RAM_reg_128_255_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3984 RAM_reg_128_255_9_9
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [1]),
        .DPO(RAM_reg_128_255_9_9_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_128_255_9_9_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_128_255_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3985 RAM_reg_1408_1535_0_0
       (.A(ad_mem[8:2]),
        .D(Q[0]),
        .DPO(NLW_RAM_reg_1408_1535_0_0_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000800000)) 
    RAM_reg_1408_1535_0_0_i_1
       (.I0(ad_mem[10]),
        .I1(ad_mem[9]),
        .I2(RAM_reg_0_127_0_0_i_14_n_0),
        .I3(ad_mem[13]),
        .I4(ad_mem[12]),
        .I5(ad_mem[11]),
        .O(RAM_reg_1408_1535_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3986 RAM_reg_1408_1535_10_10
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [2]),
        .DPO(NLW_RAM_reg_1408_1535_10_10_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_10_10_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3987 RAM_reg_1408_1535_11_11
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [3]),
        .DPO(NLW_RAM_reg_1408_1535_11_11_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_11_11_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3988 RAM_reg_1408_1535_12_12
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [4]),
        .DPO(NLW_RAM_reg_1408_1535_12_12_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_12_12_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3989 RAM_reg_1408_1535_13_13
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [5]),
        .DPO(NLW_RAM_reg_1408_1535_13_13_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_13_13_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3990 RAM_reg_1408_1535_14_14
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [6]),
        .DPO(NLW_RAM_reg_1408_1535_14_14_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_14_14_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3991 RAM_reg_1408_1535_15_15
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [7]),
        .DPO(NLW_RAM_reg_1408_1535_15_15_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_15_15_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3992 RAM_reg_1408_1535_16_16
       (.A(ad_mem[8:2]),
        .D(wd_mem[16]),
        .DPO(NLW_RAM_reg_1408_1535_16_16_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_16_16_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_16_16_i_1_n_0));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    RAM_reg_1408_1535_16_16_i_1
       (.I0(ad_mem[13]),
        .I1(ad_mem[12]),
        .I2(ad_mem[11]),
        .I3(\FSM_sequential_state_reg[0]_9 ),
        .I4(ad_mem[10]),
        .I5(ad_mem[9]),
        .O(RAM_reg_1408_1535_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3993 RAM_reg_1408_1535_17_17
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(wd_mem[17]),
        .DPO(NLW_RAM_reg_1408_1535_17_17_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_17_17_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3994 RAM_reg_1408_1535_18_18
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(wd_mem[18]),
        .DPO(NLW_RAM_reg_1408_1535_18_18_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_18_18_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3995 RAM_reg_1408_1535_19_19
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(wd_mem[19]),
        .DPO(NLW_RAM_reg_1408_1535_19_19_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_19_19_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3996 RAM_reg_1408_1535_1_1
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(Q[1]),
        .DPO(NLW_RAM_reg_1408_1535_1_1_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_1_1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3997 RAM_reg_1408_1535_20_20
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(wd_mem[20]),
        .DPO(NLW_RAM_reg_1408_1535_20_20_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_20_20_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3998 RAM_reg_1408_1535_21_21
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(wd_mem[21]),
        .DPO(NLW_RAM_reg_1408_1535_21_21_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_21_21_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD3999 RAM_reg_1408_1535_22_22
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(wd_mem[22]),
        .DPO(NLW_RAM_reg_1408_1535_22_22_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_22_22_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4000 RAM_reg_1408_1535_23_23
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(wd_mem[23]),
        .DPO(NLW_RAM_reg_1408_1535_23_23_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_23_23_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4001 RAM_reg_1408_1535_24_24
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(wd_mem[24]),
        .DPO(NLW_RAM_reg_1408_1535_24_24_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_24_24_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4002 RAM_reg_1408_1535_25_25
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(wd_mem[25]),
        .DPO(NLW_RAM_reg_1408_1535_25_25_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_25_25_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4003 RAM_reg_1408_1535_26_26
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(wd_mem[26]),
        .DPO(NLW_RAM_reg_1408_1535_26_26_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_26_26_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4004 RAM_reg_1408_1535_27_27
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(wd_mem[27]),
        .DPO(NLW_RAM_reg_1408_1535_27_27_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_27_27_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4005 RAM_reg_1408_1535_28_28
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(wd_mem[28]),
        .DPO(NLW_RAM_reg_1408_1535_28_28_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_28_28_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4006 RAM_reg_1408_1535_29_29
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(wd_mem[29]),
        .DPO(NLW_RAM_reg_1408_1535_29_29_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_29_29_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4007 RAM_reg_1408_1535_2_2
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(Q[2]),
        .DPO(NLW_RAM_reg_1408_1535_2_2_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_2_2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4008 RAM_reg_1408_1535_30_30
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(wd_mem[30]),
        .DPO(NLW_RAM_reg_1408_1535_30_30_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_30_30_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4009 RAM_reg_1408_1535_31_31
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(wd_mem[31]),
        .DPO(NLW_RAM_reg_1408_1535_31_31_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_31_31_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4010 RAM_reg_1408_1535_3_3
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(Q[3]),
        .DPO(NLW_RAM_reg_1408_1535_3_3_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_3_3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4011 RAM_reg_1408_1535_4_4
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(Q[4]),
        .DPO(NLW_RAM_reg_1408_1535_4_4_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_4_4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4012 RAM_reg_1408_1535_5_5
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(Q[5]),
        .DPO(NLW_RAM_reg_1408_1535_5_5_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_5_5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4013 RAM_reg_1408_1535_6_6
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(Q[6]),
        .DPO(NLW_RAM_reg_1408_1535_6_6_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_6_6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4014 RAM_reg_1408_1535_7_7
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(Q[7]),
        .DPO(NLW_RAM_reg_1408_1535_7_7_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_7_7_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4015 RAM_reg_1408_1535_8_8
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(\FSM_sequential_state_reg[1] [0]),
        .DPO(NLW_RAM_reg_1408_1535_8_8_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_8_8_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_8_8_i_1_n_0));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    RAM_reg_1408_1535_8_8_i_1
       (.I0(ad_mem[13]),
        .I1(ad_mem[12]),
        .I2(ad_mem[11]),
        .I3(\FSM_sequential_state_reg[0]_8 ),
        .I4(ad_mem[10]),
        .I5(ad_mem[9]),
        .O(RAM_reg_1408_1535_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4016 RAM_reg_1408_1535_9_9
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [1]),
        .DPO(NLW_RAM_reg_1408_1535_9_9_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1408_1535_9_9_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1408_1535_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4017 RAM_reg_1536_1663_0_0
       (.A(ad_mem[8:2]),
        .D(Q[0]),
        .DPO(NLW_RAM_reg_1536_1663_0_0_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0004000000000000)) 
    RAM_reg_1536_1663_0_0_i_1
       (.I0(ad_mem[9]),
        .I1(RAM_reg_0_127_0_0_i_14_n_0),
        .I2(ad_mem[13]),
        .I3(ad_mem[10]),
        .I4(ad_mem[12]),
        .I5(ad_mem[11]),
        .O(RAM_reg_1536_1663_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4018 RAM_reg_1536_1663_10_10
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [2]),
        .DPO(NLW_RAM_reg_1536_1663_10_10_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_10_10_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4019 RAM_reg_1536_1663_11_11
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [3]),
        .DPO(NLW_RAM_reg_1536_1663_11_11_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_11_11_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4020 RAM_reg_1536_1663_12_12
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [4]),
        .DPO(NLW_RAM_reg_1536_1663_12_12_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_12_12_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4021 RAM_reg_1536_1663_13_13
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [5]),
        .DPO(NLW_RAM_reg_1536_1663_13_13_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_13_13_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4022 RAM_reg_1536_1663_14_14
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [6]),
        .DPO(NLW_RAM_reg_1536_1663_14_14_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_14_14_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4023 RAM_reg_1536_1663_15_15
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [7]),
        .DPO(NLW_RAM_reg_1536_1663_15_15_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_15_15_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4024 RAM_reg_1536_1663_16_16
       (.A(ad_mem[8:2]),
        .D(wd_mem[16]),
        .DPO(NLW_RAM_reg_1536_1663_16_16_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_16_16_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_16_16_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    RAM_reg_1536_1663_16_16_i_1
       (.I0(ad_mem[13]),
        .I1(ad_mem[10]),
        .I2(ad_mem[12]),
        .I3(ad_mem[11]),
        .I4(\FSM_sequential_state_reg[0]_9 ),
        .I5(ad_mem[9]),
        .O(RAM_reg_1536_1663_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4025 RAM_reg_1536_1663_17_17
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(wd_mem[17]),
        .DPO(NLW_RAM_reg_1536_1663_17_17_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_17_17_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4026 RAM_reg_1536_1663_18_18
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(wd_mem[18]),
        .DPO(NLW_RAM_reg_1536_1663_18_18_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_18_18_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4027 RAM_reg_1536_1663_19_19
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(wd_mem[19]),
        .DPO(NLW_RAM_reg_1536_1663_19_19_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_19_19_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4028 RAM_reg_1536_1663_1_1
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(Q[1]),
        .DPO(NLW_RAM_reg_1536_1663_1_1_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_1_1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4029 RAM_reg_1536_1663_20_20
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(wd_mem[20]),
        .DPO(NLW_RAM_reg_1536_1663_20_20_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_20_20_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4030 RAM_reg_1536_1663_21_21
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(wd_mem[21]),
        .DPO(NLW_RAM_reg_1536_1663_21_21_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_21_21_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4031 RAM_reg_1536_1663_22_22
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(wd_mem[22]),
        .DPO(NLW_RAM_reg_1536_1663_22_22_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_22_22_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4032 RAM_reg_1536_1663_23_23
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(wd_mem[23]),
        .DPO(NLW_RAM_reg_1536_1663_23_23_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_23_23_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4033 RAM_reg_1536_1663_24_24
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(wd_mem[24]),
        .DPO(NLW_RAM_reg_1536_1663_24_24_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_24_24_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4034 RAM_reg_1536_1663_25_25
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(wd_mem[25]),
        .DPO(NLW_RAM_reg_1536_1663_25_25_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_25_25_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4035 RAM_reg_1536_1663_26_26
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(wd_mem[26]),
        .DPO(NLW_RAM_reg_1536_1663_26_26_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_26_26_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4036 RAM_reg_1536_1663_27_27
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(wd_mem[27]),
        .DPO(NLW_RAM_reg_1536_1663_27_27_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_27_27_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4037 RAM_reg_1536_1663_28_28
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(wd_mem[28]),
        .DPO(NLW_RAM_reg_1536_1663_28_28_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_28_28_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4038 RAM_reg_1536_1663_29_29
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(wd_mem[29]),
        .DPO(NLW_RAM_reg_1536_1663_29_29_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_29_29_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4039 RAM_reg_1536_1663_2_2
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(Q[2]),
        .DPO(NLW_RAM_reg_1536_1663_2_2_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_2_2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4040 RAM_reg_1536_1663_30_30
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(wd_mem[30]),
        .DPO(NLW_RAM_reg_1536_1663_30_30_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_30_30_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4041 RAM_reg_1536_1663_31_31
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(wd_mem[31]),
        .DPO(NLW_RAM_reg_1536_1663_31_31_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_31_31_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4042 RAM_reg_1536_1663_3_3
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(Q[3]),
        .DPO(NLW_RAM_reg_1536_1663_3_3_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_3_3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4043 RAM_reg_1536_1663_4_4
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(Q[4]),
        .DPO(NLW_RAM_reg_1536_1663_4_4_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_4_4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4044 RAM_reg_1536_1663_5_5
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(Q[5]),
        .DPO(NLW_RAM_reg_1536_1663_5_5_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_5_5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4045 RAM_reg_1536_1663_6_6
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(Q[6]),
        .DPO(NLW_RAM_reg_1536_1663_6_6_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_6_6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4046 RAM_reg_1536_1663_7_7
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(Q[7]),
        .DPO(NLW_RAM_reg_1536_1663_7_7_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_7_7_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4047 RAM_reg_1536_1663_8_8
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(\FSM_sequential_state_reg[1] [0]),
        .DPO(NLW_RAM_reg_1536_1663_8_8_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_8_8_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_8_8_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    RAM_reg_1536_1663_8_8_i_1
       (.I0(ad_mem[13]),
        .I1(ad_mem[10]),
        .I2(ad_mem[12]),
        .I3(ad_mem[11]),
        .I4(\FSM_sequential_state_reg[0]_8 ),
        .I5(ad_mem[9]),
        .O(RAM_reg_1536_1663_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4048 RAM_reg_1536_1663_9_9
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [1]),
        .DPO(NLW_RAM_reg_1536_1663_9_9_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1536_1663_9_9_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1536_1663_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4049 RAM_reg_1664_1791_0_0
       (.A(ad_mem[8:2]),
        .D(Q[0]),
        .DPO(NLW_RAM_reg_1664_1791_0_0_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    RAM_reg_1664_1791_0_0_i_1
       (.I0(RAM_reg_0_127_0_0_i_14_n_0),
        .I1(ad_mem[11]),
        .I2(ad_mem[13]),
        .I3(ad_mem[12]),
        .I4(ad_mem[10]),
        .I5(ad_mem[9]),
        .O(RAM_reg_1664_1791_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4050 RAM_reg_1664_1791_10_10
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [2]),
        .DPO(NLW_RAM_reg_1664_1791_10_10_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_10_10_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4051 RAM_reg_1664_1791_11_11
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [3]),
        .DPO(NLW_RAM_reg_1664_1791_11_11_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_11_11_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4052 RAM_reg_1664_1791_12_12
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [4]),
        .DPO(NLW_RAM_reg_1664_1791_12_12_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_12_12_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4053 RAM_reg_1664_1791_13_13
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [5]),
        .DPO(NLW_RAM_reg_1664_1791_13_13_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_13_13_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4054 RAM_reg_1664_1791_14_14
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [6]),
        .DPO(NLW_RAM_reg_1664_1791_14_14_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_14_14_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4055 RAM_reg_1664_1791_15_15
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [7]),
        .DPO(NLW_RAM_reg_1664_1791_15_15_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_15_15_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4056 RAM_reg_1664_1791_16_16
       (.A(ad_mem[8:2]),
        .D(wd_mem[16]),
        .DPO(NLW_RAM_reg_1664_1791_16_16_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_16_16_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_16_16_i_1_n_0));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    RAM_reg_1664_1791_16_16_i_1
       (.I0(ad_mem[13]),
        .I1(ad_mem[12]),
        .I2(ad_mem[10]),
        .I3(ad_mem[9]),
        .I4(\FSM_sequential_state_reg[0]_9 ),
        .I5(ad_mem[11]),
        .O(RAM_reg_1664_1791_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4057 RAM_reg_1664_1791_17_17
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(wd_mem[17]),
        .DPO(NLW_RAM_reg_1664_1791_17_17_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_17_17_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4058 RAM_reg_1664_1791_18_18
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(wd_mem[18]),
        .DPO(NLW_RAM_reg_1664_1791_18_18_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_18_18_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4059 RAM_reg_1664_1791_19_19
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(wd_mem[19]),
        .DPO(NLW_RAM_reg_1664_1791_19_19_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_19_19_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4060 RAM_reg_1664_1791_1_1
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(Q[1]),
        .DPO(NLW_RAM_reg_1664_1791_1_1_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_1_1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4061 RAM_reg_1664_1791_20_20
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(wd_mem[20]),
        .DPO(NLW_RAM_reg_1664_1791_20_20_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_20_20_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4062 RAM_reg_1664_1791_21_21
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(wd_mem[21]),
        .DPO(NLW_RAM_reg_1664_1791_21_21_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_21_21_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4063 RAM_reg_1664_1791_22_22
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(wd_mem[22]),
        .DPO(NLW_RAM_reg_1664_1791_22_22_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_22_22_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4064 RAM_reg_1664_1791_23_23
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(wd_mem[23]),
        .DPO(NLW_RAM_reg_1664_1791_23_23_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_23_23_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4065 RAM_reg_1664_1791_24_24
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(wd_mem[24]),
        .DPO(NLW_RAM_reg_1664_1791_24_24_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_24_24_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4066 RAM_reg_1664_1791_25_25
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(wd_mem[25]),
        .DPO(NLW_RAM_reg_1664_1791_25_25_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_25_25_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4067 RAM_reg_1664_1791_26_26
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(wd_mem[26]),
        .DPO(NLW_RAM_reg_1664_1791_26_26_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_26_26_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4068 RAM_reg_1664_1791_27_27
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(wd_mem[27]),
        .DPO(NLW_RAM_reg_1664_1791_27_27_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_27_27_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4069 RAM_reg_1664_1791_28_28
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(wd_mem[28]),
        .DPO(NLW_RAM_reg_1664_1791_28_28_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_28_28_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4070 RAM_reg_1664_1791_29_29
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(wd_mem[29]),
        .DPO(NLW_RAM_reg_1664_1791_29_29_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_29_29_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4071 RAM_reg_1664_1791_2_2
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(Q[2]),
        .DPO(NLW_RAM_reg_1664_1791_2_2_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_2_2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4072 RAM_reg_1664_1791_30_30
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(wd_mem[30]),
        .DPO(NLW_RAM_reg_1664_1791_30_30_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_30_30_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4073 RAM_reg_1664_1791_31_31
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(wd_mem[31]),
        .DPO(NLW_RAM_reg_1664_1791_31_31_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_31_31_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4074 RAM_reg_1664_1791_3_3
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(Q[3]),
        .DPO(NLW_RAM_reg_1664_1791_3_3_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_3_3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4075 RAM_reg_1664_1791_4_4
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(Q[4]),
        .DPO(NLW_RAM_reg_1664_1791_4_4_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_4_4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4076 RAM_reg_1664_1791_5_5
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(Q[5]),
        .DPO(NLW_RAM_reg_1664_1791_5_5_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_5_5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4077 RAM_reg_1664_1791_6_6
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(Q[6]),
        .DPO(NLW_RAM_reg_1664_1791_6_6_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_6_6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4078 RAM_reg_1664_1791_7_7
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(Q[7]),
        .DPO(NLW_RAM_reg_1664_1791_7_7_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_7_7_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4079 RAM_reg_1664_1791_8_8
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(\FSM_sequential_state_reg[1] [0]),
        .DPO(NLW_RAM_reg_1664_1791_8_8_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_8_8_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_8_8_i_1_n_0));
  LUT6 #(
    .INIT(64'h0400000000000000)) 
    RAM_reg_1664_1791_8_8_i_1
       (.I0(ad_mem[13]),
        .I1(ad_mem[12]),
        .I2(ad_mem[10]),
        .I3(ad_mem[9]),
        .I4(\FSM_sequential_state_reg[0]_8 ),
        .I5(ad_mem[11]),
        .O(RAM_reg_1664_1791_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4080 RAM_reg_1664_1791_9_9
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [1]),
        .DPO(NLW_RAM_reg_1664_1791_9_9_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1664_1791_9_9_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1664_1791_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4081 RAM_reg_1792_1919_0_0
       (.A(ad_mem[8:2]),
        .D(Q[0]),
        .DPO(NLW_RAM_reg_1792_1919_0_0_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    RAM_reg_1792_1919_0_0_i_1
       (.I0(RAM_reg_0_127_0_0_i_14_n_0),
        .I1(ad_mem[11]),
        .I2(ad_mem[12]),
        .I3(ad_mem[10]),
        .I4(ad_mem[13]),
        .I5(ad_mem[9]),
        .O(RAM_reg_1792_1919_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4082 RAM_reg_1792_1919_10_10
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [2]),
        .DPO(NLW_RAM_reg_1792_1919_10_10_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_10_10_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4083 RAM_reg_1792_1919_11_11
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [3]),
        .DPO(NLW_RAM_reg_1792_1919_11_11_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_11_11_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4084 RAM_reg_1792_1919_12_12
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [4]),
        .DPO(NLW_RAM_reg_1792_1919_12_12_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_12_12_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4085 RAM_reg_1792_1919_13_13
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [5]),
        .DPO(NLW_RAM_reg_1792_1919_13_13_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_13_13_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4086 RAM_reg_1792_1919_14_14
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [6]),
        .DPO(NLW_RAM_reg_1792_1919_14_14_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_14_14_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4087 RAM_reg_1792_1919_15_15
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [7]),
        .DPO(NLW_RAM_reg_1792_1919_15_15_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_15_15_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4088 RAM_reg_1792_1919_16_16
       (.A(ad_mem[8:2]),
        .D(wd_mem[16]),
        .DPO(NLW_RAM_reg_1792_1919_16_16_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_16_16_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_16_16_i_1_n_0));
  LUT6 #(
    .INIT(64'h0008000000000000)) 
    RAM_reg_1792_1919_16_16_i_1
       (.I0(ad_mem[12]),
        .I1(ad_mem[10]),
        .I2(ad_mem[13]),
        .I3(ad_mem[9]),
        .I4(\FSM_sequential_state_reg[0]_9 ),
        .I5(ad_mem[11]),
        .O(RAM_reg_1792_1919_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4089 RAM_reg_1792_1919_17_17
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(wd_mem[17]),
        .DPO(NLW_RAM_reg_1792_1919_17_17_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_17_17_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4090 RAM_reg_1792_1919_18_18
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(wd_mem[18]),
        .DPO(NLW_RAM_reg_1792_1919_18_18_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_18_18_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4091 RAM_reg_1792_1919_19_19
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(wd_mem[19]),
        .DPO(NLW_RAM_reg_1792_1919_19_19_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_19_19_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4092 RAM_reg_1792_1919_1_1
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(Q[1]),
        .DPO(NLW_RAM_reg_1792_1919_1_1_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_1_1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4093 RAM_reg_1792_1919_20_20
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(wd_mem[20]),
        .DPO(NLW_RAM_reg_1792_1919_20_20_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_20_20_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4094 RAM_reg_1792_1919_21_21
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(wd_mem[21]),
        .DPO(NLW_RAM_reg_1792_1919_21_21_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_21_21_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4095 RAM_reg_1792_1919_22_22
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(wd_mem[22]),
        .DPO(NLW_RAM_reg_1792_1919_22_22_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_22_22_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4096 RAM_reg_1792_1919_23_23
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(wd_mem[23]),
        .DPO(NLW_RAM_reg_1792_1919_23_23_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_23_23_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4097 RAM_reg_1792_1919_24_24
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(wd_mem[24]),
        .DPO(NLW_RAM_reg_1792_1919_24_24_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_24_24_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4098 RAM_reg_1792_1919_25_25
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(wd_mem[25]),
        .DPO(NLW_RAM_reg_1792_1919_25_25_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_25_25_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4099 RAM_reg_1792_1919_26_26
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(wd_mem[26]),
        .DPO(NLW_RAM_reg_1792_1919_26_26_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_26_26_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4100 RAM_reg_1792_1919_27_27
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(wd_mem[27]),
        .DPO(NLW_RAM_reg_1792_1919_27_27_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_27_27_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4101 RAM_reg_1792_1919_28_28
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(wd_mem[28]),
        .DPO(NLW_RAM_reg_1792_1919_28_28_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_28_28_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4102 RAM_reg_1792_1919_29_29
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(wd_mem[29]),
        .DPO(NLW_RAM_reg_1792_1919_29_29_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_29_29_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4103 RAM_reg_1792_1919_2_2
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(Q[2]),
        .DPO(NLW_RAM_reg_1792_1919_2_2_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_2_2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4104 RAM_reg_1792_1919_30_30
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(wd_mem[30]),
        .DPO(NLW_RAM_reg_1792_1919_30_30_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_30_30_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4105 RAM_reg_1792_1919_31_31
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(wd_mem[31]),
        .DPO(NLW_RAM_reg_1792_1919_31_31_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_31_31_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4106 RAM_reg_1792_1919_3_3
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(Q[3]),
        .DPO(NLW_RAM_reg_1792_1919_3_3_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_3_3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4107 RAM_reg_1792_1919_4_4
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(Q[4]),
        .DPO(NLW_RAM_reg_1792_1919_4_4_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_4_4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4108 RAM_reg_1792_1919_5_5
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(Q[5]),
        .DPO(NLW_RAM_reg_1792_1919_5_5_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_5_5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4109 RAM_reg_1792_1919_6_6
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(Q[6]),
        .DPO(NLW_RAM_reg_1792_1919_6_6_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_6_6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4110 RAM_reg_1792_1919_7_7
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(Q[7]),
        .DPO(NLW_RAM_reg_1792_1919_7_7_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_7_7_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4111 RAM_reg_1792_1919_8_8
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(\FSM_sequential_state_reg[1] [0]),
        .DPO(NLW_RAM_reg_1792_1919_8_8_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_8_8_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_8_8_i_1_n_0));
  LUT6 #(
    .INIT(64'h0008000000000000)) 
    RAM_reg_1792_1919_8_8_i_1
       (.I0(ad_mem[12]),
        .I1(ad_mem[10]),
        .I2(ad_mem[13]),
        .I3(ad_mem[9]),
        .I4(\FSM_sequential_state_reg[0]_8 ),
        .I5(ad_mem[11]),
        .O(RAM_reg_1792_1919_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4112 RAM_reg_1792_1919_9_9
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [1]),
        .DPO(NLW_RAM_reg_1792_1919_9_9_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1792_1919_9_9_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1792_1919_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4113 RAM_reg_1920_2047_0_0
       (.A(ad_mem[8:2]),
        .D(Q[0]),
        .DPO(NLW_RAM_reg_1920_2047_0_0_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h4000000000000000)) 
    RAM_reg_1920_2047_0_0_i_1
       (.I0(ad_mem[13]),
        .I1(RAM_reg_0_127_0_0_i_14_n_0),
        .I2(ad_mem[10]),
        .I3(ad_mem[9]),
        .I4(ad_mem[12]),
        .I5(ad_mem[11]),
        .O(RAM_reg_1920_2047_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4114 RAM_reg_1920_2047_10_10
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [2]),
        .DPO(NLW_RAM_reg_1920_2047_10_10_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_10_10_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4115 RAM_reg_1920_2047_11_11
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [3]),
        .DPO(NLW_RAM_reg_1920_2047_11_11_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_11_11_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4116 RAM_reg_1920_2047_12_12
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [4]),
        .DPO(NLW_RAM_reg_1920_2047_12_12_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_12_12_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4117 RAM_reg_1920_2047_13_13
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [5]),
        .DPO(NLW_RAM_reg_1920_2047_13_13_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_13_13_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4118 RAM_reg_1920_2047_14_14
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [6]),
        .DPO(NLW_RAM_reg_1920_2047_14_14_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_14_14_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4119 RAM_reg_1920_2047_15_15
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [7]),
        .DPO(NLW_RAM_reg_1920_2047_15_15_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_15_15_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4120 RAM_reg_1920_2047_16_16
       (.A(ad_mem[8:2]),
        .D(wd_mem[16]),
        .DPO(NLW_RAM_reg_1920_2047_16_16_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_16_16_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_16_16_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    RAM_reg_1920_2047_16_16_i_1
       (.I0(ad_mem[10]),
        .I1(ad_mem[9]),
        .I2(ad_mem[12]),
        .I3(ad_mem[11]),
        .I4(\FSM_sequential_state_reg[0]_9 ),
        .I5(ad_mem[13]),
        .O(RAM_reg_1920_2047_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4121 RAM_reg_1920_2047_17_17
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(wd_mem[17]),
        .DPO(NLW_RAM_reg_1920_2047_17_17_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_17_17_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4122 RAM_reg_1920_2047_18_18
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(wd_mem[18]),
        .DPO(NLW_RAM_reg_1920_2047_18_18_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_18_18_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4123 RAM_reg_1920_2047_19_19
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(wd_mem[19]),
        .DPO(NLW_RAM_reg_1920_2047_19_19_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_19_19_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4124 RAM_reg_1920_2047_1_1
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(Q[1]),
        .DPO(NLW_RAM_reg_1920_2047_1_1_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_1_1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4125 RAM_reg_1920_2047_20_20
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(wd_mem[20]),
        .DPO(NLW_RAM_reg_1920_2047_20_20_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_20_20_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4126 RAM_reg_1920_2047_21_21
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(wd_mem[21]),
        .DPO(NLW_RAM_reg_1920_2047_21_21_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_21_21_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4127 RAM_reg_1920_2047_22_22
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(wd_mem[22]),
        .DPO(NLW_RAM_reg_1920_2047_22_22_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_22_22_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4128 RAM_reg_1920_2047_23_23
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(wd_mem[23]),
        .DPO(NLW_RAM_reg_1920_2047_23_23_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_23_23_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4129 RAM_reg_1920_2047_24_24
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(wd_mem[24]),
        .DPO(NLW_RAM_reg_1920_2047_24_24_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_24_24_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4130 RAM_reg_1920_2047_25_25
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(wd_mem[25]),
        .DPO(NLW_RAM_reg_1920_2047_25_25_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_25_25_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4131 RAM_reg_1920_2047_26_26
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(wd_mem[26]),
        .DPO(NLW_RAM_reg_1920_2047_26_26_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_26_26_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4132 RAM_reg_1920_2047_27_27
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(wd_mem[27]),
        .DPO(NLW_RAM_reg_1920_2047_27_27_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_27_27_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4133 RAM_reg_1920_2047_28_28
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(wd_mem[28]),
        .DPO(NLW_RAM_reg_1920_2047_28_28_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_28_28_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4134 RAM_reg_1920_2047_29_29
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(wd_mem[29]),
        .DPO(NLW_RAM_reg_1920_2047_29_29_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_29_29_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4135 RAM_reg_1920_2047_2_2
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(Q[2]),
        .DPO(NLW_RAM_reg_1920_2047_2_2_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_2_2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4136 RAM_reg_1920_2047_30_30
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(wd_mem[30]),
        .DPO(NLW_RAM_reg_1920_2047_30_30_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_30_30_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4137 RAM_reg_1920_2047_31_31
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(wd_mem[31]),
        .DPO(NLW_RAM_reg_1920_2047_31_31_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_31_31_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4138 RAM_reg_1920_2047_3_3
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(Q[3]),
        .DPO(NLW_RAM_reg_1920_2047_3_3_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_3_3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4139 RAM_reg_1920_2047_4_4
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(Q[4]),
        .DPO(NLW_RAM_reg_1920_2047_4_4_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_4_4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4140 RAM_reg_1920_2047_5_5
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(Q[5]),
        .DPO(NLW_RAM_reg_1920_2047_5_5_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_5_5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4141 RAM_reg_1920_2047_6_6
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(Q[6]),
        .DPO(NLW_RAM_reg_1920_2047_6_6_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_6_6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4142 RAM_reg_1920_2047_7_7
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(Q[7]),
        .DPO(NLW_RAM_reg_1920_2047_7_7_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_7_7_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4143 RAM_reg_1920_2047_8_8
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(\FSM_sequential_state_reg[1] [0]),
        .DPO(NLW_RAM_reg_1920_2047_8_8_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_8_8_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_8_8_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000080000000)) 
    RAM_reg_1920_2047_8_8_i_1
       (.I0(ad_mem[10]),
        .I1(ad_mem[9]),
        .I2(ad_mem[12]),
        .I3(ad_mem[11]),
        .I4(\FSM_sequential_state_reg[0]_8 ),
        .I5(ad_mem[13]),
        .O(RAM_reg_1920_2047_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4144 RAM_reg_1920_2047_9_9
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [1]),
        .DPO(NLW_RAM_reg_1920_2047_9_9_DPO_UNCONNECTED),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_1920_2047_9_9_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_1920_2047_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4145 RAM_reg_256_383_0_0
       (.A(ad_mem[8:2]),
        .D(Q[0]),
        .DPO(RAM_reg_256_383_0_0_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    RAM_reg_256_383_0_0_i_1
       (.I0(RAM_reg_0_127_0_0_i_14_n_0),
        .I1(ad_mem[10]),
        .I2(ad_mem[11]),
        .I3(ad_mem[12]),
        .I4(ad_mem[9]),
        .I5(ad_mem[13]),
        .O(RAM_reg_256_383_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4146 RAM_reg_256_383_10_10
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [2]),
        .DPO(RAM_reg_256_383_10_10_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_10_10_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4147 RAM_reg_256_383_11_11
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [3]),
        .DPO(RAM_reg_256_383_11_11_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_11_11_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4148 RAM_reg_256_383_12_12
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [4]),
        .DPO(RAM_reg_256_383_12_12_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_12_12_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4149 RAM_reg_256_383_13_13
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [5]),
        .DPO(RAM_reg_256_383_13_13_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_13_13_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4150 RAM_reg_256_383_14_14
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [6]),
        .DPO(RAM_reg_256_383_14_14_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_14_14_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4151 RAM_reg_256_383_15_15
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [7]),
        .DPO(RAM_reg_256_383_15_15_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_15_15_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4152 RAM_reg_256_383_16_16
       (.A(ad_mem[8:2]),
        .D(wd_mem[16]),
        .DPO(RAM_reg_256_383_16_16_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_16_16_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_16_16_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    RAM_reg_256_383_16_16_i_1
       (.I0(\FSM_sequential_state_reg[0]_9 ),
        .I1(ad_mem[10]),
        .I2(ad_mem[11]),
        .I3(ad_mem[12]),
        .I4(ad_mem[9]),
        .I5(ad_mem[13]),
        .O(RAM_reg_256_383_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4153 RAM_reg_256_383_17_17
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(wd_mem[17]),
        .DPO(RAM_reg_256_383_17_17_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_17_17_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4154 RAM_reg_256_383_18_18
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(wd_mem[18]),
        .DPO(RAM_reg_256_383_18_18_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_18_18_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4155 RAM_reg_256_383_19_19
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(wd_mem[19]),
        .DPO(RAM_reg_256_383_19_19_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_19_19_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4156 RAM_reg_256_383_1_1
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(Q[1]),
        .DPO(RAM_reg_256_383_1_1_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_1_1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4157 RAM_reg_256_383_20_20
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(wd_mem[20]),
        .DPO(RAM_reg_256_383_20_20_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_20_20_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4158 RAM_reg_256_383_21_21
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(wd_mem[21]),
        .DPO(RAM_reg_256_383_21_21_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_21_21_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4159 RAM_reg_256_383_22_22
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(wd_mem[22]),
        .DPO(RAM_reg_256_383_22_22_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_22_22_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4160 RAM_reg_256_383_23_23
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(wd_mem[23]),
        .DPO(RAM_reg_256_383_23_23_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_23_23_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4161 RAM_reg_256_383_24_24
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(wd_mem[24]),
        .DPO(RAM_reg_256_383_24_24_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_24_24_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4162 RAM_reg_256_383_25_25
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(wd_mem[25]),
        .DPO(RAM_reg_256_383_25_25_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_25_25_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4163 RAM_reg_256_383_26_26
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(wd_mem[26]),
        .DPO(RAM_reg_256_383_26_26_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_26_26_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4164 RAM_reg_256_383_27_27
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(wd_mem[27]),
        .DPO(RAM_reg_256_383_27_27_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_27_27_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4165 RAM_reg_256_383_28_28
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(wd_mem[28]),
        .DPO(RAM_reg_256_383_28_28_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_28_28_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4166 RAM_reg_256_383_29_29
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(wd_mem[29]),
        .DPO(RAM_reg_256_383_29_29_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_29_29_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4167 RAM_reg_256_383_2_2
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(Q[2]),
        .DPO(RAM_reg_256_383_2_2_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_2_2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4168 RAM_reg_256_383_30_30
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(wd_mem[30]),
        .DPO(RAM_reg_256_383_30_30_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_30_30_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4169 RAM_reg_256_383_31_31
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(wd_mem[31]),
        .DPO(RAM_reg_256_383_31_31_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_31_31_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4170 RAM_reg_256_383_3_3
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(Q[3]),
        .DPO(RAM_reg_256_383_3_3_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_3_3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4171 RAM_reg_256_383_4_4
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(Q[4]),
        .DPO(RAM_reg_256_383_4_4_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_4_4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4172 RAM_reg_256_383_5_5
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(Q[5]),
        .DPO(RAM_reg_256_383_5_5_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_5_5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4173 RAM_reg_256_383_6_6
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(Q[6]),
        .DPO(RAM_reg_256_383_6_6_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_6_6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4174 RAM_reg_256_383_7_7
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(Q[7]),
        .DPO(RAM_reg_256_383_7_7_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_7_7_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4175 RAM_reg_256_383_8_8
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(\FSM_sequential_state_reg[1] [0]),
        .DPO(RAM_reg_256_383_8_8_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_8_8_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_8_8_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    RAM_reg_256_383_8_8_i_1
       (.I0(\FSM_sequential_state_reg[0]_8 ),
        .I1(ad_mem[10]),
        .I2(ad_mem[11]),
        .I3(ad_mem[12]),
        .I4(ad_mem[9]),
        .I5(ad_mem[13]),
        .O(RAM_reg_256_383_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4176 RAM_reg_256_383_9_9
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [1]),
        .DPO(RAM_reg_256_383_9_9_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_256_383_9_9_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_256_383_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4177 RAM_reg_384_511_0_0
       (.A(ad_mem[8:2]),
        .D(Q[0]),
        .DPO(RAM_reg_384_511_0_0_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    RAM_reg_384_511_0_0_i_1
       (.I0(ad_mem[10]),
        .I1(ad_mem[9]),
        .I2(RAM_reg_0_127_0_0_i_14_n_0),
        .I3(ad_mem[13]),
        .I4(ad_mem[12]),
        .I5(ad_mem[11]),
        .O(RAM_reg_384_511_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4178 RAM_reg_384_511_10_10
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [2]),
        .DPO(RAM_reg_384_511_10_10_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_10_10_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4179 RAM_reg_384_511_11_11
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [3]),
        .DPO(RAM_reg_384_511_11_11_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_11_11_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4180 RAM_reg_384_511_12_12
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [4]),
        .DPO(RAM_reg_384_511_12_12_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_12_12_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4181 RAM_reg_384_511_13_13
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [5]),
        .DPO(RAM_reg_384_511_13_13_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_13_13_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4182 RAM_reg_384_511_14_14
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [6]),
        .DPO(RAM_reg_384_511_14_14_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_14_14_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4183 RAM_reg_384_511_15_15
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [7]),
        .DPO(RAM_reg_384_511_15_15_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_15_15_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4184 RAM_reg_384_511_16_16
       (.A(ad_mem[8:2]),
        .D(wd_mem[16]),
        .DPO(RAM_reg_384_511_16_16_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_16_16_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_16_16_i_1_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    RAM_reg_384_511_16_16_i_1
       (.I0(ad_mem[13]),
        .I1(ad_mem[12]),
        .I2(ad_mem[11]),
        .I3(\FSM_sequential_state_reg[0]_9 ),
        .I4(ad_mem[10]),
        .I5(ad_mem[9]),
        .O(RAM_reg_384_511_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4185 RAM_reg_384_511_17_17
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(wd_mem[17]),
        .DPO(RAM_reg_384_511_17_17_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_17_17_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4186 RAM_reg_384_511_18_18
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(wd_mem[18]),
        .DPO(RAM_reg_384_511_18_18_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_18_18_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4187 RAM_reg_384_511_19_19
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(wd_mem[19]),
        .DPO(RAM_reg_384_511_19_19_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_19_19_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4188 RAM_reg_384_511_1_1
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(Q[1]),
        .DPO(RAM_reg_384_511_1_1_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_1_1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4189 RAM_reg_384_511_20_20
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(wd_mem[20]),
        .DPO(RAM_reg_384_511_20_20_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_20_20_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4190 RAM_reg_384_511_21_21
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(wd_mem[21]),
        .DPO(RAM_reg_384_511_21_21_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_21_21_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4191 RAM_reg_384_511_22_22
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(wd_mem[22]),
        .DPO(RAM_reg_384_511_22_22_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_22_22_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4192 RAM_reg_384_511_23_23
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(wd_mem[23]),
        .DPO(RAM_reg_384_511_23_23_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_23_23_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4193 RAM_reg_384_511_24_24
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(wd_mem[24]),
        .DPO(RAM_reg_384_511_24_24_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_24_24_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4194 RAM_reg_384_511_25_25
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(wd_mem[25]),
        .DPO(RAM_reg_384_511_25_25_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_25_25_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4195 RAM_reg_384_511_26_26
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(wd_mem[26]),
        .DPO(RAM_reg_384_511_26_26_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_26_26_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4196 RAM_reg_384_511_27_27
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(wd_mem[27]),
        .DPO(RAM_reg_384_511_27_27_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_27_27_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4197 RAM_reg_384_511_28_28
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(wd_mem[28]),
        .DPO(RAM_reg_384_511_28_28_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_28_28_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4198 RAM_reg_384_511_29_29
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(wd_mem[29]),
        .DPO(RAM_reg_384_511_29_29_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_29_29_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4199 RAM_reg_384_511_2_2
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(Q[2]),
        .DPO(RAM_reg_384_511_2_2_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_2_2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4200 RAM_reg_384_511_30_30
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(wd_mem[30]),
        .DPO(RAM_reg_384_511_30_30_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_30_30_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4201 RAM_reg_384_511_31_31
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(wd_mem[31]),
        .DPO(RAM_reg_384_511_31_31_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_31_31_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4202 RAM_reg_384_511_3_3
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(Q[3]),
        .DPO(RAM_reg_384_511_3_3_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_3_3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4203 RAM_reg_384_511_4_4
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(Q[4]),
        .DPO(RAM_reg_384_511_4_4_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_4_4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4204 RAM_reg_384_511_5_5
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(Q[5]),
        .DPO(RAM_reg_384_511_5_5_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_5_5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4205 RAM_reg_384_511_6_6
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(Q[6]),
        .DPO(RAM_reg_384_511_6_6_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_6_6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4206 RAM_reg_384_511_7_7
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(Q[7]),
        .DPO(RAM_reg_384_511_7_7_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_7_7_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4207 RAM_reg_384_511_8_8
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(\FSM_sequential_state_reg[1] [0]),
        .DPO(RAM_reg_384_511_8_8_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_8_8_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_8_8_i_1_n_0));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    RAM_reg_384_511_8_8_i_1
       (.I0(ad_mem[13]),
        .I1(ad_mem[12]),
        .I2(ad_mem[11]),
        .I3(\FSM_sequential_state_reg[0]_8 ),
        .I4(ad_mem[10]),
        .I5(ad_mem[9]),
        .O(RAM_reg_384_511_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4208 RAM_reg_384_511_9_9
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [1]),
        .DPO(RAM_reg_384_511_9_9_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_384_511_9_9_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_384_511_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4209 RAM_reg_512_639_0_0
       (.A(ad_mem[8:2]),
        .D(Q[0]),
        .DPO(RAM_reg_512_639_0_0_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    RAM_reg_512_639_0_0_i_1
       (.I0(ad_mem[13]),
        .I1(ad_mem[12]),
        .I2(ad_mem[10]),
        .I3(ad_mem[9]),
        .I4(RAM_reg_0_127_0_0_i_14_n_0),
        .I5(ad_mem[11]),
        .O(RAM_reg_512_639_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4210 RAM_reg_512_639_10_10
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [2]),
        .DPO(RAM_reg_512_639_10_10_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_10_10_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4211 RAM_reg_512_639_11_11
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [3]),
        .DPO(RAM_reg_512_639_11_11_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_11_11_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4212 RAM_reg_512_639_12_12
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [4]),
        .DPO(RAM_reg_512_639_12_12_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_12_12_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4213 RAM_reg_512_639_13_13
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [5]),
        .DPO(RAM_reg_512_639_13_13_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_13_13_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4214 RAM_reg_512_639_14_14
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [6]),
        .DPO(RAM_reg_512_639_14_14_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_14_14_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4215 RAM_reg_512_639_15_15
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [7]),
        .DPO(RAM_reg_512_639_15_15_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_15_15_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4216 RAM_reg_512_639_16_16
       (.A(ad_mem[8:2]),
        .D(wd_mem[16]),
        .DPO(RAM_reg_512_639_16_16_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_16_16_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_16_16_i_1_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    RAM_reg_512_639_16_16_i_1
       (.I0(ad_mem[13]),
        .I1(ad_mem[12]),
        .I2(ad_mem[10]),
        .I3(ad_mem[9]),
        .I4(\FSM_sequential_state_reg[0]_9 ),
        .I5(ad_mem[11]),
        .O(RAM_reg_512_639_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4217 RAM_reg_512_639_17_17
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(wd_mem[17]),
        .DPO(RAM_reg_512_639_17_17_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_17_17_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4218 RAM_reg_512_639_18_18
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(wd_mem[18]),
        .DPO(RAM_reg_512_639_18_18_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_18_18_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4219 RAM_reg_512_639_19_19
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(wd_mem[19]),
        .DPO(RAM_reg_512_639_19_19_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_19_19_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4220 RAM_reg_512_639_1_1
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(Q[1]),
        .DPO(RAM_reg_512_639_1_1_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_1_1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4221 RAM_reg_512_639_20_20
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(wd_mem[20]),
        .DPO(RAM_reg_512_639_20_20_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_20_20_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4222 RAM_reg_512_639_21_21
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(wd_mem[21]),
        .DPO(RAM_reg_512_639_21_21_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_21_21_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4223 RAM_reg_512_639_22_22
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(wd_mem[22]),
        .DPO(RAM_reg_512_639_22_22_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_22_22_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4224 RAM_reg_512_639_23_23
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(wd_mem[23]),
        .DPO(RAM_reg_512_639_23_23_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_23_23_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4225 RAM_reg_512_639_24_24
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(wd_mem[24]),
        .DPO(RAM_reg_512_639_24_24_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_24_24_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4226 RAM_reg_512_639_25_25
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(wd_mem[25]),
        .DPO(RAM_reg_512_639_25_25_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_25_25_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4227 RAM_reg_512_639_26_26
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(wd_mem[26]),
        .DPO(RAM_reg_512_639_26_26_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_26_26_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4228 RAM_reg_512_639_27_27
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(wd_mem[27]),
        .DPO(RAM_reg_512_639_27_27_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_27_27_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4229 RAM_reg_512_639_28_28
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(wd_mem[28]),
        .DPO(RAM_reg_512_639_28_28_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_28_28_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4230 RAM_reg_512_639_29_29
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(wd_mem[29]),
        .DPO(RAM_reg_512_639_29_29_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_29_29_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4231 RAM_reg_512_639_2_2
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(Q[2]),
        .DPO(RAM_reg_512_639_2_2_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_2_2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4232 RAM_reg_512_639_30_30
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(wd_mem[30]),
        .DPO(RAM_reg_512_639_30_30_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_30_30_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4233 RAM_reg_512_639_31_31
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(wd_mem[31]),
        .DPO(RAM_reg_512_639_31_31_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_31_31_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4234 RAM_reg_512_639_3_3
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(Q[3]),
        .DPO(RAM_reg_512_639_3_3_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_3_3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4235 RAM_reg_512_639_4_4
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(Q[4]),
        .DPO(RAM_reg_512_639_4_4_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_4_4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4236 RAM_reg_512_639_5_5
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(Q[5]),
        .DPO(RAM_reg_512_639_5_5_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_5_5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4237 RAM_reg_512_639_6_6
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(Q[6]),
        .DPO(RAM_reg_512_639_6_6_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_6_6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4238 RAM_reg_512_639_7_7
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(Q[7]),
        .DPO(RAM_reg_512_639_7_7_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_7_7_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4239 RAM_reg_512_639_8_8
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(\FSM_sequential_state_reg[1] [0]),
        .DPO(RAM_reg_512_639_8_8_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_8_8_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_8_8_i_1_n_0));
  LUT6 #(
    .INIT(64'h0001000000000000)) 
    RAM_reg_512_639_8_8_i_1
       (.I0(ad_mem[13]),
        .I1(ad_mem[12]),
        .I2(ad_mem[10]),
        .I3(ad_mem[9]),
        .I4(\FSM_sequential_state_reg[0]_8 ),
        .I5(ad_mem[11]),
        .O(RAM_reg_512_639_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4240 RAM_reg_512_639_9_9
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [1]),
        .DPO(RAM_reg_512_639_9_9_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_512_639_9_9_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_512_639_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4241 RAM_reg_640_767_0_0
       (.A(ad_mem[8:2]),
        .D(Q[0]),
        .DPO(RAM_reg_640_767_0_0_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    RAM_reg_640_767_0_0_i_1
       (.I0(RAM_reg_0_127_0_0_i_14_n_0),
        .I1(ad_mem[10]),
        .I2(ad_mem[9]),
        .I3(ad_mem[12]),
        .I4(ad_mem[13]),
        .I5(ad_mem[11]),
        .O(RAM_reg_640_767_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4242 RAM_reg_640_767_10_10
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [2]),
        .DPO(RAM_reg_640_767_10_10_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_10_10_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4243 RAM_reg_640_767_11_11
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [3]),
        .DPO(RAM_reg_640_767_11_11_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_11_11_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4244 RAM_reg_640_767_12_12
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [4]),
        .DPO(RAM_reg_640_767_12_12_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_12_12_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4245 RAM_reg_640_767_13_13
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [5]),
        .DPO(RAM_reg_640_767_13_13_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_13_13_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4246 RAM_reg_640_767_14_14
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [6]),
        .DPO(RAM_reg_640_767_14_14_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_14_14_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4247 RAM_reg_640_767_15_15
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [7]),
        .DPO(RAM_reg_640_767_15_15_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_15_15_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4248 RAM_reg_640_767_16_16
       (.A(ad_mem[8:2]),
        .D(wd_mem[16]),
        .DPO(RAM_reg_640_767_16_16_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_16_16_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_16_16_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    RAM_reg_640_767_16_16_i_1
       (.I0(\FSM_sequential_state_reg[0]_9 ),
        .I1(ad_mem[10]),
        .I2(ad_mem[9]),
        .I3(ad_mem[12]),
        .I4(ad_mem[13]),
        .I5(ad_mem[11]),
        .O(RAM_reg_640_767_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4249 RAM_reg_640_767_17_17
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(wd_mem[17]),
        .DPO(RAM_reg_640_767_17_17_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_17_17_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4250 RAM_reg_640_767_18_18
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(wd_mem[18]),
        .DPO(RAM_reg_640_767_18_18_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_18_18_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4251 RAM_reg_640_767_19_19
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(wd_mem[19]),
        .DPO(RAM_reg_640_767_19_19_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_19_19_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4252 RAM_reg_640_767_1_1
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(Q[1]),
        .DPO(RAM_reg_640_767_1_1_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_1_1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4253 RAM_reg_640_767_20_20
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(wd_mem[20]),
        .DPO(RAM_reg_640_767_20_20_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_20_20_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4254 RAM_reg_640_767_21_21
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(wd_mem[21]),
        .DPO(RAM_reg_640_767_21_21_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_21_21_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4255 RAM_reg_640_767_22_22
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(wd_mem[22]),
        .DPO(RAM_reg_640_767_22_22_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_22_22_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4256 RAM_reg_640_767_23_23
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(wd_mem[23]),
        .DPO(RAM_reg_640_767_23_23_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_23_23_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4257 RAM_reg_640_767_24_24
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(wd_mem[24]),
        .DPO(RAM_reg_640_767_24_24_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_24_24_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4258 RAM_reg_640_767_25_25
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(wd_mem[25]),
        .DPO(RAM_reg_640_767_25_25_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_25_25_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4259 RAM_reg_640_767_26_26
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(wd_mem[26]),
        .DPO(RAM_reg_640_767_26_26_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_26_26_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4260 RAM_reg_640_767_27_27
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(wd_mem[27]),
        .DPO(RAM_reg_640_767_27_27_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_27_27_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4261 RAM_reg_640_767_28_28
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(wd_mem[28]),
        .DPO(RAM_reg_640_767_28_28_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_28_28_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4262 RAM_reg_640_767_29_29
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(wd_mem[29]),
        .DPO(RAM_reg_640_767_29_29_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_29_29_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4263 RAM_reg_640_767_2_2
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(Q[2]),
        .DPO(RAM_reg_640_767_2_2_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_2_2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4264 RAM_reg_640_767_30_30
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(wd_mem[30]),
        .DPO(RAM_reg_640_767_30_30_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_30_30_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4265 RAM_reg_640_767_31_31
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(wd_mem[31]),
        .DPO(RAM_reg_640_767_31_31_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_31_31_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4266 RAM_reg_640_767_3_3
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(Q[3]),
        .DPO(RAM_reg_640_767_3_3_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_3_3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4267 RAM_reg_640_767_4_4
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(Q[4]),
        .DPO(RAM_reg_640_767_4_4_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_4_4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4268 RAM_reg_640_767_5_5
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(Q[5]),
        .DPO(RAM_reg_640_767_5_5_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_5_5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4269 RAM_reg_640_767_6_6
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(Q[6]),
        .DPO(RAM_reg_640_767_6_6_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_6_6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4270 RAM_reg_640_767_7_7
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(Q[7]),
        .DPO(RAM_reg_640_767_7_7_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_7_7_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4271 RAM_reg_640_767_8_8
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(\FSM_sequential_state_reg[1] [0]),
        .DPO(RAM_reg_640_767_8_8_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_8_8_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_8_8_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    RAM_reg_640_767_8_8_i_1
       (.I0(\FSM_sequential_state_reg[0]_8 ),
        .I1(ad_mem[10]),
        .I2(ad_mem[9]),
        .I3(ad_mem[12]),
        .I4(ad_mem[13]),
        .I5(ad_mem[11]),
        .O(RAM_reg_640_767_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4272 RAM_reg_640_767_9_9
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [1]),
        .DPO(RAM_reg_640_767_9_9_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_640_767_9_9_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_640_767_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4273 RAM_reg_768_895_0_0
       (.A(ad_mem[8:2]),
        .D(Q[0]),
        .DPO(RAM_reg_768_895_0_0_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0004000000000000)) 
    RAM_reg_768_895_0_0_i_1
       (.I0(ad_mem[9]),
        .I1(RAM_reg_0_127_0_0_i_14_n_0),
        .I2(ad_mem[12]),
        .I3(ad_mem[13]),
        .I4(ad_mem[11]),
        .I5(ad_mem[10]),
        .O(RAM_reg_768_895_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4274 RAM_reg_768_895_10_10
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [2]),
        .DPO(RAM_reg_768_895_10_10_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_10_10_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4275 RAM_reg_768_895_11_11
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [3]),
        .DPO(RAM_reg_768_895_11_11_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_11_11_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4276 RAM_reg_768_895_12_12
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [4]),
        .DPO(RAM_reg_768_895_12_12_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_12_12_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4277 RAM_reg_768_895_13_13
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [5]),
        .DPO(RAM_reg_768_895_13_13_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_13_13_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4278 RAM_reg_768_895_14_14
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [6]),
        .DPO(RAM_reg_768_895_14_14_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_14_14_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4279 RAM_reg_768_895_15_15
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [7]),
        .DPO(RAM_reg_768_895_15_15_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_15_15_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4280 RAM_reg_768_895_16_16
       (.A(ad_mem[8:2]),
        .D(wd_mem[16]),
        .DPO(RAM_reg_768_895_16_16_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_16_16_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_16_16_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    RAM_reg_768_895_16_16_i_1
       (.I0(ad_mem[12]),
        .I1(ad_mem[13]),
        .I2(ad_mem[11]),
        .I3(ad_mem[10]),
        .I4(\FSM_sequential_state_reg[0]_9 ),
        .I5(ad_mem[9]),
        .O(RAM_reg_768_895_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4281 RAM_reg_768_895_17_17
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(wd_mem[17]),
        .DPO(RAM_reg_768_895_17_17_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_17_17_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4282 RAM_reg_768_895_18_18
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(wd_mem[18]),
        .DPO(RAM_reg_768_895_18_18_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_18_18_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4283 RAM_reg_768_895_19_19
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(wd_mem[19]),
        .DPO(RAM_reg_768_895_19_19_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_19_19_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4284 RAM_reg_768_895_1_1
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(Q[1]),
        .DPO(RAM_reg_768_895_1_1_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_1_1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4285 RAM_reg_768_895_20_20
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(wd_mem[20]),
        .DPO(RAM_reg_768_895_20_20_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_20_20_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4286 RAM_reg_768_895_21_21
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(wd_mem[21]),
        .DPO(RAM_reg_768_895_21_21_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_21_21_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4287 RAM_reg_768_895_22_22
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(wd_mem[22]),
        .DPO(RAM_reg_768_895_22_22_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_22_22_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4288 RAM_reg_768_895_23_23
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(wd_mem[23]),
        .DPO(RAM_reg_768_895_23_23_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_23_23_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4289 RAM_reg_768_895_24_24
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(wd_mem[24]),
        .DPO(RAM_reg_768_895_24_24_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_24_24_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4290 RAM_reg_768_895_25_25
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(wd_mem[25]),
        .DPO(RAM_reg_768_895_25_25_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_25_25_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4291 RAM_reg_768_895_26_26
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(wd_mem[26]),
        .DPO(RAM_reg_768_895_26_26_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_26_26_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4292 RAM_reg_768_895_27_27
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(wd_mem[27]),
        .DPO(RAM_reg_768_895_27_27_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_27_27_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4293 RAM_reg_768_895_28_28
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(wd_mem[28]),
        .DPO(RAM_reg_768_895_28_28_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_28_28_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4294 RAM_reg_768_895_29_29
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(wd_mem[29]),
        .DPO(RAM_reg_768_895_29_29_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_29_29_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4295 RAM_reg_768_895_2_2
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(Q[2]),
        .DPO(RAM_reg_768_895_2_2_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_2_2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4296 RAM_reg_768_895_30_30
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(wd_mem[30]),
        .DPO(RAM_reg_768_895_30_30_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_30_30_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4297 RAM_reg_768_895_31_31
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(wd_mem[31]),
        .DPO(RAM_reg_768_895_31_31_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_31_31_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4298 RAM_reg_768_895_3_3
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(Q[3]),
        .DPO(RAM_reg_768_895_3_3_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_3_3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4299 RAM_reg_768_895_4_4
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(Q[4]),
        .DPO(RAM_reg_768_895_4_4_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_4_4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4300 RAM_reg_768_895_5_5
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(Q[5]),
        .DPO(RAM_reg_768_895_5_5_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_5_5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4301 RAM_reg_768_895_6_6
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(Q[6]),
        .DPO(RAM_reg_768_895_6_6_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_6_6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4302 RAM_reg_768_895_7_7
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(Q[7]),
        .DPO(RAM_reg_768_895_7_7_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_7_7_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4303 RAM_reg_768_895_8_8
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(\FSM_sequential_state_reg[1] [0]),
        .DPO(RAM_reg_768_895_8_8_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_8_8_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_8_8_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000010000000)) 
    RAM_reg_768_895_8_8_i_1
       (.I0(ad_mem[12]),
        .I1(ad_mem[13]),
        .I2(ad_mem[11]),
        .I3(ad_mem[10]),
        .I4(\FSM_sequential_state_reg[0]_8 ),
        .I5(ad_mem[9]),
        .O(RAM_reg_768_895_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4304 RAM_reg_768_895_9_9
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [1]),
        .DPO(RAM_reg_768_895_9_9_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_768_895_9_9_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_768_895_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4305 RAM_reg_896_1023_0_0
       (.A(ad_mem[8:2]),
        .D(Q[0]),
        .DPO(RAM_reg_896_1023_0_0_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_0_0_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_0_0_i_1_n_0));
  LUT6 #(
    .INIT(64'h0000000000008000)) 
    RAM_reg_896_1023_0_0_i_1
       (.I0(ad_mem[10]),
        .I1(ad_mem[9]),
        .I2(RAM_reg_0_127_0_0_i_14_n_0),
        .I3(ad_mem[11]),
        .I4(ad_mem[13]),
        .I5(ad_mem[12]),
        .O(RAM_reg_896_1023_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4306 RAM_reg_896_1023_10_10
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [2]),
        .DPO(RAM_reg_896_1023_10_10_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_10_10_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4307 RAM_reg_896_1023_11_11
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [3]),
        .DPO(RAM_reg_896_1023_11_11_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_11_11_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4308 RAM_reg_896_1023_12_12
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [4]),
        .DPO(RAM_reg_896_1023_12_12_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_12_12_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4309 RAM_reg_896_1023_13_13
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [5]),
        .DPO(RAM_reg_896_1023_13_13_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_13_13_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4310 RAM_reg_896_1023_14_14
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [6]),
        .DPO(RAM_reg_896_1023_14_14_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_14_14_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4311 RAM_reg_896_1023_15_15
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [7]),
        .DPO(RAM_reg_896_1023_15_15_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_15_15_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4312 RAM_reg_896_1023_16_16
       (.A(ad_mem[8:2]),
        .D(wd_mem[16]),
        .DPO(RAM_reg_896_1023_16_16_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_16_16_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_16_16_i_1_n_0));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    RAM_reg_896_1023_16_16_i_1
       (.I0(ad_mem[11]),
        .I1(ad_mem[13]),
        .I2(ad_mem[12]),
        .I3(\FSM_sequential_state_reg[0]_9 ),
        .I4(ad_mem[10]),
        .I5(ad_mem[9]),
        .O(RAM_reg_896_1023_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4313 RAM_reg_896_1023_17_17
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(wd_mem[17]),
        .DPO(RAM_reg_896_1023_17_17_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_17_17_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4314 RAM_reg_896_1023_18_18
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(wd_mem[18]),
        .DPO(RAM_reg_896_1023_18_18_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_18_18_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4315 RAM_reg_896_1023_19_19
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(wd_mem[19]),
        .DPO(RAM_reg_896_1023_19_19_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_19_19_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4316 RAM_reg_896_1023_1_1
       (.A({ad_mem[8:6],RAM_reg_0_127_1_1_i_1_n_0,RAM_reg_0_127_1_1_i_2_n_0,RAM_reg_0_127_1_1_i_3_n_0,RAM_reg_0_127_1_1_i_4_n_0}),
        .D(Q[1]),
        .DPO(RAM_reg_896_1023_1_1_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_1_1_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4317 RAM_reg_896_1023_20_20
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(wd_mem[20]),
        .DPO(RAM_reg_896_1023_20_20_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_20_20_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4318 RAM_reg_896_1023_21_21
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(wd_mem[21]),
        .DPO(RAM_reg_896_1023_21_21_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_21_21_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4319 RAM_reg_896_1023_22_22
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(wd_mem[22]),
        .DPO(RAM_reg_896_1023_22_22_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_22_22_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4320 RAM_reg_896_1023_23_23
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(wd_mem[23]),
        .DPO(RAM_reg_896_1023_23_23_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_23_23_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4321 RAM_reg_896_1023_24_24
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(wd_mem[24]),
        .DPO(RAM_reg_896_1023_24_24_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_24_24_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4322 RAM_reg_896_1023_25_25
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(wd_mem[25]),
        .DPO(RAM_reg_896_1023_25_25_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_25_25_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4323 RAM_reg_896_1023_26_26
       (.A({ad_mem[8:6],RAM_reg_0_127_10_10_i_2_n_0,RAM_reg_0_127_10_10_i_3_n_0,RAM_reg_0_127_10_10_i_4_n_0,RAM_reg_0_127_10_10_i_5_n_0}),
        .D(wd_mem[26]),
        .DPO(RAM_reg_896_1023_26_26_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_26_26_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4324 RAM_reg_896_1023_27_27
       (.A({ad_mem[8:6],RAM_reg_0_127_11_11_i_2_n_0,RAM_reg_0_127_11_11_i_3_n_0,RAM_reg_0_127_11_11_i_4_n_0,RAM_reg_0_127_11_11_i_5_n_0}),
        .D(wd_mem[27]),
        .DPO(RAM_reg_896_1023_27_27_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_27_27_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4325 RAM_reg_896_1023_28_28
       (.A({ad_mem[8:6],RAM_reg_0_127_12_12_i_2_n_0,RAM_reg_0_127_12_12_i_3_n_0,RAM_reg_0_127_12_12_i_4_n_0,RAM_reg_0_127_12_12_i_5_n_0}),
        .D(wd_mem[28]),
        .DPO(RAM_reg_896_1023_28_28_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_28_28_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4326 RAM_reg_896_1023_29_29
       (.A({ad_mem[8:6],RAM_reg_0_127_13_13_i_2_n_0,RAM_reg_0_127_13_13_i_3_n_0,RAM_reg_0_127_13_13_i_4_n_0,RAM_reg_0_127_13_13_i_5_n_0}),
        .D(wd_mem[29]),
        .DPO(RAM_reg_896_1023_29_29_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_29_29_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4327 RAM_reg_896_1023_2_2
       (.A({ad_mem[8:6],RAM_reg_0_127_2_2_i_1_n_0,RAM_reg_0_127_2_2_i_2_n_0,RAM_reg_0_127_2_2_i_3_n_0,RAM_reg_0_127_2_2_i_4_n_0}),
        .D(Q[2]),
        .DPO(RAM_reg_896_1023_2_2_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_2_2_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4328 RAM_reg_896_1023_30_30
       (.A({ad_mem[8:6],RAM_reg_0_127_14_14_i_2_n_0,RAM_reg_0_127_14_14_i_3_n_0,RAM_reg_0_127_14_14_i_4_n_0,RAM_reg_0_127_14_14_i_5_n_0}),
        .D(wd_mem[30]),
        .DPO(RAM_reg_896_1023_30_30_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_30_30_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4329 RAM_reg_896_1023_31_31
       (.A({ad_mem[8:6],RAM_reg_0_127_15_15_i_2_n_0,RAM_reg_0_127_15_15_i_3_n_0,RAM_reg_0_127_15_15_i_4_n_0,RAM_reg_0_127_15_15_i_5_n_0}),
        .D(wd_mem[31]),
        .DPO(RAM_reg_896_1023_31_31_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_31_31_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_16_16_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4330 RAM_reg_896_1023_3_3
       (.A({ad_mem[8:6],RAM_reg_0_127_3_3_i_1_n_0,RAM_reg_0_127_3_3_i_2_n_0,RAM_reg_0_127_3_3_i_3_n_0,RAM_reg_0_127_3_3_i_4_n_0}),
        .D(Q[3]),
        .DPO(RAM_reg_896_1023_3_3_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_3_3_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4331 RAM_reg_896_1023_4_4
       (.A({ad_mem[8:6],RAM_reg_0_127_4_4_i_1_n_0,RAM_reg_0_127_4_4_i_2_n_0,RAM_reg_0_127_4_4_i_3_n_0,RAM_reg_0_127_4_4_i_4_n_0}),
        .D(Q[4]),
        .DPO(RAM_reg_896_1023_4_4_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_4_4_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4332 RAM_reg_896_1023_5_5
       (.A({ad_mem[8:6],RAM_reg_0_127_5_5_i_1_n_0,RAM_reg_0_127_5_5_i_2_n_0,RAM_reg_0_127_5_5_i_3_n_0,RAM_reg_0_127_5_5_i_4_n_0}),
        .D(Q[5]),
        .DPO(RAM_reg_896_1023_5_5_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_5_5_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4333 RAM_reg_896_1023_6_6
       (.A({ad_mem[8:6],RAM_reg_0_127_6_6_i_1_n_0,RAM_reg_0_127_6_6_i_2_n_0,RAM_reg_0_127_6_6_i_3_n_0,RAM_reg_0_127_6_6_i_4_n_0}),
        .D(Q[6]),
        .DPO(RAM_reg_896_1023_6_6_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_6_6_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4334 RAM_reg_896_1023_7_7
       (.A({ad_mem[8:6],RAM_reg_0_127_7_7_i_1_n_0,RAM_reg_0_127_7_7_i_2_n_0,RAM_reg_0_127_7_7_i_3_n_0,RAM_reg_0_127_7_7_i_4_n_0}),
        .D(Q[7]),
        .DPO(RAM_reg_896_1023_7_7_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_7_7_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_0_0_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4335 RAM_reg_896_1023_8_8
       (.A({ad_mem[8:6],RAM_reg_0_127_8_8_i_3_n_0,RAM_reg_0_127_8_8_i_4_n_0,RAM_reg_0_127_8_8_i_5_n_0,RAM_reg_0_127_8_8_i_6_n_0}),
        .D(\FSM_sequential_state_reg[1] [0]),
        .DPO(RAM_reg_896_1023_8_8_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_8_8_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_8_8_i_1_n_0));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    RAM_reg_896_1023_8_8_i_1
       (.I0(ad_mem[11]),
        .I1(ad_mem[13]),
        .I2(ad_mem[12]),
        .I3(\FSM_sequential_state_reg[0]_8 ),
        .I4(ad_mem[10]),
        .I5(ad_mem[9]),
        .O(RAM_reg_896_1023_8_8_i_1_n_0));
  (* INIT = "128'h00000000000000000000000000000000" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-5 {cell *THIS*}}" *) 
  RAM128X1D_HD4336 RAM_reg_896_1023_9_9
       (.A({ad_mem[8:6],RAM_reg_0_127_9_9_i_2_n_0,RAM_reg_0_127_9_9_i_3_n_0,RAM_reg_0_127_9_9_i_4_n_0,RAM_reg_0_127_9_9_i_5_n_0}),
        .D(\FSM_sequential_state_reg[1] [1]),
        .DPO(RAM_reg_896_1023_9_9_n_0),
        .DPRA(read_switches_IBUF[6:0]),
        .SPO(RAM_reg_896_1023_9_9_n_1),
        .WCLK(CLK),
        .WE(RAM_reg_896_1023_8_8_i_1_n_0));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \d_reg_reg[10]_i_1 
       (.I0(\register_array_reg[0][14] ),
        .I1(\FSM_sequential_state_reg[0]_1 ),
        .I2(\register_array_reg[0][15]_0 [26]),
        .I3(\register_array_reg[0][15]_0 [10]),
        .I4(\FSM_sequential_state_reg[0]_2 ),
        .O(D[2]));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \d_reg_reg[11]_i_1 
       (.I0(\register_array_reg[0][14] ),
        .I1(\FSM_sequential_state_reg[0]_1 ),
        .I2(\register_array_reg[0][15]_0 [27]),
        .I3(\register_array_reg[0][15]_0 [11]),
        .I4(\FSM_sequential_state_reg[0]_2 ),
        .O(D[3]));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \d_reg_reg[12]_i_1 
       (.I0(\register_array_reg[0][14] ),
        .I1(\FSM_sequential_state_reg[0]_1 ),
        .I2(\register_array_reg[0][15]_0 [28]),
        .I3(\register_array_reg[0][15]_0 [12]),
        .I4(\FSM_sequential_state_reg[0]_2 ),
        .O(D[4]));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \d_reg_reg[13]_i_1 
       (.I0(\register_array_reg[0][14] ),
        .I1(\FSM_sequential_state_reg[0]_1 ),
        .I2(\register_array_reg[0][15]_0 [29]),
        .I3(\register_array_reg[0][15]_0 [13]),
        .I4(\FSM_sequential_state_reg[0]_2 ),
        .O(D[5]));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \d_reg_reg[14]_i_1 
       (.I0(\register_array_reg[0][14] ),
        .I1(\FSM_sequential_state_reg[0]_1 ),
        .I2(\register_array_reg[0][15]_0 [30]),
        .I3(\register_array_reg[0][15]_0 [14]),
        .I4(\FSM_sequential_state_reg[0]_2 ),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAAEAAA)) 
    \d_reg_reg[15]_i_1 
       (.I0(\FSM_sequential_state_reg[1]_2 ),
        .I1(\FSM_sequential_state_reg[0]_3 ),
        .I2(\register_array_reg[0][15]_0 [31]),
        .I3(\FSM_sequential_state_reg[0]_4 ),
        .I4(\FSM_sequential_state_reg[1]_3 ),
        .I5(\d_reg_reg[15]_i_4_n_0 ),
        .O(D[7]));
  LUT5 #(
    .INIT(32'h45400000)) 
    \d_reg_reg[15]_i_4 
       (.I0(\FSM_sequential_state_reg[0]_3 ),
        .I1(\register_array_reg[0][15]_0 [23]),
        .I2(\FSM_sequential_state_reg[0]_4 ),
        .I3(\register_array_reg[0][15]_0 [7]),
        .I4(\FSM_sequential_state_reg[1]_4 ),
        .O(\d_reg_reg[15]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'hFFAABAAA)) 
    \d_reg_reg[23]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_5 ),
        .I1(\register_array_reg[0][23] ),
        .I2(\register_array_reg[0][15]_0 [15]),
        .I3(\FSM_sequential_state_reg[1]_4 ),
        .I4(\d_reg_reg[23]_i_3_n_0 ),
        .O(D[8]));
  LUT4 #(
    .INIT(16'h8830)) 
    \d_reg_reg[23]_i_3 
       (.I0(\register_array_reg[0][15]_0 [31]),
        .I1(\FSM_sequential_state_reg[0]_3 ),
        .I2(\register_array_reg[0][15]_0 [7]),
        .I3(\FSM_sequential_state_reg[0]_4 ),
        .O(\d_reg_reg[23]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFBFFFFFFFFFF)) 
    \d_reg_reg[30]_i_2 
       (.I0(\FSM_sequential_state_reg[0]_7 [1]),
        .I1(\FSM_sequential_state_reg[0]_7 [0]),
        .I2(out[1]),
        .I3(out[3]),
        .I4(out[2]),
        .I5(out[0]),
        .O(\register_array_reg[0][23] ));
  LUT6 #(
    .INIT(64'h88AAA8888888A888)) 
    \d_reg_reg[30]_i_3 
       (.I0(\FSM_sequential_state_reg[1]_4 ),
        .I1(\d_reg_reg[23]_i_3_n_0 ),
        .I2(\register_array_reg[0][15]_0 [23]),
        .I3(\FSM_sequential_state_reg[0]_4 ),
        .I4(\FSM_sequential_state_reg[0]_3 ),
        .I5(\register_array_reg[0][15]_0 [15]),
        .O(\register_array_reg[0][14] ));
  LUT6 #(
    .INIT(64'hFFFFAAAAAAAEAAAA)) 
    \d_reg_reg[31]_i_1 
       (.I0(\FSM_sequential_state_reg[0]_6 ),
        .I1(\register_array_reg[0][15]_0 [7]),
        .I2(\FSM_sequential_state_reg[0]_3 ),
        .I3(\FSM_sequential_state_reg[0]_4 ),
        .I4(\FSM_sequential_state_reg[1]_4 ),
        .I5(\d_reg_reg[31]_i_7_n_0 ),
        .O(D[9]));
  LUT4 #(
    .INIT(16'h3808)) 
    \d_reg_reg[31]_i_7 
       (.I0(\register_array_reg[0][15]_0 [23]),
        .I1(\FSM_sequential_state_reg[0]_4 ),
        .I2(\FSM_sequential_state_reg[0]_3 ),
        .I3(\register_array_reg[0][15]_0 [15]),
        .O(\d_reg_reg[31]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \d_reg_reg[8]_i_1 
       (.I0(\register_array_reg[0][14] ),
        .I1(\FSM_sequential_state_reg[0]_1 ),
        .I2(\register_array_reg[0][15]_0 [24]),
        .I3(\register_array_reg[0][15]_0 [8]),
        .I4(\FSM_sequential_state_reg[0]_2 ),
        .O(D[0]));
  LUT5 #(
    .INIT(32'hFFEAEAEA)) 
    \d_reg_reg[9]_i_1 
       (.I0(\register_array_reg[0][14] ),
        .I1(\FSM_sequential_state_reg[0]_1 ),
        .I2(\register_array_reg[0][15]_0 [25]),
        .I3(\register_array_reg[0][15]_0 [9]),
        .I4(\FSM_sequential_state_reg[0]_2 ),
        .O(D[1]));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[0] 
       (.CLR(1'b0),
        .D(douta0[0]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [0]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[0]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[0]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[0]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0_n_1),
        .O(douta0[0]));
  MUXF7 \douta_reg[0]_i_2 
       (.I0(\douta_reg[0]_i_4_n_0 ),
        .I1(\douta_reg[0]_i_5_n_0 ),
        .O(\douta_reg[0]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[0]_i_3 
       (.I0(\douta_reg[0]_i_6_n_0 ),
        .I1(\douta_reg[0]_i_7_n_0 ),
        .O(\douta_reg[0]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[0]_i_4 
       (.I0(RAM_reg_1408_1535_0_0_n_1),
        .I1(RAM_reg_1280_1407_0_0_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_0_0_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_0_0_n_1),
        .O(\douta_reg[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[0]_i_5 
       (.I0(RAM_reg_1920_2047_0_0_n_1),
        .I1(RAM_reg_1792_1919_0_0_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_0_0_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_0_0_n_1),
        .O(\douta_reg[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[0]_i_6 
       (.I0(RAM_reg_384_511_0_0_n_1),
        .I1(RAM_reg_256_383_0_0_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_0_0_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_0_0_n_1),
        .O(\douta_reg[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[0]_i_7 
       (.I0(RAM_reg_896_1023_0_0_n_1),
        .I1(RAM_reg_768_895_0_0_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_0_0_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_0_0_n_1),
        .O(\douta_reg[0]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[10] 
       (.CLR(1'b0),
        .D(douta0[10]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [10]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[10]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[10]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[10]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__9_n_1),
        .O(douta0[10]));
  MUXF7 \douta_reg[10]_i_2 
       (.I0(\douta_reg[10]_i_4_n_0 ),
        .I1(\douta_reg[10]_i_5_n_0 ),
        .O(\douta_reg[10]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[10]_i_3 
       (.I0(\douta_reg[10]_i_6_n_0 ),
        .I1(\douta_reg[10]_i_7_n_0 ),
        .O(\douta_reg[10]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[10]_i_4 
       (.I0(RAM_reg_1408_1535_10_10_n_1),
        .I1(RAM_reg_1280_1407_10_10_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_10_10_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_10_10_n_1),
        .O(\douta_reg[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[10]_i_5 
       (.I0(RAM_reg_1920_2047_10_10_n_1),
        .I1(RAM_reg_1792_1919_10_10_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_10_10_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_10_10_n_1),
        .O(\douta_reg[10]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[10]_i_6 
       (.I0(RAM_reg_384_511_10_10_n_1),
        .I1(RAM_reg_256_383_10_10_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_10_10_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_10_10_n_1),
        .O(\douta_reg[10]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[10]_i_7 
       (.I0(RAM_reg_896_1023_10_10_n_1),
        .I1(RAM_reg_768_895_10_10_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_10_10_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_10_10_n_1),
        .O(\douta_reg[10]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[11] 
       (.CLR(1'b0),
        .D(douta0[11]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [11]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[11]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[11]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[11]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__10_n_1),
        .O(douta0[11]));
  MUXF7 \douta_reg[11]_i_2 
       (.I0(\douta_reg[11]_i_4_n_0 ),
        .I1(\douta_reg[11]_i_5_n_0 ),
        .O(\douta_reg[11]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[11]_i_3 
       (.I0(\douta_reg[11]_i_6_n_0 ),
        .I1(\douta_reg[11]_i_7_n_0 ),
        .O(\douta_reg[11]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[11]_i_4 
       (.I0(RAM_reg_1408_1535_11_11_n_1),
        .I1(RAM_reg_1280_1407_11_11_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_11_11_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_11_11_n_1),
        .O(\douta_reg[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[11]_i_5 
       (.I0(RAM_reg_1920_2047_11_11_n_1),
        .I1(RAM_reg_1792_1919_11_11_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_11_11_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_11_11_n_1),
        .O(\douta_reg[11]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[11]_i_6 
       (.I0(RAM_reg_384_511_11_11_n_1),
        .I1(RAM_reg_256_383_11_11_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_11_11_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_11_11_n_1),
        .O(\douta_reg[11]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[11]_i_7 
       (.I0(RAM_reg_896_1023_11_11_n_1),
        .I1(RAM_reg_768_895_11_11_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_11_11_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_11_11_n_1),
        .O(\douta_reg[11]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[12] 
       (.CLR(1'b0),
        .D(douta0[12]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [12]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[12]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[12]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[12]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__11_n_1),
        .O(douta0[12]));
  MUXF7 \douta_reg[12]_i_2 
       (.I0(\douta_reg[12]_i_4_n_0 ),
        .I1(\douta_reg[12]_i_5_n_0 ),
        .O(\douta_reg[12]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[12]_i_3 
       (.I0(\douta_reg[12]_i_6_n_0 ),
        .I1(\douta_reg[12]_i_7_n_0 ),
        .O(\douta_reg[12]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[12]_i_4 
       (.I0(RAM_reg_1408_1535_12_12_n_1),
        .I1(RAM_reg_1280_1407_12_12_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_12_12_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_12_12_n_1),
        .O(\douta_reg[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[12]_i_5 
       (.I0(RAM_reg_1920_2047_12_12_n_1),
        .I1(RAM_reg_1792_1919_12_12_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_12_12_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_12_12_n_1),
        .O(\douta_reg[12]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[12]_i_6 
       (.I0(RAM_reg_384_511_12_12_n_1),
        .I1(RAM_reg_256_383_12_12_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_12_12_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_12_12_n_1),
        .O(\douta_reg[12]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[12]_i_7 
       (.I0(RAM_reg_896_1023_12_12_n_1),
        .I1(RAM_reg_768_895_12_12_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_12_12_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_12_12_n_1),
        .O(\douta_reg[12]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[13] 
       (.CLR(1'b0),
        .D(douta0[13]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [13]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[13]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[13]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[13]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__12_n_1),
        .O(douta0[13]));
  MUXF7 \douta_reg[13]_i_2 
       (.I0(\douta_reg[13]_i_4_n_0 ),
        .I1(\douta_reg[13]_i_5_n_0 ),
        .O(\douta_reg[13]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[13]_i_3 
       (.I0(\douta_reg[13]_i_6_n_0 ),
        .I1(\douta_reg[13]_i_7_n_0 ),
        .O(\douta_reg[13]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[13]_i_4 
       (.I0(RAM_reg_1408_1535_13_13_n_1),
        .I1(RAM_reg_1280_1407_13_13_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_13_13_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_13_13_n_1),
        .O(\douta_reg[13]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[13]_i_5 
       (.I0(RAM_reg_1920_2047_13_13_n_1),
        .I1(RAM_reg_1792_1919_13_13_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_13_13_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_13_13_n_1),
        .O(\douta_reg[13]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[13]_i_6 
       (.I0(RAM_reg_384_511_13_13_n_1),
        .I1(RAM_reg_256_383_13_13_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_13_13_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_13_13_n_1),
        .O(\douta_reg[13]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[13]_i_7 
       (.I0(RAM_reg_896_1023_13_13_n_1),
        .I1(RAM_reg_768_895_13_13_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_13_13_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_13_13_n_1),
        .O(\douta_reg[13]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[14] 
       (.CLR(1'b0),
        .D(douta0[14]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [14]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[14]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[14]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[14]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__13_n_1),
        .O(douta0[14]));
  MUXF7 \douta_reg[14]_i_2 
       (.I0(\douta_reg[14]_i_4_n_0 ),
        .I1(\douta_reg[14]_i_5_n_0 ),
        .O(\douta_reg[14]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[14]_i_3 
       (.I0(\douta_reg[14]_i_6_n_0 ),
        .I1(\douta_reg[14]_i_7_n_0 ),
        .O(\douta_reg[14]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[14]_i_4 
       (.I0(RAM_reg_1408_1535_14_14_n_1),
        .I1(RAM_reg_1280_1407_14_14_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_14_14_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_14_14_n_1),
        .O(\douta_reg[14]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[14]_i_5 
       (.I0(RAM_reg_1920_2047_14_14_n_1),
        .I1(RAM_reg_1792_1919_14_14_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_14_14_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_14_14_n_1),
        .O(\douta_reg[14]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[14]_i_6 
       (.I0(RAM_reg_384_511_14_14_n_1),
        .I1(RAM_reg_256_383_14_14_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_14_14_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_14_14_n_1),
        .O(\douta_reg[14]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[14]_i_7 
       (.I0(RAM_reg_896_1023_14_14_n_1),
        .I1(RAM_reg_768_895_14_14_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_14_14_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_14_14_n_1),
        .O(\douta_reg[14]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[15] 
       (.CLR(1'b0),
        .D(douta0[15]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [15]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[15]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[15]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[15]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__14_n_1),
        .O(douta0[15]));
  MUXF7 \douta_reg[15]_i_2 
       (.I0(\douta_reg[15]_i_4_n_0 ),
        .I1(\douta_reg[15]_i_5_n_0 ),
        .O(\douta_reg[15]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[15]_i_3 
       (.I0(\douta_reg[15]_i_6_n_0 ),
        .I1(\douta_reg[15]_i_7_n_0 ),
        .O(\douta_reg[15]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[15]_i_4 
       (.I0(RAM_reg_1408_1535_15_15_n_1),
        .I1(RAM_reg_1280_1407_15_15_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_15_15_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_15_15_n_1),
        .O(\douta_reg[15]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[15]_i_5 
       (.I0(RAM_reg_1920_2047_15_15_n_1),
        .I1(RAM_reg_1792_1919_15_15_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_15_15_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_15_15_n_1),
        .O(\douta_reg[15]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[15]_i_6 
       (.I0(RAM_reg_384_511_15_15_n_1),
        .I1(RAM_reg_256_383_15_15_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_15_15_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_15_15_n_1),
        .O(\douta_reg[15]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[15]_i_7 
       (.I0(RAM_reg_896_1023_15_15_n_1),
        .I1(RAM_reg_768_895_15_15_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_15_15_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_15_15_n_1),
        .O(\douta_reg[15]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[16] 
       (.CLR(1'b0),
        .D(douta0[16]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [16]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[16]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[16]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[16]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__15_n_1),
        .O(douta0[16]));
  MUXF7 \douta_reg[16]_i_2 
       (.I0(\douta_reg[16]_i_4_n_0 ),
        .I1(\douta_reg[16]_i_5_n_0 ),
        .O(\douta_reg[16]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[16]_i_3 
       (.I0(\douta_reg[16]_i_6_n_0 ),
        .I1(\douta_reg[16]_i_7_n_0 ),
        .O(\douta_reg[16]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[16]_i_4 
       (.I0(RAM_reg_1408_1535_16_16_n_1),
        .I1(RAM_reg_1280_1407_16_16_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_16_16_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_16_16_n_1),
        .O(\douta_reg[16]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[16]_i_5 
       (.I0(RAM_reg_1920_2047_16_16_n_1),
        .I1(RAM_reg_1792_1919_16_16_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_16_16_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_16_16_n_1),
        .O(\douta_reg[16]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[16]_i_6 
       (.I0(RAM_reg_384_511_16_16_n_1),
        .I1(RAM_reg_256_383_16_16_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_16_16_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_16_16_n_1),
        .O(\douta_reg[16]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[16]_i_7 
       (.I0(RAM_reg_896_1023_16_16_n_1),
        .I1(RAM_reg_768_895_16_16_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_16_16_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_16_16_n_1),
        .O(\douta_reg[16]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[17] 
       (.CLR(1'b0),
        .D(douta0[17]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [17]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[17]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[17]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[17]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__16_n_1),
        .O(douta0[17]));
  MUXF7 \douta_reg[17]_i_2 
       (.I0(\douta_reg[17]_i_4_n_0 ),
        .I1(\douta_reg[17]_i_5_n_0 ),
        .O(\douta_reg[17]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[17]_i_3 
       (.I0(\douta_reg[17]_i_6_n_0 ),
        .I1(\douta_reg[17]_i_7_n_0 ),
        .O(\douta_reg[17]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[17]_i_4 
       (.I0(RAM_reg_1408_1535_17_17_n_1),
        .I1(RAM_reg_1280_1407_17_17_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_17_17_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_17_17_n_1),
        .O(\douta_reg[17]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[17]_i_5 
       (.I0(RAM_reg_1920_2047_17_17_n_1),
        .I1(RAM_reg_1792_1919_17_17_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_17_17_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_17_17_n_1),
        .O(\douta_reg[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[17]_i_6 
       (.I0(RAM_reg_384_511_17_17_n_1),
        .I1(RAM_reg_256_383_17_17_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_17_17_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_17_17_n_1),
        .O(\douta_reg[17]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[17]_i_7 
       (.I0(RAM_reg_896_1023_17_17_n_1),
        .I1(RAM_reg_768_895_17_17_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_17_17_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_17_17_n_1),
        .O(\douta_reg[17]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[18] 
       (.CLR(1'b0),
        .D(douta0[18]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [18]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[18]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[18]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[18]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__17_n_1),
        .O(douta0[18]));
  MUXF7 \douta_reg[18]_i_2 
       (.I0(\douta_reg[18]_i_4_n_0 ),
        .I1(\douta_reg[18]_i_5_n_0 ),
        .O(\douta_reg[18]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[18]_i_3 
       (.I0(\douta_reg[18]_i_6_n_0 ),
        .I1(\douta_reg[18]_i_7_n_0 ),
        .O(\douta_reg[18]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[18]_i_4 
       (.I0(RAM_reg_1408_1535_18_18_n_1),
        .I1(RAM_reg_1280_1407_18_18_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_18_18_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_18_18_n_1),
        .O(\douta_reg[18]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[18]_i_5 
       (.I0(RAM_reg_1920_2047_18_18_n_1),
        .I1(RAM_reg_1792_1919_18_18_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_18_18_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_18_18_n_1),
        .O(\douta_reg[18]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[18]_i_6 
       (.I0(RAM_reg_384_511_18_18_n_1),
        .I1(RAM_reg_256_383_18_18_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_18_18_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_18_18_n_1),
        .O(\douta_reg[18]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[18]_i_7 
       (.I0(RAM_reg_896_1023_18_18_n_1),
        .I1(RAM_reg_768_895_18_18_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_18_18_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_18_18_n_1),
        .O(\douta_reg[18]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[19] 
       (.CLR(1'b0),
        .D(douta0[19]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [19]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[19]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[19]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[19]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__18_n_1),
        .O(douta0[19]));
  MUXF7 \douta_reg[19]_i_2 
       (.I0(\douta_reg[19]_i_4_n_0 ),
        .I1(\douta_reg[19]_i_5_n_0 ),
        .O(\douta_reg[19]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[19]_i_3 
       (.I0(\douta_reg[19]_i_6_n_0 ),
        .I1(\douta_reg[19]_i_7_n_0 ),
        .O(\douta_reg[19]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[19]_i_4 
       (.I0(RAM_reg_1408_1535_19_19_n_1),
        .I1(RAM_reg_1280_1407_19_19_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_19_19_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_19_19_n_1),
        .O(\douta_reg[19]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[19]_i_5 
       (.I0(RAM_reg_1920_2047_19_19_n_1),
        .I1(RAM_reg_1792_1919_19_19_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_19_19_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_19_19_n_1),
        .O(\douta_reg[19]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[19]_i_6 
       (.I0(RAM_reg_384_511_19_19_n_1),
        .I1(RAM_reg_256_383_19_19_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_19_19_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_19_19_n_1),
        .O(\douta_reg[19]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[19]_i_7 
       (.I0(RAM_reg_896_1023_19_19_n_1),
        .I1(RAM_reg_768_895_19_19_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_19_19_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_19_19_n_1),
        .O(\douta_reg[19]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[1] 
       (.CLR(1'b0),
        .D(douta0[1]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [1]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[1]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[1]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[1]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__0_n_1),
        .O(douta0[1]));
  MUXF7 \douta_reg[1]_i_2 
       (.I0(\douta_reg[1]_i_4_n_0 ),
        .I1(\douta_reg[1]_i_5_n_0 ),
        .O(\douta_reg[1]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[1]_i_3 
       (.I0(\douta_reg[1]_i_6_n_0 ),
        .I1(\douta_reg[1]_i_7_n_0 ),
        .O(\douta_reg[1]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[1]_i_4 
       (.I0(RAM_reg_1408_1535_1_1_n_1),
        .I1(RAM_reg_1280_1407_1_1_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_1_1_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_1_1_n_1),
        .O(\douta_reg[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[1]_i_5 
       (.I0(RAM_reg_1920_2047_1_1_n_1),
        .I1(RAM_reg_1792_1919_1_1_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_1_1_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_1_1_n_1),
        .O(\douta_reg[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[1]_i_6 
       (.I0(RAM_reg_384_511_1_1_n_1),
        .I1(RAM_reg_256_383_1_1_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_1_1_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_1_1_n_1),
        .O(\douta_reg[1]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[1]_i_7 
       (.I0(RAM_reg_896_1023_1_1_n_1),
        .I1(RAM_reg_768_895_1_1_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_1_1_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_1_1_n_1),
        .O(\douta_reg[1]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[20] 
       (.CLR(1'b0),
        .D(douta0[20]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [20]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[20]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[20]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[20]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__19_n_1),
        .O(douta0[20]));
  MUXF7 \douta_reg[20]_i_2 
       (.I0(\douta_reg[20]_i_4_n_0 ),
        .I1(\douta_reg[20]_i_5_n_0 ),
        .O(\douta_reg[20]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[20]_i_3 
       (.I0(\douta_reg[20]_i_6_n_0 ),
        .I1(\douta_reg[20]_i_7_n_0 ),
        .O(\douta_reg[20]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[20]_i_4 
       (.I0(RAM_reg_1408_1535_20_20_n_1),
        .I1(RAM_reg_1280_1407_20_20_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_20_20_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_20_20_n_1),
        .O(\douta_reg[20]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[20]_i_5 
       (.I0(RAM_reg_1920_2047_20_20_n_1),
        .I1(RAM_reg_1792_1919_20_20_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_20_20_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_20_20_n_1),
        .O(\douta_reg[20]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[20]_i_6 
       (.I0(RAM_reg_384_511_20_20_n_1),
        .I1(RAM_reg_256_383_20_20_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_20_20_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_20_20_n_1),
        .O(\douta_reg[20]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[20]_i_7 
       (.I0(RAM_reg_896_1023_20_20_n_1),
        .I1(RAM_reg_768_895_20_20_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_20_20_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_20_20_n_1),
        .O(\douta_reg[20]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[21] 
       (.CLR(1'b0),
        .D(douta0[21]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [21]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[21]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[21]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[21]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__20_n_1),
        .O(douta0[21]));
  MUXF7 \douta_reg[21]_i_2 
       (.I0(\douta_reg[21]_i_4_n_0 ),
        .I1(\douta_reg[21]_i_5_n_0 ),
        .O(\douta_reg[21]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[21]_i_3 
       (.I0(\douta_reg[21]_i_6_n_0 ),
        .I1(\douta_reg[21]_i_7_n_0 ),
        .O(\douta_reg[21]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[21]_i_4 
       (.I0(RAM_reg_1408_1535_21_21_n_1),
        .I1(RAM_reg_1280_1407_21_21_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_21_21_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_21_21_n_1),
        .O(\douta_reg[21]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[21]_i_5 
       (.I0(RAM_reg_1920_2047_21_21_n_1),
        .I1(RAM_reg_1792_1919_21_21_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_21_21_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_21_21_n_1),
        .O(\douta_reg[21]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[21]_i_6 
       (.I0(RAM_reg_384_511_21_21_n_1),
        .I1(RAM_reg_256_383_21_21_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_21_21_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_21_21_n_1),
        .O(\douta_reg[21]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[21]_i_7 
       (.I0(RAM_reg_896_1023_21_21_n_1),
        .I1(RAM_reg_768_895_21_21_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_21_21_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_21_21_n_1),
        .O(\douta_reg[21]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[22] 
       (.CLR(1'b0),
        .D(douta0[22]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [22]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[22]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[22]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[22]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__21_n_1),
        .O(douta0[22]));
  MUXF7 \douta_reg[22]_i_2 
       (.I0(\douta_reg[22]_i_4_n_0 ),
        .I1(\douta_reg[22]_i_5_n_0 ),
        .O(\douta_reg[22]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[22]_i_3 
       (.I0(\douta_reg[22]_i_6_n_0 ),
        .I1(\douta_reg[22]_i_7_n_0 ),
        .O(\douta_reg[22]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[22]_i_4 
       (.I0(RAM_reg_1408_1535_22_22_n_1),
        .I1(RAM_reg_1280_1407_22_22_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_22_22_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_22_22_n_1),
        .O(\douta_reg[22]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[22]_i_5 
       (.I0(RAM_reg_1920_2047_22_22_n_1),
        .I1(RAM_reg_1792_1919_22_22_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_22_22_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_22_22_n_1),
        .O(\douta_reg[22]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[22]_i_6 
       (.I0(RAM_reg_384_511_22_22_n_1),
        .I1(RAM_reg_256_383_22_22_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_22_22_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_22_22_n_1),
        .O(\douta_reg[22]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[22]_i_7 
       (.I0(RAM_reg_896_1023_22_22_n_1),
        .I1(RAM_reg_768_895_22_22_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_22_22_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_22_22_n_1),
        .O(\douta_reg[22]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[23] 
       (.CLR(1'b0),
        .D(douta0[23]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [23]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[23]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[23]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[23]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__22_n_1),
        .O(douta0[23]));
  MUXF7 \douta_reg[23]_i_2 
       (.I0(\douta_reg[23]_i_4_n_0 ),
        .I1(\douta_reg[23]_i_5_n_0 ),
        .O(\douta_reg[23]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[23]_i_3 
       (.I0(\douta_reg[23]_i_6_n_0 ),
        .I1(\douta_reg[23]_i_7_n_0 ),
        .O(\douta_reg[23]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[23]_i_4 
       (.I0(RAM_reg_1408_1535_23_23_n_1),
        .I1(RAM_reg_1280_1407_23_23_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_23_23_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_23_23_n_1),
        .O(\douta_reg[23]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[23]_i_5 
       (.I0(RAM_reg_1920_2047_23_23_n_1),
        .I1(RAM_reg_1792_1919_23_23_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_23_23_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_23_23_n_1),
        .O(\douta_reg[23]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[23]_i_6 
       (.I0(RAM_reg_384_511_23_23_n_1),
        .I1(RAM_reg_256_383_23_23_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_23_23_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_23_23_n_1),
        .O(\douta_reg[23]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[23]_i_7 
       (.I0(RAM_reg_896_1023_23_23_n_1),
        .I1(RAM_reg_768_895_23_23_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_23_23_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_23_23_n_1),
        .O(\douta_reg[23]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[24] 
       (.CLR(1'b0),
        .D(douta0[24]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [24]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[24]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[24]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[24]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__23_n_1),
        .O(douta0[24]));
  MUXF7 \douta_reg[24]_i_2 
       (.I0(\douta_reg[24]_i_4_n_0 ),
        .I1(\douta_reg[24]_i_5_n_0 ),
        .O(\douta_reg[24]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[24]_i_3 
       (.I0(\douta_reg[24]_i_6_n_0 ),
        .I1(\douta_reg[24]_i_7_n_0 ),
        .O(\douta_reg[24]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[24]_i_4 
       (.I0(RAM_reg_1408_1535_24_24_n_1),
        .I1(RAM_reg_1280_1407_24_24_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_24_24_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_24_24_n_1),
        .O(\douta_reg[24]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[24]_i_5 
       (.I0(RAM_reg_1920_2047_24_24_n_1),
        .I1(RAM_reg_1792_1919_24_24_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_24_24_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_24_24_n_1),
        .O(\douta_reg[24]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[24]_i_6 
       (.I0(RAM_reg_384_511_24_24_n_1),
        .I1(RAM_reg_256_383_24_24_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_24_24_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_24_24_n_1),
        .O(\douta_reg[24]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[24]_i_7 
       (.I0(RAM_reg_896_1023_24_24_n_1),
        .I1(RAM_reg_768_895_24_24_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_24_24_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_24_24_n_1),
        .O(\douta_reg[24]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[25] 
       (.CLR(1'b0),
        .D(douta0[25]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [25]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[25]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[25]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[25]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__24_n_1),
        .O(douta0[25]));
  MUXF7 \douta_reg[25]_i_2 
       (.I0(\douta_reg[25]_i_4_n_0 ),
        .I1(\douta_reg[25]_i_5_n_0 ),
        .O(\douta_reg[25]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[25]_i_3 
       (.I0(\douta_reg[25]_i_6_n_0 ),
        .I1(\douta_reg[25]_i_7_n_0 ),
        .O(\douta_reg[25]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[25]_i_4 
       (.I0(RAM_reg_1408_1535_25_25_n_1),
        .I1(RAM_reg_1280_1407_25_25_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_25_25_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_25_25_n_1),
        .O(\douta_reg[25]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[25]_i_5 
       (.I0(RAM_reg_1920_2047_25_25_n_1),
        .I1(RAM_reg_1792_1919_25_25_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_25_25_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_25_25_n_1),
        .O(\douta_reg[25]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[25]_i_6 
       (.I0(RAM_reg_384_511_25_25_n_1),
        .I1(RAM_reg_256_383_25_25_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_25_25_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_25_25_n_1),
        .O(\douta_reg[25]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[25]_i_7 
       (.I0(RAM_reg_896_1023_25_25_n_1),
        .I1(RAM_reg_768_895_25_25_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_25_25_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_25_25_n_1),
        .O(\douta_reg[25]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[26] 
       (.CLR(1'b0),
        .D(douta0[26]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [26]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[26]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[26]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[26]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__25_n_1),
        .O(douta0[26]));
  MUXF7 \douta_reg[26]_i_2 
       (.I0(\douta_reg[26]_i_4_n_0 ),
        .I1(\douta_reg[26]_i_5_n_0 ),
        .O(\douta_reg[26]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[26]_i_3 
       (.I0(\douta_reg[26]_i_6_n_0 ),
        .I1(\douta_reg[26]_i_7_n_0 ),
        .O(\douta_reg[26]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[26]_i_4 
       (.I0(RAM_reg_1408_1535_26_26_n_1),
        .I1(RAM_reg_1280_1407_26_26_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_26_26_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_26_26_n_1),
        .O(\douta_reg[26]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[26]_i_5 
       (.I0(RAM_reg_1920_2047_26_26_n_1),
        .I1(RAM_reg_1792_1919_26_26_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_26_26_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_26_26_n_1),
        .O(\douta_reg[26]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[26]_i_6 
       (.I0(RAM_reg_384_511_26_26_n_1),
        .I1(RAM_reg_256_383_26_26_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_26_26_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_26_26_n_1),
        .O(\douta_reg[26]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[26]_i_7 
       (.I0(RAM_reg_896_1023_26_26_n_1),
        .I1(RAM_reg_768_895_26_26_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_26_26_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_26_26_n_1),
        .O(\douta_reg[26]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[27] 
       (.CLR(1'b0),
        .D(douta0[27]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [27]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[27]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[27]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[27]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__26_n_1),
        .O(douta0[27]));
  MUXF7 \douta_reg[27]_i_2 
       (.I0(\douta_reg[27]_i_4_n_0 ),
        .I1(\douta_reg[27]_i_5_n_0 ),
        .O(\douta_reg[27]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[27]_i_3 
       (.I0(\douta_reg[27]_i_6_n_0 ),
        .I1(\douta_reg[27]_i_7_n_0 ),
        .O(\douta_reg[27]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[27]_i_4 
       (.I0(RAM_reg_1408_1535_27_27_n_1),
        .I1(RAM_reg_1280_1407_27_27_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_27_27_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_27_27_n_1),
        .O(\douta_reg[27]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[27]_i_5 
       (.I0(RAM_reg_1920_2047_27_27_n_1),
        .I1(RAM_reg_1792_1919_27_27_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_27_27_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_27_27_n_1),
        .O(\douta_reg[27]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[27]_i_6 
       (.I0(RAM_reg_384_511_27_27_n_1),
        .I1(RAM_reg_256_383_27_27_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_27_27_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_27_27_n_1),
        .O(\douta_reg[27]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[27]_i_7 
       (.I0(RAM_reg_896_1023_27_27_n_1),
        .I1(RAM_reg_768_895_27_27_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_27_27_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_27_27_n_1),
        .O(\douta_reg[27]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[28] 
       (.CLR(1'b0),
        .D(douta0[28]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [28]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[28]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[28]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[28]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__27_n_1),
        .O(douta0[28]));
  MUXF7 \douta_reg[28]_i_2 
       (.I0(\douta_reg[28]_i_4_n_0 ),
        .I1(\douta_reg[28]_i_5_n_0 ),
        .O(\douta_reg[28]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[28]_i_3 
       (.I0(\douta_reg[28]_i_6_n_0 ),
        .I1(\douta_reg[28]_i_7_n_0 ),
        .O(\douta_reg[28]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[28]_i_4 
       (.I0(RAM_reg_1408_1535_28_28_n_1),
        .I1(RAM_reg_1280_1407_28_28_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_28_28_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_28_28_n_1),
        .O(\douta_reg[28]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[28]_i_5 
       (.I0(RAM_reg_1920_2047_28_28_n_1),
        .I1(RAM_reg_1792_1919_28_28_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_28_28_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_28_28_n_1),
        .O(\douta_reg[28]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[28]_i_6 
       (.I0(RAM_reg_384_511_28_28_n_1),
        .I1(RAM_reg_256_383_28_28_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_28_28_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_28_28_n_1),
        .O(\douta_reg[28]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[28]_i_7 
       (.I0(RAM_reg_896_1023_28_28_n_1),
        .I1(RAM_reg_768_895_28_28_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_28_28_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_28_28_n_1),
        .O(\douta_reg[28]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[29] 
       (.CLR(1'b0),
        .D(douta0[29]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [29]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[29]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[29]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[29]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__28_n_1),
        .O(douta0[29]));
  MUXF7 \douta_reg[29]_i_2 
       (.I0(\douta_reg[29]_i_4_n_0 ),
        .I1(\douta_reg[29]_i_5_n_0 ),
        .O(\douta_reg[29]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[29]_i_3 
       (.I0(\douta_reg[29]_i_6_n_0 ),
        .I1(\douta_reg[29]_i_7_n_0 ),
        .O(\douta_reg[29]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[29]_i_4 
       (.I0(RAM_reg_1408_1535_29_29_n_1),
        .I1(RAM_reg_1280_1407_29_29_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_29_29_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_29_29_n_1),
        .O(\douta_reg[29]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[29]_i_5 
       (.I0(RAM_reg_1920_2047_29_29_n_1),
        .I1(RAM_reg_1792_1919_29_29_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_29_29_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_29_29_n_1),
        .O(\douta_reg[29]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[29]_i_6 
       (.I0(RAM_reg_384_511_29_29_n_1),
        .I1(RAM_reg_256_383_29_29_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_29_29_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_29_29_n_1),
        .O(\douta_reg[29]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[29]_i_7 
       (.I0(RAM_reg_896_1023_29_29_n_1),
        .I1(RAM_reg_768_895_29_29_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_29_29_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_29_29_n_1),
        .O(\douta_reg[29]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[2] 
       (.CLR(1'b0),
        .D(douta0[2]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [2]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[2]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[2]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[2]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__1_n_1),
        .O(douta0[2]));
  MUXF7 \douta_reg[2]_i_2 
       (.I0(\douta_reg[2]_i_4_n_0 ),
        .I1(\douta_reg[2]_i_5_n_0 ),
        .O(\douta_reg[2]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[2]_i_3 
       (.I0(\douta_reg[2]_i_6_n_0 ),
        .I1(\douta_reg[2]_i_7_n_0 ),
        .O(\douta_reg[2]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[2]_i_4 
       (.I0(RAM_reg_1408_1535_2_2_n_1),
        .I1(RAM_reg_1280_1407_2_2_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_2_2_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_2_2_n_1),
        .O(\douta_reg[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[2]_i_5 
       (.I0(RAM_reg_1920_2047_2_2_n_1),
        .I1(RAM_reg_1792_1919_2_2_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_2_2_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_2_2_n_1),
        .O(\douta_reg[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[2]_i_6 
       (.I0(RAM_reg_384_511_2_2_n_1),
        .I1(RAM_reg_256_383_2_2_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_2_2_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_2_2_n_1),
        .O(\douta_reg[2]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[2]_i_7 
       (.I0(RAM_reg_896_1023_2_2_n_1),
        .I1(RAM_reg_768_895_2_2_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_2_2_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_2_2_n_1),
        .O(\douta_reg[2]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[30] 
       (.CLR(1'b0),
        .D(douta0[30]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [30]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[30]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[30]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[30]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__29_n_1),
        .O(douta0[30]));
  MUXF7 \douta_reg[30]_i_2 
       (.I0(\douta_reg[30]_i_4_n_0 ),
        .I1(\douta_reg[30]_i_5_n_0 ),
        .O(\douta_reg[30]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[30]_i_3 
       (.I0(\douta_reg[30]_i_6_n_0 ),
        .I1(\douta_reg[30]_i_7_n_0 ),
        .O(\douta_reg[30]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[30]_i_4 
       (.I0(RAM_reg_1408_1535_30_30_n_1),
        .I1(RAM_reg_1280_1407_30_30_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_30_30_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_30_30_n_1),
        .O(\douta_reg[30]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[30]_i_5 
       (.I0(RAM_reg_1920_2047_30_30_n_1),
        .I1(RAM_reg_1792_1919_30_30_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_30_30_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_30_30_n_1),
        .O(\douta_reg[30]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[30]_i_6 
       (.I0(RAM_reg_384_511_30_30_n_1),
        .I1(RAM_reg_256_383_30_30_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_30_30_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_30_30_n_1),
        .O(\douta_reg[30]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[30]_i_7 
       (.I0(RAM_reg_896_1023_30_30_n_1),
        .I1(RAM_reg_768_895_30_30_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_30_30_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_30_30_n_1),
        .O(\douta_reg[30]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[31] 
       (.CLR(1'b0),
        .D(douta0[31]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [31]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[31]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[31]_i_3_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[31]_i_4_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__30_n_1),
        .O(douta0[31]));
  MUXF7 \douta_reg[31]_i_3 
       (.I0(\douta_reg[31]_i_6_n_0 ),
        .I1(\douta_reg[31]_i_7_n_0 ),
        .O(\douta_reg[31]_i_3_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[31]_i_4 
       (.I0(\douta_reg[31]_i_8_n_0 ),
        .I1(\douta_reg[31]_i_9_n_0 ),
        .O(\douta_reg[31]_i_4_n_0 ),
        .S(ad_mem[11]));
  LUT4 #(
    .INIT(16'h0409)) 
    \douta_reg[31]_i_5 
       (.I0(out[1]),
        .I1(out[3]),
        .I2(out[2]),
        .I3(out[0]),
        .O(\register_array_reg[0][15] ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[31]_i_6 
       (.I0(RAM_reg_1408_1535_31_31_n_1),
        .I1(RAM_reg_1280_1407_31_31_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_31_31_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_31_31_n_1),
        .O(\douta_reg[31]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[31]_i_7 
       (.I0(RAM_reg_1920_2047_31_31_n_1),
        .I1(RAM_reg_1792_1919_31_31_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_31_31_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_31_31_n_1),
        .O(\douta_reg[31]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[31]_i_8 
       (.I0(RAM_reg_384_511_31_31_n_1),
        .I1(RAM_reg_256_383_31_31_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_31_31_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_31_31_n_1),
        .O(\douta_reg[31]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[31]_i_9 
       (.I0(RAM_reg_896_1023_31_31_n_1),
        .I1(RAM_reg_768_895_31_31_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_31_31_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_31_31_n_1),
        .O(\douta_reg[31]_i_9_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[3] 
       (.CLR(1'b0),
        .D(douta0[3]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [3]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[3]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[3]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[3]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__2_n_1),
        .O(douta0[3]));
  MUXF7 \douta_reg[3]_i_2 
       (.I0(\douta_reg[3]_i_4_n_0 ),
        .I1(\douta_reg[3]_i_5_n_0 ),
        .O(\douta_reg[3]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[3]_i_3 
       (.I0(\douta_reg[3]_i_6_n_0 ),
        .I1(\douta_reg[3]_i_7_n_0 ),
        .O(\douta_reg[3]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[3]_i_4 
       (.I0(RAM_reg_1408_1535_3_3_n_1),
        .I1(RAM_reg_1280_1407_3_3_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_3_3_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_3_3_n_1),
        .O(\douta_reg[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[3]_i_5 
       (.I0(RAM_reg_1920_2047_3_3_n_1),
        .I1(RAM_reg_1792_1919_3_3_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_3_3_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_3_3_n_1),
        .O(\douta_reg[3]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[3]_i_6 
       (.I0(RAM_reg_384_511_3_3_n_1),
        .I1(RAM_reg_256_383_3_3_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_3_3_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_3_3_n_1),
        .O(\douta_reg[3]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[3]_i_7 
       (.I0(RAM_reg_896_1023_3_3_n_1),
        .I1(RAM_reg_768_895_3_3_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_3_3_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_3_3_n_1),
        .O(\douta_reg[3]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[4] 
       (.CLR(1'b0),
        .D(douta0[4]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [4]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[4]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[4]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[4]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__3_n_1),
        .O(douta0[4]));
  MUXF7 \douta_reg[4]_i_2 
       (.I0(\douta_reg[4]_i_4_n_0 ),
        .I1(\douta_reg[4]_i_5_n_0 ),
        .O(\douta_reg[4]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[4]_i_3 
       (.I0(\douta_reg[4]_i_6_n_0 ),
        .I1(\douta_reg[4]_i_7_n_0 ),
        .O(\douta_reg[4]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[4]_i_4 
       (.I0(RAM_reg_1408_1535_4_4_n_1),
        .I1(RAM_reg_1280_1407_4_4_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_4_4_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_4_4_n_1),
        .O(\douta_reg[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[4]_i_5 
       (.I0(RAM_reg_1920_2047_4_4_n_1),
        .I1(RAM_reg_1792_1919_4_4_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_4_4_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_4_4_n_1),
        .O(\douta_reg[4]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[4]_i_6 
       (.I0(RAM_reg_384_511_4_4_n_1),
        .I1(RAM_reg_256_383_4_4_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_4_4_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_4_4_n_1),
        .O(\douta_reg[4]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[4]_i_7 
       (.I0(RAM_reg_896_1023_4_4_n_1),
        .I1(RAM_reg_768_895_4_4_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_4_4_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_4_4_n_1),
        .O(\douta_reg[4]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[5] 
       (.CLR(1'b0),
        .D(douta0[5]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [5]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[5]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[5]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[5]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__4_n_1),
        .O(douta0[5]));
  MUXF7 \douta_reg[5]_i_2 
       (.I0(\douta_reg[5]_i_4_n_0 ),
        .I1(\douta_reg[5]_i_5_n_0 ),
        .O(\douta_reg[5]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[5]_i_3 
       (.I0(\douta_reg[5]_i_6_n_0 ),
        .I1(\douta_reg[5]_i_7_n_0 ),
        .O(\douta_reg[5]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[5]_i_4 
       (.I0(RAM_reg_1408_1535_5_5_n_1),
        .I1(RAM_reg_1280_1407_5_5_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_5_5_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_5_5_n_1),
        .O(\douta_reg[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[5]_i_5 
       (.I0(RAM_reg_1920_2047_5_5_n_1),
        .I1(RAM_reg_1792_1919_5_5_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_5_5_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_5_5_n_1),
        .O(\douta_reg[5]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[5]_i_6 
       (.I0(RAM_reg_384_511_5_5_n_1),
        .I1(RAM_reg_256_383_5_5_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_5_5_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_5_5_n_1),
        .O(\douta_reg[5]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[5]_i_7 
       (.I0(RAM_reg_896_1023_5_5_n_1),
        .I1(RAM_reg_768_895_5_5_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_5_5_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_5_5_n_1),
        .O(\douta_reg[5]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[6] 
       (.CLR(1'b0),
        .D(douta0[6]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [6]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[6]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[6]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[6]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__5_n_1),
        .O(douta0[6]));
  MUXF7 \douta_reg[6]_i_2 
       (.I0(\douta_reg[6]_i_4_n_0 ),
        .I1(\douta_reg[6]_i_5_n_0 ),
        .O(\douta_reg[6]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[6]_i_3 
       (.I0(\douta_reg[6]_i_6_n_0 ),
        .I1(\douta_reg[6]_i_7_n_0 ),
        .O(\douta_reg[6]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[6]_i_4 
       (.I0(RAM_reg_1408_1535_6_6_n_1),
        .I1(RAM_reg_1280_1407_6_6_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_6_6_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_6_6_n_1),
        .O(\douta_reg[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[6]_i_5 
       (.I0(RAM_reg_1920_2047_6_6_n_1),
        .I1(RAM_reg_1792_1919_6_6_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_6_6_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_6_6_n_1),
        .O(\douta_reg[6]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[6]_i_6 
       (.I0(RAM_reg_384_511_6_6_n_1),
        .I1(RAM_reg_256_383_6_6_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_6_6_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_6_6_n_1),
        .O(\douta_reg[6]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[6]_i_7 
       (.I0(RAM_reg_896_1023_6_6_n_1),
        .I1(RAM_reg_768_895_6_6_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_6_6_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_6_6_n_1),
        .O(\douta_reg[6]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[7] 
       (.CLR(1'b0),
        .D(douta0[7]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [7]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[7]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[7]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[7]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__6_n_1),
        .O(douta0[7]));
  MUXF7 \douta_reg[7]_i_2 
       (.I0(\douta_reg[7]_i_4_n_0 ),
        .I1(\douta_reg[7]_i_5_n_0 ),
        .O(\douta_reg[7]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[7]_i_3 
       (.I0(\douta_reg[7]_i_6_n_0 ),
        .I1(\douta_reg[7]_i_7_n_0 ),
        .O(\douta_reg[7]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[7]_i_4 
       (.I0(RAM_reg_1408_1535_7_7_n_1),
        .I1(RAM_reg_1280_1407_7_7_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_7_7_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_7_7_n_1),
        .O(\douta_reg[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[7]_i_5 
       (.I0(RAM_reg_1920_2047_7_7_n_1),
        .I1(RAM_reg_1792_1919_7_7_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_7_7_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_7_7_n_1),
        .O(\douta_reg[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[7]_i_6 
       (.I0(RAM_reg_384_511_7_7_n_1),
        .I1(RAM_reg_256_383_7_7_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_7_7_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_7_7_n_1),
        .O(\douta_reg[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[7]_i_7 
       (.I0(RAM_reg_896_1023_7_7_n_1),
        .I1(RAM_reg_768_895_7_7_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_7_7_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_7_7_n_1),
        .O(\douta_reg[7]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[8] 
       (.CLR(1'b0),
        .D(douta0[8]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [8]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[8]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[8]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[8]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__7_n_1),
        .O(douta0[8]));
  MUXF7 \douta_reg[8]_i_2 
       (.I0(\douta_reg[8]_i_4_n_0 ),
        .I1(\douta_reg[8]_i_5_n_0 ),
        .O(\douta_reg[8]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[8]_i_3 
       (.I0(\douta_reg[8]_i_6_n_0 ),
        .I1(\douta_reg[8]_i_7_n_0 ),
        .O(\douta_reg[8]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[8]_i_4 
       (.I0(RAM_reg_1408_1535_8_8_n_1),
        .I1(RAM_reg_1280_1407_8_8_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_8_8_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_8_8_n_1),
        .O(\douta_reg[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[8]_i_5 
       (.I0(RAM_reg_1920_2047_8_8_n_1),
        .I1(RAM_reg_1792_1919_8_8_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_8_8_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_8_8_n_1),
        .O(\douta_reg[8]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[8]_i_6 
       (.I0(RAM_reg_384_511_8_8_n_1),
        .I1(RAM_reg_256_383_8_8_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_8_8_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_8_8_n_1),
        .O(\douta_reg[8]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[8]_i_7 
       (.I0(RAM_reg_896_1023_8_8_n_1),
        .I1(RAM_reg_768_895_8_8_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_8_8_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_8_8_n_1),
        .O(\douta_reg[8]_i_7_n_0 ));
  (* XILINX_LEGACY_PRIM = "LD" *) 
  LDCE #(
    .INIT(1'b0)) 
    \douta_reg[9] 
       (.CLR(1'b0),
        .D(douta0[9]),
        .G(\FSM_sequential_state_reg[1]_5 ),
        .GE(1'b1),
        .Q(\register_array_reg[0][15]_0 [9]));
  LUT6 #(
    .INIT(64'h4540FFFF45404540)) 
    \douta_reg[9]_i_1 
       (.I0(ad_mem[13]),
        .I1(\douta_reg[9]_i_2_n_0 ),
        .I2(ad_mem[12]),
        .I3(\douta_reg[9]_i_3_n_0 ),
        .I4(\register_array_reg[0][15]_1 ),
        .I5(RAM_reg_0_15_0_0__8_n_1),
        .O(douta0[9]));
  MUXF7 \douta_reg[9]_i_2 
       (.I0(\douta_reg[9]_i_4_n_0 ),
        .I1(\douta_reg[9]_i_5_n_0 ),
        .O(\douta_reg[9]_i_2_n_0 ),
        .S(ad_mem[11]));
  MUXF7 \douta_reg[9]_i_3 
       (.I0(\douta_reg[9]_i_6_n_0 ),
        .I1(\douta_reg[9]_i_7_n_0 ),
        .O(\douta_reg[9]_i_3_n_0 ),
        .S(ad_mem[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[9]_i_4 
       (.I0(RAM_reg_1408_1535_9_9_n_1),
        .I1(RAM_reg_1280_1407_9_9_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1152_1279_9_9_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1024_1151_9_9_n_1),
        .O(\douta_reg[9]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[9]_i_5 
       (.I0(RAM_reg_1920_2047_9_9_n_1),
        .I1(RAM_reg_1792_1919_9_9_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_1664_1791_9_9_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_1536_1663_9_9_n_1),
        .O(\douta_reg[9]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[9]_i_6 
       (.I0(RAM_reg_384_511_9_9_n_1),
        .I1(RAM_reg_256_383_9_9_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_128_255_9_9_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_0_127_9_9_n_1),
        .O(\douta_reg[9]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \douta_reg[9]_i_7 
       (.I0(RAM_reg_896_1023_9_9_n_1),
        .I1(RAM_reg_768_895_9_9_n_1),
        .I2(ad_mem[10]),
        .I3(RAM_reg_640_767_9_9_n_1),
        .I4(ad_mem[9]),
        .I5(RAM_reg_512_639_9_9_n_1),
        .O(\douta_reg[9]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[0]_inst_i_12 
       (.I0(RAM_reg_384_511_0_0_n_0),
        .I1(RAM_reg_256_383_0_0_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_0_0_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_0_0_n_0),
        .O(\leds_OBUF[0]_inst_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[0]_inst_i_13 
       (.I0(RAM_reg_896_1023_0_0_n_0),
        .I1(RAM_reg_768_895_0_0_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_0_0_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_0_0_n_0),
        .O(\leds_OBUF[0]_inst_i_13_n_0 ));
  MUXF7 \leds_OBUF[0]_inst_i_3 
       (.I0(\leds_OBUF[0]_inst_i_8_n_0 ),
        .I1(\leds_OBUF[0]_inst_i_9_n_0 ),
        .O(memout[16]),
        .S(read_switches_IBUF[9]));
  MUXF7 \leds_OBUF[0]_inst_i_5 
       (.I0(\leds_OBUF[0]_inst_i_12_n_0 ),
        .I1(\leds_OBUF[0]_inst_i_13_n_0 ),
        .O(memout[0]),
        .S(read_switches_IBUF[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[0]_inst_i_8 
       (.I0(RAM_reg_384_511_16_16_n_0),
        .I1(RAM_reg_256_383_16_16_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_16_16_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_16_16_n_0),
        .O(\leds_OBUF[0]_inst_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[0]_inst_i_9 
       (.I0(RAM_reg_896_1023_16_16_n_0),
        .I1(RAM_reg_768_895_16_16_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_16_16_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_16_16_n_0),
        .O(\leds_OBUF[0]_inst_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[10]_inst_i_12 
       (.I0(RAM_reg_384_511_10_10_n_0),
        .I1(RAM_reg_256_383_10_10_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_10_10_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_10_10_n_0),
        .O(\leds_OBUF[10]_inst_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[10]_inst_i_13 
       (.I0(RAM_reg_896_1023_10_10_n_0),
        .I1(RAM_reg_768_895_10_10_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_10_10_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_10_10_n_0),
        .O(\leds_OBUF[10]_inst_i_13_n_0 ));
  MUXF7 \leds_OBUF[10]_inst_i_3 
       (.I0(\leds_OBUF[10]_inst_i_8_n_0 ),
        .I1(\leds_OBUF[10]_inst_i_9_n_0 ),
        .O(memout[26]),
        .S(read_switches_IBUF[9]));
  MUXF7 \leds_OBUF[10]_inst_i_5 
       (.I0(\leds_OBUF[10]_inst_i_12_n_0 ),
        .I1(\leds_OBUF[10]_inst_i_13_n_0 ),
        .O(memout[10]),
        .S(read_switches_IBUF[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[10]_inst_i_8 
       (.I0(RAM_reg_384_511_26_26_n_0),
        .I1(RAM_reg_256_383_26_26_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_26_26_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_26_26_n_0),
        .O(\leds_OBUF[10]_inst_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[10]_inst_i_9 
       (.I0(RAM_reg_896_1023_26_26_n_0),
        .I1(RAM_reg_768_895_26_26_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_26_26_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_26_26_n_0),
        .O(\leds_OBUF[10]_inst_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[11]_inst_i_12 
       (.I0(RAM_reg_384_511_11_11_n_0),
        .I1(RAM_reg_256_383_11_11_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_11_11_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_11_11_n_0),
        .O(\leds_OBUF[11]_inst_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[11]_inst_i_13 
       (.I0(RAM_reg_896_1023_11_11_n_0),
        .I1(RAM_reg_768_895_11_11_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_11_11_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_11_11_n_0),
        .O(\leds_OBUF[11]_inst_i_13_n_0 ));
  MUXF7 \leds_OBUF[11]_inst_i_3 
       (.I0(\leds_OBUF[11]_inst_i_8_n_0 ),
        .I1(\leds_OBUF[11]_inst_i_9_n_0 ),
        .O(memout[27]),
        .S(read_switches_IBUF[9]));
  MUXF7 \leds_OBUF[11]_inst_i_5 
       (.I0(\leds_OBUF[11]_inst_i_12_n_0 ),
        .I1(\leds_OBUF[11]_inst_i_13_n_0 ),
        .O(memout[11]),
        .S(read_switches_IBUF[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[11]_inst_i_8 
       (.I0(RAM_reg_384_511_27_27_n_0),
        .I1(RAM_reg_256_383_27_27_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_27_27_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_27_27_n_0),
        .O(\leds_OBUF[11]_inst_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[11]_inst_i_9 
       (.I0(RAM_reg_896_1023_27_27_n_0),
        .I1(RAM_reg_768_895_27_27_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_27_27_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_27_27_n_0),
        .O(\leds_OBUF[11]_inst_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[12]_inst_i_12 
       (.I0(RAM_reg_384_511_12_12_n_0),
        .I1(RAM_reg_256_383_12_12_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_12_12_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_12_12_n_0),
        .O(\leds_OBUF[12]_inst_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[12]_inst_i_13 
       (.I0(RAM_reg_896_1023_12_12_n_0),
        .I1(RAM_reg_768_895_12_12_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_12_12_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_12_12_n_0),
        .O(\leds_OBUF[12]_inst_i_13_n_0 ));
  MUXF7 \leds_OBUF[12]_inst_i_3 
       (.I0(\leds_OBUF[12]_inst_i_8_n_0 ),
        .I1(\leds_OBUF[12]_inst_i_9_n_0 ),
        .O(memout[28]),
        .S(read_switches_IBUF[9]));
  MUXF7 \leds_OBUF[12]_inst_i_5 
       (.I0(\leds_OBUF[12]_inst_i_12_n_0 ),
        .I1(\leds_OBUF[12]_inst_i_13_n_0 ),
        .O(memout[12]),
        .S(read_switches_IBUF[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[12]_inst_i_8 
       (.I0(RAM_reg_384_511_28_28_n_0),
        .I1(RAM_reg_256_383_28_28_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_28_28_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_28_28_n_0),
        .O(\leds_OBUF[12]_inst_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[12]_inst_i_9 
       (.I0(RAM_reg_896_1023_28_28_n_0),
        .I1(RAM_reg_768_895_28_28_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_28_28_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_28_28_n_0),
        .O(\leds_OBUF[12]_inst_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[13]_inst_i_12 
       (.I0(RAM_reg_384_511_13_13_n_0),
        .I1(RAM_reg_256_383_13_13_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_13_13_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_13_13_n_0),
        .O(\leds_OBUF[13]_inst_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[13]_inst_i_13 
       (.I0(RAM_reg_896_1023_13_13_n_0),
        .I1(RAM_reg_768_895_13_13_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_13_13_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_13_13_n_0),
        .O(\leds_OBUF[13]_inst_i_13_n_0 ));
  MUXF7 \leds_OBUF[13]_inst_i_3 
       (.I0(\leds_OBUF[13]_inst_i_8_n_0 ),
        .I1(\leds_OBUF[13]_inst_i_9_n_0 ),
        .O(memout[29]),
        .S(read_switches_IBUF[9]));
  MUXF7 \leds_OBUF[13]_inst_i_5 
       (.I0(\leds_OBUF[13]_inst_i_12_n_0 ),
        .I1(\leds_OBUF[13]_inst_i_13_n_0 ),
        .O(memout[13]),
        .S(read_switches_IBUF[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[13]_inst_i_8 
       (.I0(RAM_reg_384_511_29_29_n_0),
        .I1(RAM_reg_256_383_29_29_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_29_29_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_29_29_n_0),
        .O(\leds_OBUF[13]_inst_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[13]_inst_i_9 
       (.I0(RAM_reg_896_1023_29_29_n_0),
        .I1(RAM_reg_768_895_29_29_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_29_29_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_29_29_n_0),
        .O(\leds_OBUF[13]_inst_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[14]_inst_i_12 
       (.I0(RAM_reg_384_511_14_14_n_0),
        .I1(RAM_reg_256_383_14_14_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_14_14_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_14_14_n_0),
        .O(\leds_OBUF[14]_inst_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[14]_inst_i_13 
       (.I0(RAM_reg_896_1023_14_14_n_0),
        .I1(RAM_reg_768_895_14_14_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_14_14_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_14_14_n_0),
        .O(\leds_OBUF[14]_inst_i_13_n_0 ));
  MUXF7 \leds_OBUF[14]_inst_i_3 
       (.I0(\leds_OBUF[14]_inst_i_8_n_0 ),
        .I1(\leds_OBUF[14]_inst_i_9_n_0 ),
        .O(memout[30]),
        .S(read_switches_IBUF[9]));
  MUXF7 \leds_OBUF[14]_inst_i_5 
       (.I0(\leds_OBUF[14]_inst_i_12_n_0 ),
        .I1(\leds_OBUF[14]_inst_i_13_n_0 ),
        .O(memout[14]),
        .S(read_switches_IBUF[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[14]_inst_i_8 
       (.I0(RAM_reg_384_511_30_30_n_0),
        .I1(RAM_reg_256_383_30_30_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_30_30_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_30_30_n_0),
        .O(\leds_OBUF[14]_inst_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[14]_inst_i_9 
       (.I0(RAM_reg_896_1023_30_30_n_0),
        .I1(RAM_reg_768_895_30_30_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_30_30_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_30_30_n_0),
        .O(\leds_OBUF[14]_inst_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[15]_inst_i_12 
       (.I0(RAM_reg_384_511_15_15_n_0),
        .I1(RAM_reg_256_383_15_15_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_15_15_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_15_15_n_0),
        .O(\leds_OBUF[15]_inst_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[15]_inst_i_13 
       (.I0(RAM_reg_896_1023_15_15_n_0),
        .I1(RAM_reg_768_895_15_15_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_15_15_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_15_15_n_0),
        .O(\leds_OBUF[15]_inst_i_13_n_0 ));
  MUXF7 \leds_OBUF[15]_inst_i_3 
       (.I0(\leds_OBUF[15]_inst_i_8_n_0 ),
        .I1(\leds_OBUF[15]_inst_i_9_n_0 ),
        .O(memout[31]),
        .S(read_switches_IBUF[9]));
  MUXF7 \leds_OBUF[15]_inst_i_5 
       (.I0(\leds_OBUF[15]_inst_i_12_n_0 ),
        .I1(\leds_OBUF[15]_inst_i_13_n_0 ),
        .O(memout[15]),
        .S(read_switches_IBUF[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[15]_inst_i_8 
       (.I0(RAM_reg_384_511_31_31_n_0),
        .I1(RAM_reg_256_383_31_31_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_31_31_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_31_31_n_0),
        .O(\leds_OBUF[15]_inst_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[15]_inst_i_9 
       (.I0(RAM_reg_896_1023_31_31_n_0),
        .I1(RAM_reg_768_895_31_31_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_31_31_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_31_31_n_0),
        .O(\leds_OBUF[15]_inst_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[1]_inst_i_12 
       (.I0(RAM_reg_384_511_1_1_n_0),
        .I1(RAM_reg_256_383_1_1_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_1_1_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_1_1_n_0),
        .O(\leds_OBUF[1]_inst_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[1]_inst_i_13 
       (.I0(RAM_reg_896_1023_1_1_n_0),
        .I1(RAM_reg_768_895_1_1_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_1_1_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_1_1_n_0),
        .O(\leds_OBUF[1]_inst_i_13_n_0 ));
  MUXF7 \leds_OBUF[1]_inst_i_3 
       (.I0(\leds_OBUF[1]_inst_i_8_n_0 ),
        .I1(\leds_OBUF[1]_inst_i_9_n_0 ),
        .O(memout[17]),
        .S(read_switches_IBUF[9]));
  MUXF7 \leds_OBUF[1]_inst_i_5 
       (.I0(\leds_OBUF[1]_inst_i_12_n_0 ),
        .I1(\leds_OBUF[1]_inst_i_13_n_0 ),
        .O(memout[1]),
        .S(read_switches_IBUF[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[1]_inst_i_8 
       (.I0(RAM_reg_384_511_17_17_n_0),
        .I1(RAM_reg_256_383_17_17_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_17_17_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_17_17_n_0),
        .O(\leds_OBUF[1]_inst_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[1]_inst_i_9 
       (.I0(RAM_reg_896_1023_17_17_n_0),
        .I1(RAM_reg_768_895_17_17_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_17_17_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_17_17_n_0),
        .O(\leds_OBUF[1]_inst_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[2]_inst_i_12 
       (.I0(RAM_reg_384_511_2_2_n_0),
        .I1(RAM_reg_256_383_2_2_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_2_2_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_2_2_n_0),
        .O(\leds_OBUF[2]_inst_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[2]_inst_i_13 
       (.I0(RAM_reg_896_1023_2_2_n_0),
        .I1(RAM_reg_768_895_2_2_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_2_2_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_2_2_n_0),
        .O(\leds_OBUF[2]_inst_i_13_n_0 ));
  MUXF7 \leds_OBUF[2]_inst_i_3 
       (.I0(\leds_OBUF[2]_inst_i_8_n_0 ),
        .I1(\leds_OBUF[2]_inst_i_9_n_0 ),
        .O(memout[18]),
        .S(read_switches_IBUF[9]));
  MUXF7 \leds_OBUF[2]_inst_i_5 
       (.I0(\leds_OBUF[2]_inst_i_12_n_0 ),
        .I1(\leds_OBUF[2]_inst_i_13_n_0 ),
        .O(memout[2]),
        .S(read_switches_IBUF[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[2]_inst_i_8 
       (.I0(RAM_reg_384_511_18_18_n_0),
        .I1(RAM_reg_256_383_18_18_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_18_18_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_18_18_n_0),
        .O(\leds_OBUF[2]_inst_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[2]_inst_i_9 
       (.I0(RAM_reg_896_1023_18_18_n_0),
        .I1(RAM_reg_768_895_18_18_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_18_18_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_18_18_n_0),
        .O(\leds_OBUF[2]_inst_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[3]_inst_i_12 
       (.I0(RAM_reg_384_511_3_3_n_0),
        .I1(RAM_reg_256_383_3_3_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_3_3_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_3_3_n_0),
        .O(\leds_OBUF[3]_inst_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[3]_inst_i_13 
       (.I0(RAM_reg_896_1023_3_3_n_0),
        .I1(RAM_reg_768_895_3_3_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_3_3_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_3_3_n_0),
        .O(\leds_OBUF[3]_inst_i_13_n_0 ));
  MUXF7 \leds_OBUF[3]_inst_i_3 
       (.I0(\leds_OBUF[3]_inst_i_8_n_0 ),
        .I1(\leds_OBUF[3]_inst_i_9_n_0 ),
        .O(memout[19]),
        .S(read_switches_IBUF[9]));
  MUXF7 \leds_OBUF[3]_inst_i_5 
       (.I0(\leds_OBUF[3]_inst_i_12_n_0 ),
        .I1(\leds_OBUF[3]_inst_i_13_n_0 ),
        .O(memout[3]),
        .S(read_switches_IBUF[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[3]_inst_i_8 
       (.I0(RAM_reg_384_511_19_19_n_0),
        .I1(RAM_reg_256_383_19_19_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_19_19_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_19_19_n_0),
        .O(\leds_OBUF[3]_inst_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[3]_inst_i_9 
       (.I0(RAM_reg_896_1023_19_19_n_0),
        .I1(RAM_reg_768_895_19_19_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_19_19_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_19_19_n_0),
        .O(\leds_OBUF[3]_inst_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[4]_inst_i_12 
       (.I0(RAM_reg_384_511_4_4_n_0),
        .I1(RAM_reg_256_383_4_4_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_4_4_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_4_4_n_0),
        .O(\leds_OBUF[4]_inst_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[4]_inst_i_13 
       (.I0(RAM_reg_896_1023_4_4_n_0),
        .I1(RAM_reg_768_895_4_4_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_4_4_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_4_4_n_0),
        .O(\leds_OBUF[4]_inst_i_13_n_0 ));
  MUXF7 \leds_OBUF[4]_inst_i_3 
       (.I0(\leds_OBUF[4]_inst_i_8_n_0 ),
        .I1(\leds_OBUF[4]_inst_i_9_n_0 ),
        .O(memout[20]),
        .S(read_switches_IBUF[9]));
  MUXF7 \leds_OBUF[4]_inst_i_5 
       (.I0(\leds_OBUF[4]_inst_i_12_n_0 ),
        .I1(\leds_OBUF[4]_inst_i_13_n_0 ),
        .O(memout[4]),
        .S(read_switches_IBUF[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[4]_inst_i_8 
       (.I0(RAM_reg_384_511_20_20_n_0),
        .I1(RAM_reg_256_383_20_20_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_20_20_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_20_20_n_0),
        .O(\leds_OBUF[4]_inst_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[4]_inst_i_9 
       (.I0(RAM_reg_896_1023_20_20_n_0),
        .I1(RAM_reg_768_895_20_20_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_20_20_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_20_20_n_0),
        .O(\leds_OBUF[4]_inst_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[5]_inst_i_12 
       (.I0(RAM_reg_384_511_5_5_n_0),
        .I1(RAM_reg_256_383_5_5_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_5_5_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_5_5_n_0),
        .O(\leds_OBUF[5]_inst_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[5]_inst_i_13 
       (.I0(RAM_reg_896_1023_5_5_n_0),
        .I1(RAM_reg_768_895_5_5_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_5_5_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_5_5_n_0),
        .O(\leds_OBUF[5]_inst_i_13_n_0 ));
  MUXF7 \leds_OBUF[5]_inst_i_3 
       (.I0(\leds_OBUF[5]_inst_i_8_n_0 ),
        .I1(\leds_OBUF[5]_inst_i_9_n_0 ),
        .O(memout[21]),
        .S(read_switches_IBUF[9]));
  MUXF7 \leds_OBUF[5]_inst_i_5 
       (.I0(\leds_OBUF[5]_inst_i_12_n_0 ),
        .I1(\leds_OBUF[5]_inst_i_13_n_0 ),
        .O(memout[5]),
        .S(read_switches_IBUF[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[5]_inst_i_8 
       (.I0(RAM_reg_384_511_21_21_n_0),
        .I1(RAM_reg_256_383_21_21_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_21_21_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_21_21_n_0),
        .O(\leds_OBUF[5]_inst_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[5]_inst_i_9 
       (.I0(RAM_reg_896_1023_21_21_n_0),
        .I1(RAM_reg_768_895_21_21_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_21_21_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_21_21_n_0),
        .O(\leds_OBUF[5]_inst_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[6]_inst_i_12 
       (.I0(RAM_reg_384_511_6_6_n_0),
        .I1(RAM_reg_256_383_6_6_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_6_6_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_6_6_n_0),
        .O(\leds_OBUF[6]_inst_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[6]_inst_i_13 
       (.I0(RAM_reg_896_1023_6_6_n_0),
        .I1(RAM_reg_768_895_6_6_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_6_6_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_6_6_n_0),
        .O(\leds_OBUF[6]_inst_i_13_n_0 ));
  MUXF7 \leds_OBUF[6]_inst_i_3 
       (.I0(\leds_OBUF[6]_inst_i_8_n_0 ),
        .I1(\leds_OBUF[6]_inst_i_9_n_0 ),
        .O(memout[22]),
        .S(read_switches_IBUF[9]));
  MUXF7 \leds_OBUF[6]_inst_i_5 
       (.I0(\leds_OBUF[6]_inst_i_12_n_0 ),
        .I1(\leds_OBUF[6]_inst_i_13_n_0 ),
        .O(memout[6]),
        .S(read_switches_IBUF[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[6]_inst_i_8 
       (.I0(RAM_reg_384_511_22_22_n_0),
        .I1(RAM_reg_256_383_22_22_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_22_22_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_22_22_n_0),
        .O(\leds_OBUF[6]_inst_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[6]_inst_i_9 
       (.I0(RAM_reg_896_1023_22_22_n_0),
        .I1(RAM_reg_768_895_22_22_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_22_22_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_22_22_n_0),
        .O(\leds_OBUF[6]_inst_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[7]_inst_i_12 
       (.I0(RAM_reg_384_511_7_7_n_0),
        .I1(RAM_reg_256_383_7_7_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_7_7_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_7_7_n_0),
        .O(\leds_OBUF[7]_inst_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[7]_inst_i_13 
       (.I0(RAM_reg_896_1023_7_7_n_0),
        .I1(RAM_reg_768_895_7_7_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_7_7_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_7_7_n_0),
        .O(\leds_OBUF[7]_inst_i_13_n_0 ));
  MUXF7 \leds_OBUF[7]_inst_i_3 
       (.I0(\leds_OBUF[7]_inst_i_8_n_0 ),
        .I1(\leds_OBUF[7]_inst_i_9_n_0 ),
        .O(memout[23]),
        .S(read_switches_IBUF[9]));
  MUXF7 \leds_OBUF[7]_inst_i_5 
       (.I0(\leds_OBUF[7]_inst_i_12_n_0 ),
        .I1(\leds_OBUF[7]_inst_i_13_n_0 ),
        .O(memout[7]),
        .S(read_switches_IBUF[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[7]_inst_i_8 
       (.I0(RAM_reg_384_511_23_23_n_0),
        .I1(RAM_reg_256_383_23_23_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_23_23_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_23_23_n_0),
        .O(\leds_OBUF[7]_inst_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[7]_inst_i_9 
       (.I0(RAM_reg_896_1023_23_23_n_0),
        .I1(RAM_reg_768_895_23_23_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_23_23_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_23_23_n_0),
        .O(\leds_OBUF[7]_inst_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[8]_inst_i_12 
       (.I0(RAM_reg_384_511_8_8_n_0),
        .I1(RAM_reg_256_383_8_8_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_8_8_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_8_8_n_0),
        .O(\leds_OBUF[8]_inst_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[8]_inst_i_13 
       (.I0(RAM_reg_896_1023_8_8_n_0),
        .I1(RAM_reg_768_895_8_8_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_8_8_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_8_8_n_0),
        .O(\leds_OBUF[8]_inst_i_13_n_0 ));
  MUXF7 \leds_OBUF[8]_inst_i_3 
       (.I0(\leds_OBUF[8]_inst_i_8_n_0 ),
        .I1(\leds_OBUF[8]_inst_i_9_n_0 ),
        .O(memout[24]),
        .S(read_switches_IBUF[9]));
  MUXF7 \leds_OBUF[8]_inst_i_5 
       (.I0(\leds_OBUF[8]_inst_i_12_n_0 ),
        .I1(\leds_OBUF[8]_inst_i_13_n_0 ),
        .O(memout[8]),
        .S(read_switches_IBUF[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[8]_inst_i_8 
       (.I0(RAM_reg_384_511_24_24_n_0),
        .I1(RAM_reg_256_383_24_24_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_24_24_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_24_24_n_0),
        .O(\leds_OBUF[8]_inst_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[8]_inst_i_9 
       (.I0(RAM_reg_896_1023_24_24_n_0),
        .I1(RAM_reg_768_895_24_24_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_24_24_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_24_24_n_0),
        .O(\leds_OBUF[8]_inst_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[9]_inst_i_12 
       (.I0(RAM_reg_384_511_9_9_n_0),
        .I1(RAM_reg_256_383_9_9_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_9_9_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_9_9_n_0),
        .O(\leds_OBUF[9]_inst_i_12_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[9]_inst_i_13 
       (.I0(RAM_reg_896_1023_9_9_n_0),
        .I1(RAM_reg_768_895_9_9_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_9_9_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_9_9_n_0),
        .O(\leds_OBUF[9]_inst_i_13_n_0 ));
  MUXF7 \leds_OBUF[9]_inst_i_3 
       (.I0(\leds_OBUF[9]_inst_i_8_n_0 ),
        .I1(\leds_OBUF[9]_inst_i_9_n_0 ),
        .O(memout[25]),
        .S(read_switches_IBUF[9]));
  MUXF7 \leds_OBUF[9]_inst_i_5 
       (.I0(\leds_OBUF[9]_inst_i_12_n_0 ),
        .I1(\leds_OBUF[9]_inst_i_13_n_0 ),
        .O(memout[9]),
        .S(read_switches_IBUF[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[9]_inst_i_8 
       (.I0(RAM_reg_384_511_25_25_n_0),
        .I1(RAM_reg_256_383_25_25_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_128_255_25_25_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_0_127_25_25_n_0),
        .O(\leds_OBUF[9]_inst_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    \leds_OBUF[9]_inst_i_9 
       (.I0(RAM_reg_896_1023_25_25_n_0),
        .I1(RAM_reg_768_895_25_25_n_0),
        .I2(read_switches_IBUF[8]),
        .I3(RAM_reg_640_767_25_25_n_0),
        .I4(read_switches_IBUF[7]),
        .I5(RAM_reg_512_639_25_25_n_0),
        .O(\leds_OBUF[9]_inst_i_9_n_0 ));
endmodule

module master
   (D,
    output_big,
    \pc_reg[0] ,
    output_big__0,
    \register_array_reg[0][31] ,
    \register_array_reg[0][15] ,
    leds_OBUF,
    \pc_reg[31] ,
    out,
    \c_reg[0] ,
    \FSM_sequential_state_reg[0] ,
    CLK,
    AR,
    memOrReg_IBUF,
    firstOrLast_IBUF,
    read_switches_IBUF,
    E,
    \FSM_sequential_state_reg[1] ,
    \FSM_sequential_state_reg[0]_0 ,
    \FSM_sequential_state_reg[1]_0 ,
    \FSM_sequential_state_reg[1]_1 ,
    \FSM_sequential_state_reg[1]_2 ,
    \FSM_sequential_state_reg[0]_1 ,
    \FSM_sequential_state_reg[0]_2 ,
    \FSM_sequential_state_reg[1]_3 );
  output [3:0]D;
  output output_big;
  output \pc_reg[0] ;
  output output_big__0;
  output \register_array_reg[0][31] ;
  output \register_array_reg[0][15] ;
  output [15:0]leds_OBUF;
  output \pc_reg[31] ;
  input [3:0]out;
  input [0:0]\c_reg[0] ;
  input \FSM_sequential_state_reg[0] ;
  input CLK;
  input [0:0]AR;
  input memOrReg_IBUF;
  input firstOrLast_IBUF;
  input [9:0]read_switches_IBUF;
  input [0:0]E;
  input [0:0]\FSM_sequential_state_reg[1] ;
  input [0:0]\FSM_sequential_state_reg[0]_0 ;
  input [0:0]\FSM_sequential_state_reg[1]_0 ;
  input [0:0]\FSM_sequential_state_reg[1]_1 ;
  input [0:0]\FSM_sequential_state_reg[1]_2 ;
  input [0:0]\FSM_sequential_state_reg[0]_1 ;
  input [0:0]\FSM_sequential_state_reg[0]_2 ;
  input [0:0]\FSM_sequential_state_reg[1]_3 ;

  wire ACtrlIns_n_1;
  wire ACtrlIns_n_2;
  wire ACtrlIns_n_3;
  wire ACtrlIns_n_41;
  wire ACtrlIns_n_42;
  wire ACtrlIns_n_7;
  wire \ALU_Instantiate/c_31 ;
  wire [31:0]\ALU_Instantiate/data2 ;
  wire [0:0]\ALU_Instantiate/data3 ;
  wire [31:0]\ALU_Instantiate/data4 ;
  wire [31:4]\ALU_Instantiate/data5 ;
  wire [0:0]AR;
  wire [1:0]Asrc2;
  wire CLK;
  wire [3:0]D;
  wire DataPathInstantiate_n_158;
  wire DataPathInstantiate_n_159;
  wire DataPathInstantiate_n_160;
  wire DataPathInstantiate_n_199;
  wire DataPathInstantiate_n_200;
  wire DataPathInstantiate_n_201;
  wire DataPathInstantiate_n_202;
  wire DataPathInstantiate_n_203;
  wire DataPathInstantiate_n_204;
  wire DataPathInstantiate_n_205;
  wire DataPathInstantiate_n_206;
  wire DataPathInstantiate_n_207;
  wire DataPathInstantiate_n_208;
  wire DataPathInstantiate_n_209;
  wire DataPathInstantiate_n_210;
  wire DataPathInstantiate_n_211;
  wire DataPathInstantiate_n_212;
  wire DataPathInstantiate_n_213;
  wire DataPathInstantiate_n_214;
  wire DataPathInstantiate_n_215;
  wire DataPathInstantiate_n_216;
  wire DataPathInstantiate_n_217;
  wire DataPathInstantiate_n_218;
  wire DataPathInstantiate_n_219;
  wire DataPathInstantiate_n_220;
  wire DataPathInstantiate_n_221;
  wire DataPathInstantiate_n_222;
  wire DataPathInstantiate_n_223;
  wire DataPathInstantiate_n_224;
  wire DataPathInstantiate_n_225;
  wire DataPathInstantiate_n_226;
  wire DataPathInstantiate_n_227;
  wire DataPathInstantiate_n_228;
  wire DataPathInstantiate_n_23;
  wire DataPathInstantiate_n_230;
  wire DataPathInstantiate_n_231;
  wire DataPathInstantiate_n_232;
  wire DataPathInstantiate_n_233;
  wire DataPathInstantiate_n_234;
  wire DataPathInstantiate_n_235;
  wire DataPathInstantiate_n_236;
  wire DataPathInstantiate_n_237;
  wire DataPathInstantiate_n_238;
  wire DataPathInstantiate_n_239;
  wire DataPathInstantiate_n_240;
  wire DataPathInstantiate_n_241;
  wire DataPathInstantiate_n_242;
  wire DataPathInstantiate_n_243;
  wire DataPathInstantiate_n_244;
  wire DataPathInstantiate_n_245;
  wire DataPathInstantiate_n_246;
  wire DataPathInstantiate_n_247;
  wire DataPathInstantiate_n_248;
  wire DataPathInstantiate_n_249;
  wire DataPathInstantiate_n_250;
  wire DataPathInstantiate_n_251;
  wire DataPathInstantiate_n_252;
  wire DataPathInstantiate_n_253;
  wire DataPathInstantiate_n_254;
  wire DataPathInstantiate_n_255;
  wire DataPathInstantiate_n_256;
  wire DataPathInstantiate_n_257;
  wire DataPathInstantiate_n_258;
  wire DataPathInstantiate_n_259;
  wire DataPathInstantiate_n_260;
  wire DataPathInstantiate_n_27;
  wire DataPathInstantiate_n_28;
  wire DataPathInstantiate_n_29;
  wire DataPathInstantiate_n_293;
  wire DataPathInstantiate_n_30;
  wire DataPathInstantiate_n_36;
  wire DataPathInstantiate_n_37;
  wire DataPathInstantiate_n_38;
  wire DataPathInstantiate_n_39;
  wire [0:0]E;
  wire \FSM_sequential_state_reg[0] ;
  wire [0:0]\FSM_sequential_state_reg[0]_0 ;
  wire [0:0]\FSM_sequential_state_reg[0]_1 ;
  wire [0:0]\FSM_sequential_state_reg[0]_2 ;
  wire [0:0]\FSM_sequential_state_reg[1] ;
  wire [0:0]\FSM_sequential_state_reg[1]_0 ;
  wire [0:0]\FSM_sequential_state_reg[1]_1 ;
  wire [0:0]\FSM_sequential_state_reg[1]_2 ;
  wire [0:0]\FSM_sequential_state_reg[1]_3 ;
  wire Fset;
  wire MW;
  wire MainCtrlIns_n_3;
  wire MainCtrlIns_n_32;
  wire MainCtrlIns_n_33;
  wire MainCtrlIns_n_34;
  wire MainCtrlIns_n_35;
  wire MainCtrlIns_n_36;
  wire MainCtrlIns_n_37;
  wire MainCtrlIns_n_38;
  wire MainCtrlIns_n_39;
  wire MainCtrlIns_n_4;
  wire MainCtrlIns_n_40;
  wire MainCtrlIns_n_41;
  wire MainCtrlIns_n_5;
  wire MainCtrlIns_n_50;
  wire MainCtrlIns_n_51;
  wire MainCtrlIns_n_81;
  wire MainCtrlIns_n_82;
  wire MainCtrlIns_n_9;
  wire RW;
  wire Rsrc;
  wire [15:0]b_reg;
  wire [1:0]byte_offset;
  wire [0:0]\c_reg[0] ;
  wire [30:0]d_reg_temp;
  wire firstOrLast_IBUF;
  wire [1:1]flags_master;
  wire [2:2]flags_mult;
  wire [3:1]flags_sig;
  wire [15:0]leds_OBUF;
  wire memOrReg_IBUF;
  wire [31:3]mult_reg;
  wire [31:0]op1;
  wire [31:0]op2;
  wire [2:0]optype;
  wire [3:0]out;
  wire [30:0]output_ALU;
  wire output_big;
  wire output_big__0;
  wire \pc_reg[0] ;
  wire \pc_reg[31] ;
  wire [25:3]plusOp;
  wire [31:0]rd_mem;
  wire [9:0]read_switches_IBUF;
  wire \register_array_reg[0][15] ;
  wire \register_array_reg[0][31] ;
  wire [31:3]shift_reg;
  wire [3:3]state;
  wire [2:0]type_of_dt_ins;
  wire [15:8]wd_mem;

  Actrl ACtrlIns
       (.D(state),
        .DI(ACtrlIns_n_7),
        .\FSM_sequential_state_reg[0] (DataPathInstantiate_n_160),
        .\FSM_sequential_state_reg[0]_0 (DataPathInstantiate_n_241),
        .\FSM_sequential_state_reg[0]_1 (DataPathInstantiate_n_199),
        .\FSM_sequential_state_reg[0]_10 (DataPathInstantiate_n_236),
        .\FSM_sequential_state_reg[0]_11 (DataPathInstantiate_n_204),
        .\FSM_sequential_state_reg[0]_12 (DataPathInstantiate_n_235),
        .\FSM_sequential_state_reg[0]_13 (DataPathInstantiate_n_205),
        .\FSM_sequential_state_reg[0]_14 (DataPathInstantiate_n_234),
        .\FSM_sequential_state_reg[0]_15 (DataPathInstantiate_n_206),
        .\FSM_sequential_state_reg[0]_16 (DataPathInstantiate_n_233),
        .\FSM_sequential_state_reg[0]_17 (DataPathInstantiate_n_207),
        .\FSM_sequential_state_reg[0]_18 (DataPathInstantiate_n_232),
        .\FSM_sequential_state_reg[0]_19 (DataPathInstantiate_n_208),
        .\FSM_sequential_state_reg[0]_2 (DataPathInstantiate_n_240),
        .\FSM_sequential_state_reg[0]_20 (DataPathInstantiate_n_242),
        .\FSM_sequential_state_reg[0]_21 (DataPathInstantiate_n_209),
        .\FSM_sequential_state_reg[0]_22 (DataPathInstantiate_n_243),
        .\FSM_sequential_state_reg[0]_23 (DataPathInstantiate_n_210),
        .\FSM_sequential_state_reg[0]_24 (DataPathInstantiate_n_244),
        .\FSM_sequential_state_reg[0]_25 (DataPathInstantiate_n_211),
        .\FSM_sequential_state_reg[0]_26 (DataPathInstantiate_n_245),
        .\FSM_sequential_state_reg[0]_27 (DataPathInstantiate_n_212),
        .\FSM_sequential_state_reg[0]_28 (DataPathInstantiate_n_247),
        .\FSM_sequential_state_reg[0]_29 (DataPathInstantiate_n_213),
        .\FSM_sequential_state_reg[0]_3 (DataPathInstantiate_n_200),
        .\FSM_sequential_state_reg[0]_30 (DataPathInstantiate_n_246),
        .\FSM_sequential_state_reg[0]_31 (DataPathInstantiate_n_214),
        .\FSM_sequential_state_reg[0]_32 (DataPathInstantiate_n_253),
        .\FSM_sequential_state_reg[0]_33 (DataPathInstantiate_n_215),
        .\FSM_sequential_state_reg[0]_34 (DataPathInstantiate_n_252),
        .\FSM_sequential_state_reg[0]_35 (DataPathInstantiate_n_216),
        .\FSM_sequential_state_reg[0]_36 (DataPathInstantiate_n_251),
        .\FSM_sequential_state_reg[0]_37 (DataPathInstantiate_n_217),
        .\FSM_sequential_state_reg[0]_38 (DataPathInstantiate_n_250),
        .\FSM_sequential_state_reg[0]_39 (DataPathInstantiate_n_218),
        .\FSM_sequential_state_reg[0]_4 (DataPathInstantiate_n_239),
        .\FSM_sequential_state_reg[0]_40 (DataPathInstantiate_n_249),
        .\FSM_sequential_state_reg[0]_41 (DataPathInstantiate_n_219),
        .\FSM_sequential_state_reg[0]_42 (DataPathInstantiate_n_248),
        .\FSM_sequential_state_reg[0]_43 (DataPathInstantiate_n_220),
        .\FSM_sequential_state_reg[0]_44 (DataPathInstantiate_n_255),
        .\FSM_sequential_state_reg[0]_45 (DataPathInstantiate_n_221),
        .\FSM_sequential_state_reg[0]_46 (DataPathInstantiate_n_254),
        .\FSM_sequential_state_reg[0]_47 (DataPathInstantiate_n_259),
        .\FSM_sequential_state_reg[0]_48 (MainCtrlIns_n_32),
        .\FSM_sequential_state_reg[0]_49 (DataPathInstantiate_n_258),
        .\FSM_sequential_state_reg[0]_5 (DataPathInstantiate_n_201),
        .\FSM_sequential_state_reg[0]_50 (MainCtrlIns_n_34),
        .\FSM_sequential_state_reg[0]_51 (DataPathInstantiate_n_222),
        .\FSM_sequential_state_reg[0]_52 (DataPathInstantiate_n_257),
        .\FSM_sequential_state_reg[0]_53 (DataPathInstantiate_n_223),
        .\FSM_sequential_state_reg[0]_54 (DataPathInstantiate_n_256),
        .\FSM_sequential_state_reg[0]_55 (DataPathInstantiate_n_224),
        .\FSM_sequential_state_reg[0]_56 (DataPathInstantiate_n_225),
        .\FSM_sequential_state_reg[0]_57 (DataPathInstantiate_n_226),
        .\FSM_sequential_state_reg[0]_58 (DataPathInstantiate_n_230),
        .\FSM_sequential_state_reg[0]_59 ({DataPathInstantiate_n_27,DataPathInstantiate_n_28,DataPathInstantiate_n_29,DataPathInstantiate_n_30}),
        .\FSM_sequential_state_reg[0]_6 (DataPathInstantiate_n_238),
        .\FSM_sequential_state_reg[0]_7 (DataPathInstantiate_n_202),
        .\FSM_sequential_state_reg[0]_8 (DataPathInstantiate_n_237),
        .\FSM_sequential_state_reg[0]_9 (DataPathInstantiate_n_203),
        .Fset(Fset),
        .O(\ALU_Instantiate/data3 ),
        .Q(optype),
        .S(ACtrlIns_n_41),
        .c_31(\ALU_Instantiate/c_31 ),
        .data2({\ALU_Instantiate/data2 [31:28],\ALU_Instantiate/data2 [0]}),
        .data4({\ALU_Instantiate/data4 [31:20],\ALU_Instantiate/data4 [11:8],\ALU_Instantiate/data4 [5:4],\ALU_Instantiate/data4 [0]}),
        .data5({\ALU_Instantiate/data5 [31],\ALU_Instantiate/data5 [27:20],\ALU_Instantiate/data5 [11:8],\ALU_Instantiate/data5 [5:4]}),
        .flags_master(flags_master),
        .flags_mult(flags_mult),
        .flags_sig(flags_sig[1]),
        .op1(op1),
        .op2(op2),
        .out(out),
        .\pc_reg[0] (ACtrlIns_n_42),
        .\pc_reg[27] (DataPathInstantiate_n_227),
        .\pc_reg[27]_0 (DataPathInstantiate_n_228),
        .\pc_reg[31] (ACtrlIns_n_1),
        .\pc_reg[31]_0 ({flags_sig[3],output_ALU}),
        .\pc_reg[9] (ACtrlIns_n_2),
        .\pc_reg[9]_0 (ACtrlIns_n_3));
  DataPath DataPathInstantiate
       (.AR(AR),
        .Asrc2(Asrc2),
        .CLK(CLK),
        .CO(DataPathInstantiate_n_231),
        .D(D),
        .DI(ACtrlIns_n_7),
        .E(DataPathInstantiate_n_39),
        .\FSM_sequential_state_reg[0] (MainCtrlIns_n_50),
        .\FSM_sequential_state_reg[0]_0 (MainCtrlIns_n_51),
        .\FSM_sequential_state_reg[0]_1 (ACtrlIns_n_2),
        .\FSM_sequential_state_reg[0]_10 (\FSM_sequential_state_reg[0]_0 ),
        .\FSM_sequential_state_reg[0]_11 (\FSM_sequential_state_reg[0]_1 ),
        .\FSM_sequential_state_reg[0]_12 (\FSM_sequential_state_reg[0]_2 ),
        .\FSM_sequential_state_reg[0]_2 (ACtrlIns_n_3),
        .\FSM_sequential_state_reg[0]_3 (ACtrlIns_n_1),
        .\FSM_sequential_state_reg[0]_4 (MainCtrlIns_n_35),
        .\FSM_sequential_state_reg[0]_5 (MainCtrlIns_n_36),
        .\FSM_sequential_state_reg[0]_6 (MainCtrlIns_n_40),
        .\FSM_sequential_state_reg[0]_7 (MainCtrlIns_n_41),
        .\FSM_sequential_state_reg[0]_8 (MainCtrlIns_n_5),
        .\FSM_sequential_state_reg[0]_9 (MainCtrlIns_n_9),
        .\FSM_sequential_state_reg[1] (wd_mem),
        .\FSM_sequential_state_reg[1]_0 (ACtrlIns_n_42),
        .\FSM_sequential_state_reg[1]_1 (type_of_dt_ins),
        .\FSM_sequential_state_reg[1]_10 (\FSM_sequential_state_reg[1]_2 ),
        .\FSM_sequential_state_reg[1]_11 (\FSM_sequential_state_reg[1]_3 ),
        .\FSM_sequential_state_reg[1]_2 ({d_reg_temp[30:24],d_reg_temp[22:16],d_reg_temp[7:0]}),
        .\FSM_sequential_state_reg[1]_3 (MainCtrlIns_n_37),
        .\FSM_sequential_state_reg[1]_4 (MainCtrlIns_n_38),
        .\FSM_sequential_state_reg[1]_5 (MainCtrlIns_n_39),
        .\FSM_sequential_state_reg[1]_6 (E),
        .\FSM_sequential_state_reg[1]_7 (\FSM_sequential_state_reg[1] ),
        .\FSM_sequential_state_reg[1]_8 (\FSM_sequential_state_reg[1]_0 ),
        .\FSM_sequential_state_reg[1]_9 (\FSM_sequential_state_reg[1]_1 ),
        .\FSM_sequential_state_reg[2] (state),
        .\FSM_sequential_state_reg[2]_0 (optype),
        .\FSM_sequential_state_reg[2]_1 (output_ALU),
        .Fset(Fset),
        .MW(MW),
        .O(\ALU_Instantiate/data3 ),
        .Q(b_reg),
        .RW(RW),
        .Rsrc(Rsrc),
        .S(ACtrlIns_n_41),
        .byte_offset(byte_offset),
        .c_31(\ALU_Instantiate/c_31 ),
        .\c_reg[0] (\c_reg[0] ),
        .firstOrLast_IBUF(firstOrLast_IBUF),
        .flags_sig({flags_sig[3],flags_sig[1]}),
        .leds_OBUF(leds_OBUF),
        .memOrReg_IBUF(memOrReg_IBUF),
        .op1(op1),
        .op2(op2[31:3]),
        .out(out),
        .output_big(output_big),
        .output_big__0(output_big__0),
        .\pc_reg[0]_0 (flags_master),
        .\pc_reg[0]_1 (\pc_reg[0] ),
        .\pc_reg[0]_2 (DataPathInstantiate_n_207),
        .\pc_reg[0]_3 (DataPathInstantiate_n_232),
        .\pc_reg[0]_4 (flags_mult),
        .\pc_reg[10]_0 (DataPathInstantiate_n_208),
        .\pc_reg[10]_1 (DataPathInstantiate_n_242),
        .\pc_reg[11]_0 (DataPathInstantiate_n_209),
        .\pc_reg[11]_1 (DataPathInstantiate_n_243),
        .\pc_reg[12]_0 (DataPathInstantiate_n_210),
        .\pc_reg[12]_1 (DataPathInstantiate_n_244),
        .\pc_reg[13]_0 (DataPathInstantiate_n_211),
        .\pc_reg[13]_1 (DataPathInstantiate_n_245),
        .\pc_reg[14]_0 (DataPathInstantiate_n_213),
        .\pc_reg[14]_1 (DataPathInstantiate_n_246),
        .\pc_reg[15]_0 (DataPathInstantiate_n_212),
        .\pc_reg[15]_1 (DataPathInstantiate_n_247),
        .\pc_reg[16]_0 (DataPathInstantiate_n_219),
        .\pc_reg[16]_1 (DataPathInstantiate_n_248),
        .\pc_reg[17]_0 (DataPathInstantiate_n_218),
        .\pc_reg[17]_1 (DataPathInstantiate_n_249),
        .\pc_reg[18]_0 (DataPathInstantiate_n_217),
        .\pc_reg[18]_1 (DataPathInstantiate_n_250),
        .\pc_reg[19]_0 (DataPathInstantiate_n_216),
        .\pc_reg[19]_1 (DataPathInstantiate_n_251),
        .\pc_reg[1]_0 (DataPathInstantiate_n_206),
        .\pc_reg[1]_1 (DataPathInstantiate_n_233),
        .\pc_reg[20]_0 (DataPathInstantiate_n_215),
        .\pc_reg[20]_1 (DataPathInstantiate_n_252),
        .\pc_reg[21]_0 (DataPathInstantiate_n_214),
        .\pc_reg[21]_1 (DataPathInstantiate_n_253),
        .\pc_reg[22]_0 (DataPathInstantiate_n_221),
        .\pc_reg[22]_1 (DataPathInstantiate_n_254),
        .\pc_reg[23]_0 (DataPathInstantiate_n_220),
        .\pc_reg[23]_1 (DataPathInstantiate_n_255),
        .\pc_reg[24]_0 (DataPathInstantiate_n_223),
        .\pc_reg[24]_1 (DataPathInstantiate_n_256),
        .\pc_reg[25]_0 (plusOp),
        .\pc_reg[25]_1 (DataPathInstantiate_n_222),
        .\pc_reg[25]_2 (DataPathInstantiate_n_257),
        .\pc_reg[26]_0 (DataPathInstantiate_n_228),
        .\pc_reg[26]_1 (DataPathInstantiate_n_258),
        .\pc_reg[27]_0 (DataPathInstantiate_n_227),
        .\pc_reg[27]_1 (DataPathInstantiate_n_259),
        .\pc_reg[28]_0 (DataPathInstantiate_n_225),
        .\pc_reg[29]_0 (DataPathInstantiate_n_224),
        .\pc_reg[2]_0 (op2[2:0]),
        .\pc_reg[2]_1 (DataPathInstantiate_n_205),
        .\pc_reg[2]_2 (DataPathInstantiate_n_234),
        .\pc_reg[30]_0 (DataPathInstantiate_n_226),
        .\pc_reg[31]_0 ({DataPathInstantiate_n_27,DataPathInstantiate_n_28,DataPathInstantiate_n_29,DataPathInstantiate_n_30}),
        .\pc_reg[31]_1 (mult_reg),
        .\pc_reg[31]_2 (shift_reg),
        .\pc_reg[31]_3 ({\ALU_Instantiate/data4 [31:20],\ALU_Instantiate/data4 [11:8],\ALU_Instantiate/data4 [5:4],\ALU_Instantiate/data4 [0]}),
        .\pc_reg[31]_4 ({\ALU_Instantiate/data2 [31:28],\ALU_Instantiate/data2 [0]}),
        .\pc_reg[31]_5 ({\ALU_Instantiate/data5 [31],\ALU_Instantiate/data5 [27:20],\ALU_Instantiate/data5 [11:8],\ALU_Instantiate/data5 [5:4]}),
        .\pc_reg[31]_6 (DataPathInstantiate_n_230),
        .\pc_reg[31]_7 (\pc_reg[31] ),
        .\pc_reg[3]_0 (DataPathInstantiate_n_204),
        .\pc_reg[3]_1 (DataPathInstantiate_n_235),
        .\pc_reg[4]_0 (DataPathInstantiate_n_203),
        .\pc_reg[4]_1 (DataPathInstantiate_n_236),
        .\pc_reg[5]_0 (DataPathInstantiate_n_202),
        .\pc_reg[5]_1 (DataPathInstantiate_n_237),
        .\pc_reg[6]_0 (DataPathInstantiate_n_201),
        .\pc_reg[6]_1 (DataPathInstantiate_n_238),
        .\pc_reg[7]_0 (DataPathInstantiate_n_200),
        .\pc_reg[7]_1 (DataPathInstantiate_n_239),
        .\pc_reg[8]_0 (DataPathInstantiate_n_199),
        .\pc_reg[8]_1 (DataPathInstantiate_n_240),
        .\pc_reg[9]_0 (DataPathInstantiate_n_160),
        .\pc_reg[9]_1 (DataPathInstantiate_n_241),
        .\prev_state_reg[0] (MainCtrlIns_n_82),
        .\prev_state_reg[2] (MainCtrlIns_n_81),
        .\prev_state_reg[2]_0 (MainCtrlIns_n_33),
        .\prev_state_reg[3] (MainCtrlIns_n_4),
        .\prev_state_reg[3]_0 (MainCtrlIns_n_3),
        .read_switches_IBUF(read_switches_IBUF),
        .\register_array_reg[0][14] (DataPathInstantiate_n_260),
        .\register_array_reg[0][15] (\register_array_reg[0][15] ),
        .\register_array_reg[0][15]_0 (rd_mem),
        .\register_array_reg[0][15]_1 (DataPathInstantiate_n_293),
        .\register_array_reg[0][23] (DataPathInstantiate_n_158),
        .\register_array_reg[0][30] ({DataPathInstantiate_n_36,DataPathInstantiate_n_37,DataPathInstantiate_n_38}),
        .\register_array_reg[0][31] (\register_array_reg[0][31] ),
        .\register_array_reg[15][0] (DataPathInstantiate_n_23),
        .\register_array_reg[15][0]_0 (DataPathInstantiate_n_159));
  MainCtrl MainCtrlIns
       (.AR(AR),
        .Asrc2(Asrc2),
        .CLK(CLK),
        .CO(DataPathInstantiate_n_231),
        .D(state),
        .E(DataPathInstantiate_n_39),
        .\FSM_sequential_state_reg[0] (DataPathInstantiate_n_159),
        .\FSM_sequential_state_reg[0]_0 (\FSM_sequential_state_reg[0] ),
        .\FSM_sequential_state_reg[0]_1 (rd_mem),
        .\FSM_sequential_state_reg[0]_2 (DataPathInstantiate_n_260),
        .\FSM_sequential_state_reg[0]_3 (DataPathInstantiate_n_293),
        .\FSM_sequential_state_reg[0]_4 (shift_reg),
        .\FSM_sequential_state_reg[1] (\pc_reg[0] ),
        .\FSM_sequential_state_reg[1]_0 (DataPathInstantiate_n_158),
        .\FSM_sequential_state_reg[1]_1 (b_reg),
        .\FSM_sequential_state_reg[1]_2 (plusOp),
        .\FSM_sequential_state_reg[1]_3 ({DataPathInstantiate_n_36,DataPathInstantiate_n_37,DataPathInstantiate_n_38}),
        .\FSM_sequential_state_reg[2] (optype[0]),
        .\FSM_sequential_state_reg[3] (DataPathInstantiate_n_23),
        .MW(MW),
        .Q(type_of_dt_ins),
        .RW(RW),
        .Rsrc(Rsrc),
        .byte_offset(byte_offset),
        .op1(op1[27:26]),
        .op2(op2[31:3]),
        .out(out),
        .output_big__2(mult_reg),
        .\pc_reg[0] (MainCtrlIns_n_3),
        .\pc_reg[0]_0 (MainCtrlIns_n_4),
        .\pc_reg[26] (MainCtrlIns_n_34),
        .\pc_reg[27] (MainCtrlIns_n_32),
        .\pc_reg[27]_0 (MainCtrlIns_n_33),
        .\pc_reg[3] (MainCtrlIns_n_81),
        .\pc_reg[3]_0 (MainCtrlIns_n_82),
        .\register_array_reg[0][0] (MainCtrlIns_n_35),
        .\register_array_reg[0][14] (MainCtrlIns_n_36),
        .\register_array_reg[0][15] (MainCtrlIns_n_37),
        .\register_array_reg[0][15]_0 (MainCtrlIns_n_38),
        .\register_array_reg[0][23] (MainCtrlIns_n_5),
        .\register_array_reg[0][23]_0 (MainCtrlIns_n_40),
        .\register_array_reg[0][23]_1 (wd_mem),
        .\register_array_reg[0][23]_2 (MainCtrlIns_n_50),
        .\register_array_reg[0][30] ({d_reg_temp[30:24],d_reg_temp[22:16],d_reg_temp[7:0]}),
        .\register_array_reg[0][31] (MainCtrlIns_n_39),
        .\register_array_reg[0][31]_0 (MainCtrlIns_n_41),
        .\register_array_reg[0][6] (MainCtrlIns_n_9),
        .\register_array_reg[0][6]_0 (MainCtrlIns_n_51));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
